{"id":"0644445302b4da37855c398dc2d3191f","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC5267.sol)\n\npragma solidity >=0.4.16;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /// @inheritdoc IERC20Permit\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /// @inheritdoc IERC20Permit\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /// @inheritdoc IERC20Permit\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /// @inheritdoc IERC5267\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/GreenHydrogenCredit.sol":{"content":"// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.4.0\npragma solidity ^0.8.27;\n\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport {ERC20Pausable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport {ERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\n\n/// @custom:security-contact veeramehta09@gmail.com\ncontract GreenHydrogenCredit is ERC20, ERC20Burnable, ERC20Pausable, AccessControl, ERC20Permit {\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor(address defaultAdmin, address pauser, address minter)\n        ERC20(\"GreenHydrogenCredit\", \"GHC\")\n        ERC20Permit(\"GreenHydrogenCredit\")\n    {\n        _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin);\n        _grantRole(PAUSER_ROLE, pauser);\n        _grantRole(MINTER_ROLE, minter);\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address from, address to, uint256 value)\n        internal\n        override(ERC20, ERC20Pausable)\n    {\n        super._update(from, to, value);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[296],"Context":[1460],"ERC165":[4116],"IAccessControl":[379],"IERC165":[4128]},"id":297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":380,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":1461,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":4117,"src":"233:66:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"241:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":7,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"250:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":10,"name":"Context","nameLocations":["1997:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1460,"src":"1997:7:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1997:7:0"},{"baseName":{"id":12,"name":"IAccessControl","nameLocations":["2006:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"2006:14:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"2006:14:0"},{"baseName":{"id":14,"name":"ERC165","nameLocations":["2022:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":4116,"src":"2022:6:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"2022:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"301:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":296,"linearizedBaseContracts":[296,4116,4128,379,1460],"name":"AccessControl","nameLocation":"1980:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":22,"members":[{"constant":false,"id":19,"mutability":"mutable","name":"hasRole","nameLocation":"2094:7:0","nodeType":"VariableDeclaration","scope":22,"src":"2061:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":18,"keyName":"account","keyNameLocation":"2077:7:0","keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2061:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"2088:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"adminRole","nameLocation":"2119:9:0","nodeType":"VariableDeclaration","scope":22,"src":"2111:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2042:8:0","nodeType":"StructDefinition","scope":296,"src":"2035:100:0","visibility":"public"},{"constant":false,"id":27,"mutability":"mutable","name":"_roles","nameLocation":"2183:6:0","nodeType":"VariableDeclaration","scope":296,"src":"2141:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":26,"keyName":"role","keyNameLocation":"2157:4:0","keyType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2141:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"RoleData","nameLocations":["2165:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"2165:8:0"},"referencedDeclaration":22,"src":"2165:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":30,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2220:18:0","nodeType":"VariableDeclaration","scope":296,"src":"2196:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2196:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":40,"nodeType":"Block","src":"2463:44:0","statements":[{"expression":{"arguments":[{"id":36,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":35,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":94,"src":"2473:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2473:16:0"},{"id":39,"nodeType":"PlaceholderStatement","src":"2499:1:0"}]},"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"2252:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":41,"name":"onlyRole","nameLocation":"2440:8:0","nodeType":"ModifierDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"role","nameLocation":"2457:4:0","nodeType":"VariableDeclaration","scope":41,"src":"2449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:14:0"},"src":"2431:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[4115],"body":{"id":62,"nodeType":"Block","src":"2632:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":50,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2649:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":52,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2669:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}],"id":51,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2664:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$379","typeString":"type(contract IAccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2685:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2664:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2649:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":58,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2724:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":56,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2700:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$296_$","typeString":"type(contract super AccessControl)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2706:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4115,"src":"2700:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2700:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2649:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49,"id":61,"nodeType":"Return","src":"2642:94:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2513:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":63,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2550:17:0","nodeType":"FunctionDefinition","overrides":{"id":46,"nodeType":"OverrideSpecifier","overrides":[],"src":"2608:8:0"},"parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"interfaceId","nameLocation":"2575:11:0","nodeType":"VariableDeclaration","scope":63,"src":"2568:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":43,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2568:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2567:20:0"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"2626:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47,"name":"bool","nodeType":"ElementaryTypeName","src":"2626:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2625:6:0"},"scope":296,"src":"2541:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[346],"body":{"id":80,"nodeType":"Block","src":"2913:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":73,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2930:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":75,"indexExpression":{"id":74,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"2937:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":76,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2943:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"2930:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":78,"indexExpression":{"id":77,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2951:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":72,"id":79,"nodeType":"Return","src":"2923:36:0"}]},"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"2749:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":81,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2839:7:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"role","nameLocation":"2855:4:0","nodeType":"VariableDeclaration","scope":81,"src":"2847:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2847:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"account","nameLocation":"2869:7:0","nodeType":"VariableDeclaration","scope":81,"src":"2861:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"2861:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2846:31:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":81,"src":"2907:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":70,"name":"bool","nodeType":"ElementaryTypeName","src":"2907:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2906:6:0"},"scope":296,"src":"2830:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":93,"nodeType":"Block","src":"3231:47:0","statements":[{"expression":{"arguments":[{"id":88,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3252:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":89,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"3258:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":87,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":115,"src":"3241:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3241:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":92,"nodeType":"ExpressionStatement","src":"3241:30:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2972:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":94,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3184:10:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"role","nameLocation":"3203:4:0","nodeType":"VariableDeclaration","scope":94,"src":"3195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3194:14:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"3231:0:0"},"scope":296,"src":"3175:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"3481:124:0","statements":[{"condition":{"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3495:23:0","subExpression":{"arguments":[{"id":103,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3504:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":104,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3510:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":102,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"3496:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3496:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":113,"nodeType":"IfStatement","src":"3491:108:0","trueBody":{"id":112,"nodeType":"Block","src":"3520:79:0","statements":[{"errorCall":{"arguments":[{"id":108,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3574:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3583:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":107,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3541:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":111,"nodeType":"RevertStatement","src":"3534:54:0"}]}}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3284:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3417:10:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"role","nameLocation":"3436:4:0","nodeType":"VariableDeclaration","scope":115,"src":"3428:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3428:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"account","nameLocation":"3450:7:0","nodeType":"VariableDeclaration","scope":115,"src":"3442:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"3442:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:31:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[],"src":"3481:0:0"},"scope":296,"src":"3408:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[354],"body":{"id":128,"nodeType":"Block","src":"3860:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":123,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3877:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":125,"indexExpression":{"id":124,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"3884:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3877:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3890:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"3877:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":122,"id":127,"nodeType":"Return","src":"3870:29:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3611:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":129,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3795:12:0","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"role","nameLocation":"3816:4:0","nodeType":"VariableDeclaration","scope":129,"src":"3808:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3808:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3807:14:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":129,"src":"3851:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3850:9:0"},"scope":296,"src":"3786:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[362],"body":{"id":147,"nodeType":"Block","src":"4296:42:0","statements":[{"expression":{"arguments":[{"id":143,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4317:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":144,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4323:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":142,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4306:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":146,"nodeType":"ExpressionStatement","src":"4306:25:0"}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"3912:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":148,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4289:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":137,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4276:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":140,"kind":"modifierInvocation","modifierName":{"id":136,"name":"onlyRole","nameLocations":["4267:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4267:8:0"},"nodeType":"ModifierInvocation","src":"4267:28:0"}],"name":"grantRole","nameLocation":"4211:9:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4229:4:0","nodeType":"VariableDeclaration","scope":148,"src":"4221:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4221:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4243:7:0","nodeType":"VariableDeclaration","scope":148,"src":"4235:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4235:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4220:31:0"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"4296:0:0"},"scope":296,"src":"4202:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[370],"body":{"id":166,"nodeType":"Block","src":"4713:43:0","statements":[{"expression":{"arguments":[{"id":162,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4735:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":163,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4741:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":161,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4723:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":165,"nodeType":"ExpressionStatement","src":"4723:26:0"}]},"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"4344:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":167,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":157,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4706:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":156,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4693:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4693:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":159,"kind":"modifierInvocation","modifierName":{"id":155,"name":"onlyRole","nameLocations":["4684:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4684:8:0"},"nodeType":"ModifierInvocation","src":"4684:28:0"}],"name":"revokeRole","nameLocation":"4627:10:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"role","nameLocation":"4646:4:0","nodeType":"VariableDeclaration","scope":167,"src":"4638:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4638:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"account","nameLocation":"4660:7:0","nodeType":"VariableDeclaration","scope":167,"src":"4652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4637:31:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"4713:0:0"},"scope":296,"src":"4618:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[378],"body":{"id":189,"nodeType":"Block","src":"5383:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":175,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5397:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":176,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"5419:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5419:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5397:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":183,"nodeType":"IfStatement","src":"5393:102:0","trueBody":{"id":182,"nodeType":"Block","src":"5433:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":179,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5454:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5454:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":181,"nodeType":"RevertStatement","src":"5447:37:0"}]}},{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"5517:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5523:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5505:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5505:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5505:37:0"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"4762:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":190,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5313:12:0","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"role","nameLocation":"5334:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5326:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5348:18:0","nodeType":"VariableDeclaration","scope":190,"src":"5340:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"5340:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5325:42:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5383:0:0"},"scope":296,"src":"5304:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":217,"nodeType":"Block","src":"5747:174:0","statements":[{"assignments":[199],"declarations":[{"constant":false,"id":199,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5765:17:0","nodeType":"VariableDeclaration","scope":217,"src":"5757:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5757:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":203,"initialValue":{"arguments":[{"id":201,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5785:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5757:46:0"},{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":204,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5813:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":206,"indexExpression":{"id":205,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5820:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5813:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"5813:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":208,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5838:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5813:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":210,"nodeType":"ExpressionStatement","src":"5813:34:0"},{"eventCall":{"arguments":[{"id":212,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5879:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"5885:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":214,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5904:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":211,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5862:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"EmitStatement","src":"5857:57:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5555:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":218,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5683:13:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5705:4:0","nodeType":"VariableDeclaration","scope":218,"src":"5697:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5697:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"adminRole","nameLocation":"5719:9:0","nodeType":"VariableDeclaration","scope":218,"src":"5711:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5711:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5696:33:0"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"5747:0:0"},"scope":296,"src":"5674:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":256,"nodeType":"Block","src":"6238:233:0","statements":[{"condition":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6252:23:0","subExpression":{"arguments":[{"id":229,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6261:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":230,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6267:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6253:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6253:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":254,"nodeType":"Block","src":"6428:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6449:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":227,"id":253,"nodeType":"Return","src":"6442:12:0"}]},"id":255,"nodeType":"IfStatement","src":"6248:217:0","trueBody":{"id":251,"nodeType":"Block","src":"6277:145:0","statements":[{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":233,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6291:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":235,"indexExpression":{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6298:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6291:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6304:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6291:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":238,"indexExpression":{"id":237,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6312:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6291:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6323:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6291:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":241,"nodeType":"ExpressionStatement","src":"6291:36:0"},{"eventCall":{"arguments":[{"id":243,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6358:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":244,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6364:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"6373:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":242,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6346:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"EmitStatement","src":"6341:45:0"},{"expression":{"hexValue":"74727565","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6407:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":227,"id":250,"nodeType":"Return","src":"6400:11:0"}]}}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"5927:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":257,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6164:10:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"role","nameLocation":"6183:4:0","nodeType":"VariableDeclaration","scope":257,"src":"6175:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6175:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"account","nameLocation":"6197:7:0","nodeType":"VariableDeclaration","scope":257,"src":"6189:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"6189:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6174:31:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"6232:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"6232:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6231:6:0"},"scope":296,"src":"6155:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"6792:233:0","statements":[{"condition":{"arguments":[{"id":268,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":269,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":267,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":292,"nodeType":"Block","src":"6982:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7003:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":266,"id":291,"nodeType":"Return","src":"6996:12:0"}]},"id":293,"nodeType":"IfStatement","src":"6802:217:0","trueBody":{"id":289,"nodeType":"Block","src":"6830:146:0","statements":[{"expression":{"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":271,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6844:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":273,"indexExpression":{"id":272,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6851:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6844:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6857:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6844:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":276,"indexExpression":{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6865:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6844:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6876:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6844:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":279,"nodeType":"ExpressionStatement","src":"6844:37:0"},{"eventCall":{"arguments":[{"id":281,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6912:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":282,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6918:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"6927:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6927:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":280,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"6900:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6900:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"EmitStatement","src":"6895:45:0"},{"expression":{"hexValue":"74727565","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6961:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":266,"id":288,"nodeType":"Return","src":"6954:11:0"}]}}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"6477:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6717:11:0","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"role","nameLocation":"6737:4:0","nodeType":"VariableDeclaration","scope":295,"src":"6729:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6729:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"account","nameLocation":"6751:7:0","nodeType":"VariableDeclaration","scope":295,"src":"6743:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"6743:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6728:31:0"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"6786:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":264,"name":"bool","nodeType":"ElementaryTypeName","src":"6786:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6785:6:0"},"scope":296,"src":"6708:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":297,"src":"1962:5065:0","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"108:6920:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[379]},"id":380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":298,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":379,"linearizedBaseContracts":[379],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":306,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":306,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":306,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":309,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":318,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":318,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":318,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":318,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":327,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":327,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":327,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":327,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":336,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":336,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":336,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":336,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":346,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":346,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":346,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":379,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":354,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":354,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":379,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":362,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":362,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":362,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":379,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":370,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":370,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":370,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":379,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":378,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":378,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":379,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":380,"src":"226:3116:1","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[404]},"id":405,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":381,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"107:25:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":404,"linearizedBaseContracts":[404],"name":"IERC5267","nameLocation":"144:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"159:84:2","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":384,"name":"EIP712DomainChanged","nameLocation":"254:19:2","nodeType":"EventDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"273:2:2"},"src":"248:28:2"},{"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"282:140:2","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":403,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"436:12:2","nodeType":"FunctionDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"448:2:2"},"returnParameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"fields","nameLocation":"518:6:2","nodeType":"VariableDeclaration","scope":403,"src":"511:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":387,"name":"bytes1","nodeType":"ElementaryTypeName","src":"511:6:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"name","nameLocation":"552:4:2","nodeType":"VariableDeclaration","scope":403,"src":"538:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":389,"name":"string","nodeType":"ElementaryTypeName","src":"538:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"version","nameLocation":"584:7:2","nodeType":"VariableDeclaration","scope":403,"src":"570:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":391,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"chainId","nameLocation":"613:7:2","nodeType":"VariableDeclaration","scope":403,"src":"605:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"verifyingContract","nameLocation":"642:17:2","nodeType":"VariableDeclaration","scope":403,"src":"634:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"salt","nameLocation":"681:4:2","nodeType":"VariableDeclaration","scope":403,"src":"673:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"673:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"extensions","nameLocation":"716:10:2","nodeType":"VariableDeclaration","scope":403,"src":"699:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ArrayTypeName","src":"699:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"497:239:2"},"scope":404,"src":"427:310:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":405,"src":"134:605:2","usedErrors":[],"usedEvents":[384]}],"src":"107:633:2"},"id":2},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[541],"IERC20Errors":[446],"IERC721Errors":[494]},"id":542,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":406,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"138:141:3","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":446,"linearizedBaseContracts":[446],"name":"IERC20Errors","nameLocation":"290:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"309:309:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":416,"name":"ERC20InsufficientBalance","nameLocation":"629:24:3","nodeType":"ErrorDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"sender","nameLocation":"662:6:3","nodeType":"VariableDeclaration","scope":416,"src":"654:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"balance","nameLocation":"678:7:3","nodeType":"VariableDeclaration","scope":416,"src":"670:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"needed","nameLocation":"695:6:3","nodeType":"VariableDeclaration","scope":416,"src":"687:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:3"},"src":"623:80:3"},{"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"709:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":421,"name":"ERC20InvalidSender","nameLocation":"872:18:3","nodeType":"ErrorDefinition","parameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"sender","nameLocation":"899:6:3","nodeType":"VariableDeclaration","scope":421,"src":"891:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:3"},"src":"866:41:3"},{"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"913:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":426,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:3","nodeType":"ErrorDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:3","nodeType":"VariableDeclaration","scope":426,"src":"1104:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:3"},"src":"1077:45:3"},{"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"1128:345:3","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":435,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:3","nodeType":"ErrorDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"spender","nameLocation":"1519:7:3","nodeType":"VariableDeclaration","scope":435,"src":"1511:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:3","nodeType":"VariableDeclaration","scope":435,"src":"1528:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"needed","nameLocation":"1555:6:3","nodeType":"VariableDeclaration","scope":435,"src":"1547:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:3"},"src":"1478:85:3"},{"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"1569:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":440,"name":"ERC20InvalidApprover","nameLocation":"1754:20:3","nodeType":"ErrorDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"approver","nameLocation":"1783:8:3","nodeType":"VariableDeclaration","scope":440,"src":"1775:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:3"},"src":"1748:45:3"},{"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"1799:195:3","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":445,"name":"ERC20InvalidSpender","nameLocation":"2005:19:3","nodeType":"ErrorDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"spender","nameLocation":"2033:7:3","nodeType":"VariableDeclaration","scope":445,"src":"2025:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:3"},"src":"1999:43:3"}],"scope":542,"src":"280:1764:3","usedErrors":[416,421,426,435,440,445],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"2046:143:3","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":494,"linearizedBaseContracts":[494],"name":"IERC721Errors","nameLocation":"2200:13:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"2220:219:3","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":452,"name":"ERC721InvalidOwner","nameLocation":"2450:18:3","nodeType":"ErrorDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"owner","nameLocation":"2477:5:3","nodeType":"VariableDeclaration","scope":452,"src":"2469:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:3"},"src":"2444:40:3"},{"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"2490:132:3","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":457,"name":"ERC721NonexistentToken","nameLocation":"2633:22:3","nodeType":"ErrorDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:3","nodeType":"VariableDeclaration","scope":457,"src":"2656:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:3"},"src":"2627:46:3"},{"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"2679:289:3","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":466,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:3","nodeType":"ErrorDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"sender","nameLocation":"3008:6:3","nodeType":"VariableDeclaration","scope":466,"src":"3000:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:3","nodeType":"VariableDeclaration","scope":466,"src":"3016:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"owner","nameLocation":"3041:5:3","nodeType":"VariableDeclaration","scope":466,"src":"3033:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:3"},"src":"2973:75:3"},{"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"3054:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":471,"name":"ERC721InvalidSender","nameLocation":"3217:19:3","nodeType":"ErrorDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"sender","nameLocation":"3245:6:3","nodeType":"VariableDeclaration","scope":471,"src":"3237:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:3"},"src":"3211:42:3"},{"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"3259:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":476,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:3","nodeType":"ErrorDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:3","nodeType":"VariableDeclaration","scope":476,"src":"3451:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:3"},"src":"3423:46:3"},{"documentation":{"id":477,"nodeType":"StructuredDocumentation","src":"3475:247:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":483,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:3","nodeType":"ErrorDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"operator","nameLocation":"3768:8:3","nodeType":"VariableDeclaration","scope":483,"src":"3760:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:3","nodeType":"VariableDeclaration","scope":483,"src":"3778:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":480,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:3"},"src":"3727:68:3"},{"documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"3801:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":488,"name":"ERC721InvalidApprover","nameLocation":"3986:21:3","nodeType":"ErrorDefinition","parameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"approver","nameLocation":"4016:8:3","nodeType":"VariableDeclaration","scope":488,"src":"4008:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:3"},"src":"3980:46:3"},{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"4032:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":493,"name":"ERC721InvalidOperator","nameLocation":"4240:21:3","nodeType":"ErrorDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"operator","nameLocation":"4270:8:3","nodeType":"VariableDeclaration","scope":493,"src":"4262:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:3"},"src":"4234:46:3"}],"scope":542,"src":"2190:2092:3","usedErrors":[452,457,466,471,476,483,488,493],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"4284:145:3","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":541,"linearizedBaseContracts":[541],"name":"IERC1155Errors","nameLocation":"4440:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":496,"nodeType":"StructuredDocumentation","src":"4461:361:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":506,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:3","nodeType":"ErrorDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"sender","nameLocation":"4868:6:3","nodeType":"VariableDeclaration","scope":506,"src":"4860:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":500,"mutability":"mutable","name":"balance","nameLocation":"4884:7:3","nodeType":"VariableDeclaration","scope":506,"src":"4876:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":499,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":502,"mutability":"mutable","name":"needed","nameLocation":"4901:6:3","nodeType":"VariableDeclaration","scope":506,"src":"4893:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":504,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:3","nodeType":"VariableDeclaration","scope":506,"src":"4909:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":503,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:3"},"src":"4827:99:3"},{"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"4932:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":511,"name":"ERC1155InvalidSender","nameLocation":"5095:20:3","nodeType":"ErrorDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"sender","nameLocation":"5124:6:3","nodeType":"VariableDeclaration","scope":511,"src":"5116:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:3"},"src":"5089:43:3"},{"documentation":{"id":512,"nodeType":"StructuredDocumentation","src":"5138:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":516,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:3","nodeType":"ErrorDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:3","nodeType":"VariableDeclaration","scope":516,"src":"5331:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:3"},"src":"5302:47:3"},{"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"5355:256:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":523,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:3","nodeType":"ErrorDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"operator","nameLocation":"5659:8:3","nodeType":"VariableDeclaration","scope":523,"src":"5651:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"owner","nameLocation":"5677:5:3","nodeType":"VariableDeclaration","scope":523,"src":"5669:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:3"},"src":"5616:68:3"},{"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"5690:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":528,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:3","nodeType":"ErrorDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"approver","nameLocation":"5906:8:3","nodeType":"VariableDeclaration","scope":528,"src":"5898:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:3"},"src":"5869:47:3"},{"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"5922:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":533,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:3","nodeType":"ErrorDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"operator","nameLocation":"6161:8:3","nodeType":"VariableDeclaration","scope":533,"src":"6153:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:3"},"src":"6124:47:3"},{"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"6177:280:3","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":540,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:3","nodeType":"ErrorDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:3","nodeType":"VariableDeclaration","scope":540,"src":"6494:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:3","nodeType":"VariableDeclaration","scope":540,"src":"6513:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:3"},"src":"6462:73:3"}],"scope":542,"src":"4430:2107:3","usedErrors":[506,511,516,523,528,533,540],"usedEvents":[]}],"src":"112:6426:3"},"id":3},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1460],"ERC20":[1056],"IERC20":[1134],"IERC20Errors":[446],"IERC20Metadata":[1394]},"id":1057,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":543,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":545,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":1135,"src":"131:36:4","symbolAliases":[{"foreign":{"id":544,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"139:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":547,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":1395,"src":"168:63:4","symbolAliases":[{"foreign":{"id":546,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"176:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":549,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":1461,"src":"232:48:4","symbolAliases":[{"foreign":{"id":548,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"240:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":551,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":542,"src":"281:65:4","symbolAliases":[{"foreign":{"id":550,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"289:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":553,"name":"Context","nameLocations":["1133:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1460,"src":"1133:7:4"},"id":554,"nodeType":"InheritanceSpecifier","src":"1133:7:4"},{"baseName":{"id":555,"name":"IERC20","nameLocations":["1142:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1134,"src":"1142:6:4"},"id":556,"nodeType":"InheritanceSpecifier","src":"1142:6:4"},{"baseName":{"id":557,"name":"IERC20Metadata","nameLocations":["1150:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":1394,"src":"1150:14:4"},"id":558,"nodeType":"InheritanceSpecifier","src":"1150:14:4"},{"baseName":{"id":559,"name":"IERC20Errors","nameLocations":["1166:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":446,"src":"1166:12:4"},"id":560,"nodeType":"InheritanceSpecifier","src":"1166:12:4"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":552,"nodeType":"StructuredDocumentation","src":"348:757:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1056,"linearizedBaseContracts":[1056,446,1394,1134,1460],"name":"ERC20","nameLocation":"1124:5:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":564,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:4","nodeType":"VariableDeclaration","scope":1056,"src":"1185:53:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":563,"keyName":"account","keyNameLocation":"1201:7:4","keyType":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":570,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:4","nodeType":"VariableDeclaration","scope":1056,"src":"1245:83:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":569,"keyName":"account","keyNameLocation":"1261:7:4","keyType":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":568,"keyName":"spender","keyNameLocation":"1288:7:4","keyType":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":572,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:4","nodeType":"VariableDeclaration","scope":1056,"src":"1335:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":574,"mutability":"mutable","name":"_name","nameLocation":"1385:5:4","nodeType":"VariableDeclaration","scope":1056,"src":"1370:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":573,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":576,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:4","nodeType":"VariableDeclaration","scope":1056,"src":"1396:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":575,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":592,"nodeType":"Block","src":"1638:57:4","statements":[{"expression":{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":584,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"1648:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":585,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"1656:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":587,"nodeType":"ExpressionStatement","src":"1648:13:4"},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":588,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"1671:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":589,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"1681:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":591,"nodeType":"ExpressionStatement","src":"1671:17:4"}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"1425:152:4","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":593,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"name_","nameLocation":"1608:5:4","nodeType":"VariableDeclaration","scope":593,"src":"1594:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":578,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:4","nodeType":"VariableDeclaration","scope":593,"src":"1615:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":580,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:4"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"1638:0:4"},"scope":1056,"src":"1582:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1381],"body":{"id":601,"nodeType":"Block","src":"1820:29:4","statements":[{"expression":{"id":599,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"1837:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":598,"id":600,"nodeType":"Return","src":"1830:12:4"}]},"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"1701:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":602,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:4","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"1773:2:4"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":602,"src":"1805:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":596,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:4"},"scope":1056,"src":"1760:89:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1387],"body":{"id":610,"nodeType":"Block","src":"2024:31:4","statements":[{"expression":{"id":608,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"2041:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":607,"id":609,"nodeType":"Return","src":"2034:14:4"}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"1855:102:4","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":611,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:4","nodeType":"FunctionDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[],"src":"1977:2:4"},"returnParameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":611,"src":"2009:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":605,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:4"},"scope":1056,"src":"1962:93:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1393],"body":{"id":619,"nodeType":"Block","src":"2744:26:4","statements":[{"expression":{"hexValue":"3138","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":616,"id":618,"nodeType":"Return","src":"2754:9:4"}]},"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"2061:622:4","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":620,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:4","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"2705:2:4"},"returnParameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":620,"src":"2737:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":614,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:4"},"scope":1056,"src":"2688:82:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1083],"body":{"id":628,"nodeType":"Block","src":"2864:36:4","statements":[{"expression":{"id":626,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"2881:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":625,"id":627,"nodeType":"Return","src":"2874:19:4"}]},"documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"2776:22:4","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":629,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2812:11:4","nodeType":"FunctionDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[],"src":"2823:2:4"},"returnParameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":629,"src":"2855:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:9:4"},"scope":1056,"src":"2803:97:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1091],"body":{"id":641,"nodeType":"Block","src":"3007:42:4","statements":[{"expression":{"baseExpression":{"id":637,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"3024:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":639,"indexExpression":{"id":638,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"3034:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3024:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":636,"id":640,"nodeType":"Return","src":"3017:25:4"}]},"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"2906:22:4","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":642,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2942:9:4","nodeType":"FunctionDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"account","nameLocation":"2960:7:4","nodeType":"VariableDeclaration","scope":642,"src":"2952:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:17:4"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":642,"src":"2998:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":634,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:9:4"},"scope":1056,"src":"2933:116:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1101],"body":{"id":665,"nodeType":"Block","src":"3319:103:4","statements":[{"assignments":[653],"declarations":[{"constant":false,"id":653,"mutability":"mutable","name":"owner","nameLocation":"3337:5:4","nodeType":"VariableDeclaration","scope":665,"src":"3329:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":656,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":654,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"3345:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3329:28:4"},{"expression":{"arguments":[{"id":658,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"3377:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"3384:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"3388:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":657,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"3367:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"3367:27:4"},{"expression":{"hexValue":"74727565","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3411:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":651,"id":664,"nodeType":"Return","src":"3404:11:4"}]},"documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"3055:184:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":666,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3253:8:4","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"to","nameLocation":"3270:2:4","nodeType":"VariableDeclaration","scope":666,"src":"3262:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"value","nameLocation":"3282:5:4","nodeType":"VariableDeclaration","scope":666,"src":"3274:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"3274:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:27:4"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":666,"src":"3313:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":649,"name":"bool","nodeType":"ElementaryTypeName","src":"3313:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3312:6:4"},"scope":1056,"src":"3244:178:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1111],"body":{"id":682,"nodeType":"Block","src":"3544:51:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":676,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"3561:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":678,"indexExpression":{"id":677,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"3573:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":680,"indexExpression":{"id":679,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"3580:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":675,"id":681,"nodeType":"Return","src":"3554:34:4"}]},"documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"3428:22:4","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":683,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3464:9:4","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"owner","nameLocation":"3482:5:4","nodeType":"VariableDeclaration","scope":683,"src":"3474:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":671,"mutability":"mutable","name":"spender","nameLocation":"3497:7:4","nodeType":"VariableDeclaration","scope":683,"src":"3489:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3473:32:4"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":683,"src":"3535:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":673,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3534:9:4"},"scope":1056,"src":"3455:140:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1121],"body":{"id":706,"nodeType":"Block","src":"3981:107:4","statements":[{"assignments":[694],"declarations":[{"constant":false,"id":694,"mutability":"mutable","name":"owner","nameLocation":"3999:5:4","nodeType":"VariableDeclaration","scope":706,"src":"3991:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":697,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":695,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"4007:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3991:28:4"},{"expression":{"arguments":[{"id":699,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"4038:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"4045:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"4054:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":698,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[947,1007],"referencedDeclaration":947,"src":"4029:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"4029:31:4"},{"expression":{"hexValue":"74727565","id":704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4077:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":692,"id":705,"nodeType":"Return","src":"4070:11:4"}]},"documentation":{"id":684,"nodeType":"StructuredDocumentation","src":"3601:296:4","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":707,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3911:7:4","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"spender","nameLocation":"3927:7:4","nodeType":"VariableDeclaration","scope":707,"src":"3919:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":688,"mutability":"mutable","name":"value","nameLocation":"3944:5:4","nodeType":"VariableDeclaration","scope":707,"src":"3936:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":687,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:32:4"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"3975:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":690,"name":"bool","nodeType":"ElementaryTypeName","src":"3975:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3974:6:4"},"scope":1056,"src":"3902:186:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1133],"body":{"id":738,"nodeType":"Block","src":"4773:151:4","statements":[{"assignments":[720],"declarations":[{"constant":false,"id":720,"mutability":"mutable","name":"spender","nameLocation":"4791:7:4","nodeType":"VariableDeclaration","scope":738,"src":"4783:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"4783:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":723,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":721,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"4801:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4783:30:4"},{"expression":{"arguments":[{"id":725,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"4839:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":726,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"4845:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"4854:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":724,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"4823:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"ExpressionStatement","src":"4823:37:4"},{"expression":{"arguments":[{"id":731,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"4880:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"4886:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"4890:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":730,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4870:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":735,"nodeType":"ExpressionStatement","src":"4870:26:4"},{"expression":{"hexValue":"74727565","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4913:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":718,"id":737,"nodeType":"Return","src":"4906:11:4"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"4094:581:4","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":739,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4689:12:4","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"from","nameLocation":"4710:4:4","nodeType":"VariableDeclaration","scope":739,"src":"4702:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"to","nameLocation":"4724:2:4","nodeType":"VariableDeclaration","scope":739,"src":"4716:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"value","nameLocation":"4736:5:4","nodeType":"VariableDeclaration","scope":739,"src":"4728:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:41:4"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":739,"src":"4767:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":716,"name":"bool","nodeType":"ElementaryTypeName","src":"4767:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4766:6:4"},"scope":1056,"src":"4680:244:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":785,"nodeType":"Block","src":"5366:231:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":749,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"5380:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5396:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5388:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:4","typeDescriptions":{}}},"id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5380:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":763,"nodeType":"IfStatement","src":"5376:86:4","trueBody":{"id":762,"nodeType":"Block","src":"5400:62:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5448:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5440:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:4","typeDescriptions":{}}},"id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":755,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"5421:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":761,"nodeType":"RevertStatement","src":"5414:37:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":764,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"5475:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5489:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5481:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:4","typeDescriptions":{}}},"id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":778,"nodeType":"IfStatement","src":"5471:86:4","trueBody":{"id":777,"nodeType":"Block","src":"5493:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:4","typeDescriptions":{}}},"id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":770,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"5514:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":776,"nodeType":"RevertStatement","src":"5507:39:4"}]}},{"expression":{"arguments":[{"id":780,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"5574:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":781,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"5580:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"5584:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":779,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"5566:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":784,"nodeType":"ExpressionStatement","src":"5566:24:4"}]},"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"4930:362:4","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":786,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5306:9:4","nodeType":"FunctionDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"from","nameLocation":"5324:4:4","nodeType":"VariableDeclaration","scope":786,"src":"5316:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"to","nameLocation":"5338:2:4","nodeType":"VariableDeclaration","scope":786,"src":"5330:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"value","nameLocation":"5350:5:4","nodeType":"VariableDeclaration","scope":786,"src":"5342:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5315:41:4"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[],"src":"5366:0:4"},"scope":1056,"src":"5297:300:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":862,"nodeType":"Block","src":"5987:1032:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":796,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"6001:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6009:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:4","typeDescriptions":{}}},"id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6001:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":833,"nodeType":"Block","src":"6175:362:4","statements":[{"assignments":[808],"declarations":[{"constant":false,"id":808,"mutability":"mutable","name":"fromBalance","nameLocation":"6197:11:4","nodeType":"VariableDeclaration","scope":833,"src":"6189:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":812,"initialValue":{"baseExpression":{"id":809,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6211:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":811,"indexExpression":{"id":810,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"6221:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6211:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6189:37:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"6244:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"6258:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":823,"nodeType":"IfStatement","src":"6240:115:4","trueBody":{"id":822,"nodeType":"Block","src":"6265:90:4","statements":[{"errorCall":{"arguments":[{"id":817,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"6315:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"6321:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"6334:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":816,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"6290:24:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":821,"nodeType":"RevertStatement","src":"6283:57:4"}]}},{"id":832,"nodeType":"UncheckedBlock","src":"6368:159:4","statements":[{"expression":{"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":824,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6475:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":826,"indexExpression":{"id":825,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"6485:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":827,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"6493:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"6507:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":831,"nodeType":"ExpressionStatement","src":"6475:37:4"}]}]},"id":834,"nodeType":"IfStatement","src":"5997:540:4","trueBody":{"id":806,"nodeType":"Block","src":"6021:148:4","statements":[{"expression":{"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":802,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6137:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"6153:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":805,"nodeType":"ExpressionStatement","src":"6137:21:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":835,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"6551:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:4","typeDescriptions":{}}},"id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6551:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":854,"nodeType":"Block","src":"6766:206:4","statements":[{"id":853,"nodeType":"UncheckedBlock","src":"6780:182:4","statements":[{"expression":{"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":847,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6925:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":849,"indexExpression":{"id":848,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"6935:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6925:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"6942:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6925:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":852,"nodeType":"ExpressionStatement","src":"6925:22:4"}]}]},"id":855,"nodeType":"IfStatement","src":"6547:425:4","trueBody":{"id":846,"nodeType":"Block","src":"6569:191:4","statements":[{"id":845,"nodeType":"UncheckedBlock","src":"6583:167:4","statements":[{"expression":{"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":841,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6714:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"6730:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6714:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":844,"nodeType":"ExpressionStatement","src":"6714:21:4"}]}]}},{"eventCall":{"arguments":[{"id":857,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"6996:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"7002:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7006:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":856,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"6987:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"EmitStatement","src":"6982:30:4"}]},"documentation":{"id":787,"nodeType":"StructuredDocumentation","src":"5603:304:4","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":863,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5921:7:4","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"from","nameLocation":"5937:4:4","nodeType":"VariableDeclaration","scope":863,"src":"5929:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"to","nameLocation":"5951:2:4","nodeType":"VariableDeclaration","scope":863,"src":"5943:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"5943:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"value","nameLocation":"5963:5:4","nodeType":"VariableDeclaration","scope":863,"src":"5955:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5928:41:4"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[],"src":"5987:0:4"},"scope":1056,"src":"5912:1107:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":895,"nodeType":"Block","src":"7418:152:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":871,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"7432:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7451:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7443:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"7443:7:4","typeDescriptions":{}}},"id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7443:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7432:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":885,"nodeType":"IfStatement","src":"7428:91:4","trueBody":{"id":884,"nodeType":"Block","src":"7455:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7497:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:4","typeDescriptions":{}}},"id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7497:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":877,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"7476:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":883,"nodeType":"RevertStatement","src":"7469:39:4"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7544:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7536:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:4","typeDescriptions":{}}},"id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7536:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":891,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"7548:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"7557:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":886,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"7528:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"ExpressionStatement","src":"7528:35:4"}]},"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"7025:332:4","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":896,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7371:5:4","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"account","nameLocation":"7385:7:4","nodeType":"VariableDeclaration","scope":896,"src":"7377:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"value","nameLocation":"7402:5:4","nodeType":"VariableDeclaration","scope":896,"src":"7394:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:32:4"},"returnParameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"7418:0:4"},"scope":1056,"src":"7362:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":928,"nodeType":"Block","src":"7944:150:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":904,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"7958:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7969:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"7969:7:4","typeDescriptions":{}}},"id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7969:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7958:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":918,"nodeType":"IfStatement","src":"7954:89:4","trueBody":{"id":917,"nodeType":"Block","src":"7981:62:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8021:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"8021:7:4","typeDescriptions":{}}},"id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":910,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"8002:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":916,"nodeType":"RevertStatement","src":"7995:37:4"}]}},{"expression":{"arguments":[{"id":920,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"8060:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8077:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:4","typeDescriptions":{}}},"id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"8081:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":919,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"8052:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":927,"nodeType":"ExpressionStatement","src":"8052:35:4"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"7576:307:4","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":929,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7897:5:4","nodeType":"FunctionDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"account","nameLocation":"7911:7:4","nodeType":"VariableDeclaration","scope":929,"src":"7903:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"value","nameLocation":"7928:5:4","nodeType":"VariableDeclaration","scope":929,"src":"7920:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":900,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7902:32:4"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[],"src":"7944:0:4"},"scope":1056,"src":"7888:206:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":946,"nodeType":"Block","src":"8704:54:4","statements":[{"expression":{"arguments":[{"id":940,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"8723:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":941,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"8730:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"8739:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8746:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":939,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[947,1007],"referencedDeclaration":1007,"src":"8714:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8714:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":945,"nodeType":"ExpressionStatement","src":"8714:37:4"}]},"documentation":{"id":930,"nodeType":"StructuredDocumentation","src":"8100:525:4","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":947,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8639:8:4","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"owner","nameLocation":"8656:5:4","nodeType":"VariableDeclaration","scope":947,"src":"8648:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"spender","nameLocation":"8671:7:4","nodeType":"VariableDeclaration","scope":947,"src":"8663:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"value","nameLocation":"8688:5:4","nodeType":"VariableDeclaration","scope":947,"src":"8680:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"8680:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:47:4"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[],"src":"8704:0:4"},"scope":1056,"src":"8630:128:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1006,"nodeType":"Block","src":"9703:334:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":959,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"9717:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:4","typeDescriptions":{}}},"id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9717:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":973,"nodeType":"IfStatement","src":"9713:89:4","trueBody":{"id":972,"nodeType":"Block","src":"9738:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:4","typeDescriptions":{}}},"id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":965,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"9759:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":971,"nodeType":"RevertStatement","src":"9752:39:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":974,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"9815:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9834:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9826:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:4","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9826:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9815:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":988,"nodeType":"IfStatement","src":"9811:90:4","trueBody":{"id":987,"nodeType":"Block","src":"9838:63:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9887:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9879:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"9879:7:4","typeDescriptions":{}}},"id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":980,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"9859:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":986,"nodeType":"RevertStatement","src":"9852:38:4"}]}},{"expression":{"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":989,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"9910:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":992,"indexExpression":{"id":990,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"9922:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":993,"indexExpression":{"id":991,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"9929:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9910:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"9940:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":996,"nodeType":"ExpressionStatement","src":"9910:35:4"},{"condition":{"id":997,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"9959:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1005,"nodeType":"IfStatement","src":"9955:76:4","trueBody":{"id":1004,"nodeType":"Block","src":"9970:61:4","statements":[{"eventCall":{"arguments":[{"id":999,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"9998:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1000,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"10005:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10014:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":998,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"9989:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1003,"nodeType":"EmitStatement","src":"9984:36:4"}]}}]},"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"8764:836:4","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1007,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9614:8:4","nodeType":"FunctionDefinition","parameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"owner","nameLocation":"9631:5:4","nodeType":"VariableDeclaration","scope":1007,"src":"9623:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":949,"name":"address","nodeType":"ElementaryTypeName","src":"9623:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"spender","nameLocation":"9646:7:4","nodeType":"VariableDeclaration","scope":1007,"src":"9638:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"value","nameLocation":"9663:5:4","nodeType":"VariableDeclaration","scope":1007,"src":"9655:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"emitEvent","nameLocation":"9675:9:4","nodeType":"VariableDeclaration","scope":1007,"src":"9670:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":955,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9622:63:4"},"returnParameters":{"id":958,"nodeType":"ParameterList","parameters":[],"src":"9703:0:4"},"scope":1056,"src":"9605:432:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1054,"nodeType":"Block","src":"10408:387:4","statements":[{"assignments":[1018],"declarations":[{"constant":false,"id":1018,"mutability":"mutable","name":"currentAllowance","nameLocation":"10426:16:4","nodeType":"VariableDeclaration","scope":1054,"src":"10418:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1017,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1023,"initialValue":{"arguments":[{"id":1020,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"10455:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1021,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"10462:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1019,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"10445:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10445:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10418:52:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1024,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"10484:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10508:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1025,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10503:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10517:3:4","memberName":"max","nodeType":"MemberAccess","src":"10503:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10484:36:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1053,"nodeType":"IfStatement","src":"10480:309:4","trueBody":{"id":1052,"nodeType":"Block","src":"10522:267:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1031,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"10540:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"10559:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1041,"nodeType":"IfStatement","src":"10536:130:4","trueBody":{"id":1040,"nodeType":"Block","src":"10566:100:4","statements":[{"errorCall":{"arguments":[{"id":1035,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"10618:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1036,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"10627:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"10645:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1034,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"10591:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1039,"nodeType":"RevertStatement","src":"10584:67:4"}]}},{"id":1051,"nodeType":"UncheckedBlock","src":"10679:100:4","statements":[{"expression":{"arguments":[{"id":1043,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"10716:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1044,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"10723:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1045,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"10732:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"10751:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10732:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10758:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1042,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[947,1007],"referencedDeclaration":1007,"src":"10707:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1050,"nodeType":"ExpressionStatement","src":"10707:57:4"}]}]}}]},"documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"10043:271:4","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10328:15:4","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"owner","nameLocation":"10352:5:4","nodeType":"VariableDeclaration","scope":1055,"src":"10344:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"10344:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"spender","nameLocation":"10367:7:4","nodeType":"VariableDeclaration","scope":1055,"src":"10359:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"value","nameLocation":"10384:5:4","nodeType":"VariableDeclaration","scope":1055,"src":"10376:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"10376:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10343:47:4"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"10408:0:4"},"scope":1056,"src":"10319:476:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1057,"src":"1106:9691:4","usedErrors":[416,421,426,435,440,445],"usedEvents":[1068,1077]}],"src":"105:10693:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1134]},"id":1135,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1058,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"133:71:5","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1134,"linearizedBaseContracts":[1134],"name":"IERC20","nameLocation":"215:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"228:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1068,"name":"Transfer","nameLocation":"397:8:5","nodeType":"EventDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:5","nodeType":"VariableDeclaration","scope":1068,"src":"406:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:5","nodeType":"VariableDeclaration","scope":1068,"src":"428:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1066,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:5","nodeType":"VariableDeclaration","scope":1068,"src":"448:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:5"},"src":"391:72:5"},{"anonymous":false,"documentation":{"id":1069,"nodeType":"StructuredDocumentation","src":"469:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1077,"name":"Approval","nameLocation":"628:8:5","nodeType":"EventDefinition","parameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:5","nodeType":"VariableDeclaration","scope":1077,"src":"637:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1073,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:5","nodeType":"VariableDeclaration","scope":1077,"src":"660:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1075,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:5","nodeType":"VariableDeclaration","scope":1077,"src":"685:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:5"},"src":"622:78:5"},{"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"706:65:5","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1083,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:5","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[],"src":"796:2:5"},"returnParameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1083,"src":"822:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:5"},"scope":1134,"src":"776:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1084,"nodeType":"StructuredDocumentation","src":"837:71:5","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1091,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:5","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"account","nameLocation":"940:7:5","nodeType":"VariableDeclaration","scope":1091,"src":"932:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:5"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"972:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:5"},"scope":1134,"src":"913:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"987:213:5","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1101,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:5","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"to","nameLocation":"1231:2:5","nodeType":"VariableDeclaration","scope":1101,"src":"1223:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"value","nameLocation":"1243:5:5","nodeType":"VariableDeclaration","scope":1101,"src":"1235:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:5"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1101,"src":"1268:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1098,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:5"},"scope":1134,"src":"1205:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"1280:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1111,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:5","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"owner","nameLocation":"1576:5:5","nodeType":"VariableDeclaration","scope":1111,"src":"1568:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"spender","nameLocation":"1591:7:5","nodeType":"VariableDeclaration","scope":1111,"src":"1583:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:5"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1111,"src":"1623:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:5"},"scope":1134,"src":"1549:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"1638:667:5","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1121,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:5","nodeType":"FunctionDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"spender","nameLocation":"2335:7:5","nodeType":"VariableDeclaration","scope":1121,"src":"2327:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1116,"mutability":"mutable","name":"value","nameLocation":"2352:5:5","nodeType":"VariableDeclaration","scope":1121,"src":"2344:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:5"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1121,"src":"2377:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1118,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:5"},"scope":1134,"src":"2310:73:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"2389:297:5","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1133,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:5","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"from","nameLocation":"2721:4:5","nodeType":"VariableDeclaration","scope":1133,"src":"2713:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"to","nameLocation":"2735:2:5","nodeType":"VariableDeclaration","scope":1133,"src":"2727:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"value","nameLocation":"2747:5:5","nodeType":"VariableDeclaration","scope":1133,"src":"2739:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:5"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1133,"src":"2772:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1130,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:5"},"scope":1134,"src":"2691:87:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1135,"src":"205:2575:5","usedErrors":[],"usedEvents":[1068,1077]}],"src":"106:2675:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[1460],"ERC20":[1056],"ERC20Burnable":[1180]},"id":1181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1136,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1138,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1181,"sourceUnit":1057,"src":"150:35:6","symbolAliases":[{"foreign":{"id":1137,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"158:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1181,"sourceUnit":1461,"src":"186:51:6","symbolAliases":[{"foreign":{"id":1139,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"194:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1142,"name":"Context","nameLocations":["483:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1460,"src":"483:7:6"},"id":1143,"nodeType":"InheritanceSpecifier","src":"483:7:6"},{"baseName":{"id":1144,"name":"ERC20","nameLocations":["492:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"492:5:6"},"id":1145,"nodeType":"InheritanceSpecifier","src":"492:5:6"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"239:208:6","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1180,"linearizedBaseContracts":[1180,1056,446,1394,1134,1460],"name":"ERC20Burnable","nameLocation":"466:13:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1157,"nodeType":"Block","src":"662:43:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1152,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"678:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"692:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1151,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"672:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1156,"nodeType":"ExpressionStatement","src":"672:26:6"}]},"documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"504:109:6","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1158,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:6","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"value","nameLocation":"640:5:6","nodeType":"VariableDeclaration","scope":1158,"src":"632:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:6"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[],"src":"662:0:6"},"scope":1180,"src":"618:87:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1178,"nodeType":"Block","src":"1086:93:6","statements":[{"expression":{"arguments":[{"id":1167,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"1112:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1168,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"1121:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"1135:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1166,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"1096:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1172,"nodeType":"ExpressionStatement","src":"1096:45:6"},{"expression":{"arguments":[{"id":1174,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"1157:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"1166:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1173,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"1151:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1177,"nodeType":"ExpressionStatement","src":"1151:21:6"}]},"documentation":{"id":1159,"nodeType":"StructuredDocumentation","src":"711:305:6","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1179,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:6","nodeType":"FunctionDefinition","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"account","nameLocation":"1047:7:6","nodeType":"VariableDeclaration","scope":1179,"src":"1039:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"value","nameLocation":"1064:5:6","nodeType":"VariableDeclaration","scope":1179,"src":"1056:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:6"},"returnParameters":{"id":1165,"nodeType":"ParameterList","parameters":[],"src":"1086:0:6"},"scope":1180,"src":"1021:158:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1181,"src":"448:733:6","usedErrors":[416,421,426,435,440,445],"usedEvents":[1068,1077]}],"src":"124:1058:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"ERC20":[1056],"ERC20Pausable":[1214],"Pausable":[1688]},"id":1215,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1182,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":1057,"src":"150:35:7","symbolAliases":[{"foreign":{"id":1183,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"158:5:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"../../../utils/Pausable.sol","id":1186,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":1689,"src":"186:53:7","symbolAliases":[{"foreign":{"id":1185,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"194:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1188,"name":"ERC20","nameLocations":["965:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"965:5:7"},"id":1189,"nodeType":"InheritanceSpecifier","src":"965:5:7"},{"baseName":{"id":1190,"name":"Pausable","nameLocations":["972:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1688,"src":"972:8:7"},"id":1191,"nodeType":"InheritanceSpecifier","src":"972:8:7"}],"canonicalName":"ERC20Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1187,"nodeType":"StructuredDocumentation","src":"241:688:7","text":" @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1214,"linearizedBaseContracts":[1214,1688,1056,446,1394,1134,1460],"name":"ERC20Pausable","nameLocation":"948:13:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[863],"body":{"id":1212,"nodeType":"Block","src":"1211:47:7","statements":[{"expression":{"arguments":[{"id":1207,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"1235:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1208,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"1241:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"1245:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1204,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1221:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$1214_$","typeString":"type(contract super ERC20Pausable)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1227:7:7","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":863,"src":"1221:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1221:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1211,"nodeType":"ExpressionStatement","src":"1221:30:7"}]},"documentation":{"id":1192,"nodeType":"StructuredDocumentation","src":"987:121:7","text":" @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."},"id":1213,"implemented":true,"kind":"function","modifiers":[{"id":1202,"kind":"modifierInvocation","modifierName":{"id":1201,"name":"whenNotPaused","nameLocations":["1197:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1613,"src":"1197:13:7"},"nodeType":"ModifierInvocation","src":"1197:13:7"}],"name":"_update","nameLocation":"1122:7:7","nodeType":"FunctionDefinition","overrides":{"id":1200,"nodeType":"OverrideSpecifier","overrides":[],"src":"1188:8:7"},"parameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"from","nameLocation":"1138:4:7","nodeType":"VariableDeclaration","scope":1213,"src":"1130:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"1130:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"to","nameLocation":"1152:2:7","nodeType":"VariableDeclaration","scope":1213,"src":"1144:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"value","nameLocation":"1164:5:7","nodeType":"VariableDeclaration","scope":1213,"src":"1156:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1129:41:7"},"returnParameters":{"id":1203,"nodeType":"ParameterList","parameters":[],"src":"1211:0:7"},"scope":1214,"src":"1113:145:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1215,"src":"930:330:7","usedErrors":[416,421,426,435,440,445,1602,1605],"usedEvents":[1068,1077,1594,1599]}],"src":"124:1137:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3779],"EIP712":[4006],"ERC20":[1056],"ERC20Permit":[1368],"IERC20Permit":[1430],"Nonces":[1528]},"id":1369,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1216,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1218,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1369,"sourceUnit":1431,"src":"148:48:8","symbolAliases":[{"foreign":{"id":1217,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"156:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1369,"sourceUnit":1057,"src":"197:35:8","symbolAliases":[{"foreign":{"id":1219,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"205:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1369,"sourceUnit":3780,"src":"233:60:8","symbolAliases":[{"foreign":{"id":1221,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"241:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1369,"sourceUnit":4007,"src":"294:62:8","symbolAliases":[{"foreign":{"id":1223,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"302:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1226,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1369,"sourceUnit":1529,"src":"357:49:8","symbolAliases":[{"foreign":{"id":1225,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"365:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1228,"name":"ERC20","nameLocations":["931:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"931:5:8"},"id":1229,"nodeType":"InheritanceSpecifier","src":"931:5:8"},{"baseName":{"id":1230,"name":"IERC20Permit","nameLocations":["938:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1430,"src":"938:12:8"},"id":1231,"nodeType":"InheritanceSpecifier","src":"938:12:8"},{"baseName":{"id":1232,"name":"EIP712","nameLocations":["952:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":4006,"src":"952:6:8"},"id":1233,"nodeType":"InheritanceSpecifier","src":"952:6:8"},{"baseName":{"id":1234,"name":"Nonces","nameLocations":["960:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1528,"src":"960:6:8"},"id":1235,"nodeType":"InheritanceSpecifier","src":"960:6:8"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"408:489:8","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1368,"linearizedBaseContracts":[1368,1528,4006,404,1430,1056,446,1394,1134,1460],"name":"ERC20Permit","nameLocation":"916:11:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1240,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:8","nodeType":"VariableDeclaration","scope":1368,"src":"973:146:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1237,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"1126:52:8","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1245,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:8","nodeType":"ErrorDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:8","nodeType":"VariableDeclaration","scope":1245,"src":"1213:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:8"},"src":"1183:48:8"},{"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"1237:45:8","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1252,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:8","nodeType":"ErrorDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"signer","nameLocation":"1322:6:8","nodeType":"VariableDeclaration","scope":1252,"src":"1314:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"owner","nameLocation":"1338:5:8","nodeType":"VariableDeclaration","scope":1252,"src":"1330:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:8"},"src":"1287:58:8"},{"body":{"id":1262,"nodeType":"Block","src":"1627:2:8","statements":[]},"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"1351:221:8","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1263,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1258,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"1616:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1260,"kind":"baseConstructorSpecifier","modifierName":{"id":1257,"name":"EIP712","nameLocations":["1609:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":4006,"src":"1609:6:8"},"nodeType":"ModifierInvocation","src":"1609:17:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"name","nameLocation":"1603:4:8","nodeType":"VariableDeclaration","scope":1263,"src":"1589:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1254,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:8"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"1627:0:8"},"scope":1368,"src":"1577:52:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1415],"body":{"id":1339,"nodeType":"Block","src":"1857:483:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1281,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1871:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1877:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"1871:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1283,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"1889:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1871:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1290,"nodeType":"IfStatement","src":"1867:97:8","trueBody":{"id":1289,"nodeType":"Block","src":"1899:65:8","statements":[{"errorCall":{"arguments":[{"id":1286,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"1944:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1285,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"1920:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1920:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1288,"nodeType":"RevertStatement","src":"1913:40:8"}]}},{"assignments":[1292],"declarations":[{"constant":false,"id":1292,"mutability":"mutable","name":"structHash","nameLocation":"1982:10:8","nodeType":"VariableDeclaration","scope":1339,"src":"1974:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1974:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1306,"initialValue":{"arguments":[{"arguments":[{"id":1296,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"2016:15:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1297,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"2033:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1298,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"2040:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"2049:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1301,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"2066:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1300,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"2056:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2056:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1303,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"2074:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1294,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2005:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2009:6:8","memberName":"encode","nodeType":"MemberAccess","src":"2005:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2005:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1293,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1995:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1995:89:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1974:110:8"},{"assignments":[1308],"declarations":[{"constant":false,"id":1308,"mutability":"mutable","name":"hash","nameLocation":"2103:4:8","nodeType":"VariableDeclaration","scope":1339,"src":"2095:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2095:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1312,"initialValue":{"arguments":[{"id":1310,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"2127:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1309,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"2110:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2110:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2095:43:8"},{"assignments":[1314],"declarations":[{"constant":false,"id":1314,"mutability":"mutable","name":"signer","nameLocation":"2157:6:8","nodeType":"VariableDeclaration","scope":1339,"src":"2149:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1322,"initialValue":{"arguments":[{"id":1317,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"2180:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1318,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"2186:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1319,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"2189:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1320,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"2192:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1315,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"2166:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3779_$","typeString":"type(library ECDSA)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2172:7:8","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3729,"src":"2166:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2166:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2149:45:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1323,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"2208:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1324,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"2218:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2208:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1332,"nodeType":"IfStatement","src":"2204:88:8","trueBody":{"id":1331,"nodeType":"Block","src":"2225:67:8","statements":[{"errorCall":{"arguments":[{"id":1327,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"2267:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"2275:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1326,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"2246:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1330,"nodeType":"RevertStatement","src":"2239:42:8"}]}},{"expression":{"arguments":[{"id":1334,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"2311:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1335,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"2318:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"2327:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1333,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[947,1007],"referencedDeclaration":947,"src":"2302:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1338,"nodeType":"ExpressionStatement","src":"2302:31:8"}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"1635:28:8","text":"@inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1340,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1677:6:8","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"owner","nameLocation":"1701:5:8","nodeType":"VariableDeclaration","scope":1340,"src":"1693:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"1693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"spender","nameLocation":"1724:7:8","nodeType":"VariableDeclaration","scope":1340,"src":"1716:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"1716:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"value","nameLocation":"1749:5:8","nodeType":"VariableDeclaration","scope":1340,"src":"1741:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1741:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"deadline","nameLocation":"1772:8:8","nodeType":"VariableDeclaration","scope":1340,"src":"1764:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"v","nameLocation":"1796:1:8","nodeType":"VariableDeclaration","scope":1340,"src":"1790:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1273,"name":"uint8","nodeType":"ElementaryTypeName","src":"1790:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"r","nameLocation":"1815:1:8","nodeType":"VariableDeclaration","scope":1340,"src":"1807:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1807:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"s","nameLocation":"1834:1:8","nodeType":"VariableDeclaration","scope":1340,"src":"1826:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1826:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1683:158:8"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[],"src":"1857:0:8"},"scope":1368,"src":"1668:672:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1423,1487],"body":{"id":1356,"nodeType":"Block","src":"2479:43:8","statements":[{"expression":{"arguments":[{"id":1353,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"2509:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1351,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2496:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1368_$","typeString":"type(contract super ERC20Permit)"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2502:6:8","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1487,"src":"2496:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2496:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1350,"id":1355,"nodeType":"Return","src":"2489:26:8"}]},"documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"2346:28:8","text":"@inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1357,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2388:6:8","nodeType":"FunctionDefinition","overrides":{"id":1347,"nodeType":"OverrideSpecifier","overrides":[{"id":1345,"name":"IERC20Permit","nameLocations":["2439:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1430,"src":"2439:12:8"},{"id":1346,"name":"Nonces","nameLocations":["2453:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1528,"src":"2453:6:8"}],"src":"2430:30:8"},"parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"owner","nameLocation":"2403:5:8","nodeType":"VariableDeclaration","scope":1357,"src":"2395:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1342,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2394:15:8"},"returnParameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"2470:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"2470:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2469:9:8"},"scope":1368,"src":"2379:143:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1429],"body":{"id":1366,"nodeType":"Block","src":"2682:44:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1363,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"2699:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2699:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1362,"id":1365,"nodeType":"Return","src":"2692:27:8"}]},"documentation":{"id":1358,"nodeType":"StructuredDocumentation","src":"2528:28:8","text":"@inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1367,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2623:16:8","nodeType":"FunctionDefinition","parameters":{"id":1359,"nodeType":"ParameterList","parameters":[],"src":"2639:2:8"},"returnParameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1367,"src":"2673:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2673:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2672:9:8"},"scope":1368,"src":"2614:112:8","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1369,"src":"898:1830:8","usedErrors":[416,421,426,435,440,445,1245,1252,1470,1702,1704,3442,3447,3452],"usedEvents":[384,1068,1077]}],"src":"122:2607:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1134],"IERC20Metadata":[1394]},"id":1395,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1370,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1395,"sourceUnit":1135,"src":"151:37:9","symbolAliases":[{"foreign":{"id":1371,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"159:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1374,"name":"IERC20","nameLocations":["306:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1134,"src":"306:6:9"},"id":1375,"nodeType":"InheritanceSpecifier","src":"306:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1373,"nodeType":"StructuredDocumentation","src":"190:87:9","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1394,"linearizedBaseContracts":[1394,1134],"name":"IERC20Metadata","nameLocation":"288:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"319:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1381,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:9","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[],"src":"391:2:9"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"417:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1378,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:9"},"scope":1394,"src":"378:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"438:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1387,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:9","nodeType":"FunctionDefinition","parameters":{"id":1383,"nodeType":"ParameterList","parameters":[],"src":"514:2:9"},"returnParameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1387,"src":"540:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1384,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:9"},"scope":1394,"src":"499:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1388,"nodeType":"StructuredDocumentation","src":"561:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1393,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:9","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"648:2:9"},"returnParameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1393,"src":"674:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1390,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:9"},"scope":1394,"src":"631:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1395,"src":"278:405:9","usedErrors":[],"usedEvents":[1068,1077]}],"src":"125:559:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1430]},"id":1431,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1396,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"123:25:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"150:1965:10","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1430,"linearizedBaseContracts":[1430],"name":"IERC20Permit","nameLocation":"2126:12:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1398,"nodeType":"StructuredDocumentation","src":"2145:850:10","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1415,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3009:6:10","nodeType":"FunctionDefinition","parameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"owner","nameLocation":"3033:5:10","nodeType":"VariableDeclaration","scope":1415,"src":"3025:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"3025:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"spender","nameLocation":"3056:7:10","nodeType":"VariableDeclaration","scope":1415,"src":"3048:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"3048:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"value","nameLocation":"3081:5:10","nodeType":"VariableDeclaration","scope":1415,"src":"3073:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"3073:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1406,"mutability":"mutable","name":"deadline","nameLocation":"3104:8:10","nodeType":"VariableDeclaration","scope":1415,"src":"3096:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"3096:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1408,"mutability":"mutable","name":"v","nameLocation":"3128:1:10","nodeType":"VariableDeclaration","scope":1415,"src":"3122:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1407,"name":"uint8","nodeType":"ElementaryTypeName","src":"3122:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"r","nameLocation":"3147:1:10","nodeType":"VariableDeclaration","scope":1415,"src":"3139:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3139:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"s","nameLocation":"3166:1:10","nodeType":"VariableDeclaration","scope":1415,"src":"3158:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3158:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3015:158:10"},"returnParameters":{"id":1414,"nodeType":"ParameterList","parameters":[],"src":"3182:0:10"},"scope":1430,"src":"3000:183:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"3189:294:10","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1423,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3497:6:10","nodeType":"FunctionDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"owner","nameLocation":"3512:5:10","nodeType":"VariableDeclaration","scope":1423,"src":"3504:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"3504:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3503:15:10"},"returnParameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1423,"src":"3542:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"3542:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3541:9:10"},"scope":1430,"src":"3488:63:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1424,"nodeType":"StructuredDocumentation","src":"3557:128:10","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1429,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3752:16:10","nodeType":"FunctionDefinition","parameters":{"id":1425,"nodeType":"ParameterList","parameters":[],"src":"3768:2:10"},"returnParameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1429,"src":"3794:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:9:10"},"scope":1430,"src":"3743:60:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1431,"src":"2116:1689:10","usedErrors":[],"usedEvents":[]}],"src":"123:3683:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1460]},"id":1461,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1432,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1433,"nodeType":"StructuredDocumentation","src":"127:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1460,"linearizedBaseContracts":[1460],"name":"Context","nameLocation":"642:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1441,"nodeType":"Block","src":"718:34:11","statements":[{"expression":{"expression":{"id":1438,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:11","memberName":"sender","nodeType":"MemberAccess","src":"735:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1437,"id":1440,"nodeType":"Return","src":"728:17:11"}]},"id":1442,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:11","nodeType":"FunctionDefinition","parameters":{"id":1434,"nodeType":"ParameterList","parameters":[],"src":"675:2:11"},"returnParameters":{"id":1437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1442,"src":"709:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:11"},"scope":1460,"src":"656:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1450,"nodeType":"Block","src":"825:32:11","statements":[{"expression":{"expression":{"id":1447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:11","memberName":"data","nodeType":"MemberAccess","src":"842:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1446,"id":1449,"nodeType":"Return","src":"835:15:11"}]},"id":1451,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:11","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[],"src":"775:2:11"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1451,"src":"809:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1444,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:11"},"scope":1460,"src":"758:99:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1458,"nodeType":"Block","src":"935:25:11","statements":[{"expression":{"hexValue":"30","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1455,"id":1457,"nodeType":"Return","src":"945:8:11"}]},"id":1459,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:11","nodeType":"FunctionDefinition","parameters":{"id":1452,"nodeType":"ParameterList","parameters":[],"src":"892:2:11"},"returnParameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1459,"src":"926:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:11"},"scope":1460,"src":"863:97:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1461,"src":"624:338:11","usedErrors":[],"usedEvents":[]}],"src":"101:862:11"},"id":11},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1528]},"id":1529,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1462,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"125:83:12","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1528,"linearizedBaseContracts":[1528],"name":"Nonces","nameLocation":"227:6:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1464,"nodeType":"StructuredDocumentation","src":"240:90:12","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1470,"name":"InvalidAccountNonce","nameLocation":"341:19:12","nodeType":"ErrorDefinition","parameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"account","nameLocation":"369:7:12","nodeType":"VariableDeclaration","scope":1470,"src":"361:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:12","nodeType":"VariableDeclaration","scope":1470,"src":"378:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:12"},"src":"335:65:12"},{"constant":false,"id":1474,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:12","nodeType":"VariableDeclaration","scope":1528,"src":"406:51:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1473,"keyName":"account","keyNameLocation":"422:7:12","keyType":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1486,"nodeType":"Block","src":"607:38:12","statements":[{"expression":{"baseExpression":{"id":1482,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"624:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1484,"indexExpression":{"id":1483,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"632:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1481,"id":1485,"nodeType":"Return","src":"617:21:12"}]},"documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"464:69:12","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:12","nodeType":"FunctionDefinition","parameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"owner","nameLocation":"562:5:12","nodeType":"VariableDeclaration","scope":1487,"src":"554:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:12"},"returnParameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1487,"src":"598:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:12"},"scope":1528,"src":"538:107:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1501,"nodeType":"Block","src":"828:326:12","statements":[{"id":1500,"nodeType":"UncheckedBlock","src":"1031:117:12","statements":[{"expression":{"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:12","subExpression":{"baseExpression":{"id":1495,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"1121:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1497,"indexExpression":{"id":1496,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"1129:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1494,"id":1499,"nodeType":"Return","src":"1114:23:12"}]}]},"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"651:103:12","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1502,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:12","nodeType":"FunctionDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"owner","nameLocation":"786:5:12","nodeType":"VariableDeclaration","scope":1502,"src":"778:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:12"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1502,"src":"819:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:12"},"scope":1528,"src":"759:395:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1526,"nodeType":"Block","src":"1338:149:12","statements":[{"assignments":[1511],"declarations":[{"constant":false,"id":1511,"mutability":"mutable","name":"current","nameLocation":"1356:7:12","nodeType":"VariableDeclaration","scope":1526,"src":"1348:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1515,"initialValue":{"arguments":[{"id":1513,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"1376:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1512,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"1366:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1516,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"1396:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1517,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"1405:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1525,"nodeType":"IfStatement","src":"1392:89:12","trueBody":{"id":1524,"nodeType":"Block","src":"1414:67:12","statements":[{"errorCall":{"arguments":[{"id":1520,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"1455:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1521,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"1462:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1519,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1435:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1523,"nodeType":"RevertStatement","src":"1428:42:12"}]}}]},"documentation":{"id":1503,"nodeType":"StructuredDocumentation","src":"1160:100:12","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1527,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:12","nodeType":"FunctionDefinition","parameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"owner","nameLocation":"1299:5:12","nodeType":"VariableDeclaration","scope":1527,"src":"1291:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1504,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:12","nodeType":"VariableDeclaration","scope":1527,"src":"1306:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:12"},"returnParameters":{"id":1509,"nodeType":"ParameterList","parameters":[],"src":"1338:0:12"},"scope":1528,"src":"1265:222:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1529,"src":"209:1280:12","usedErrors":[1470],"usedEvents":[]}],"src":"99:1391:12"},"id":12},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1580]},"id":1581,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1530,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"125:489:13","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1580,"linearizedBaseContracts":[1580],"name":"Panic","nameLocation":"665:5:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"677:36:13","text":"@dev generic / unspecified error"},"id":1535,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:13","nodeType":"VariableDeclaration","scope":1580,"src":"718:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1536,"nodeType":"StructuredDocumentation","src":"764:37:13","text":"@dev used by the assert() builtin"},"id":1539,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:13","nodeType":"VariableDeclaration","scope":1580,"src":"806:39:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1537,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"851:41:13","text":"@dev arithmetic underflow or overflow"},"id":1543,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:13","nodeType":"VariableDeclaration","scope":1580,"src":"897:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:13","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1544,"nodeType":"StructuredDocumentation","src":"950:35:13","text":"@dev division or modulo by zero"},"id":1547,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:13","nodeType":"VariableDeclaration","scope":1580,"src":"990:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"1045:30:13","text":"@dev enum conversion error"},"id":1551,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:13","nodeType":"VariableDeclaration","scope":1580,"src":"1080:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:13","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"1140:36:13","text":"@dev invalid encoding in storage"},"id":1555,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:13","nodeType":"VariableDeclaration","scope":1580,"src":"1181:55:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:13","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"1242:24:13","text":"@dev empty array pop"},"id":1559,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:13","nodeType":"VariableDeclaration","scope":1580,"src":"1271:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:13","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"1325:35:13","text":"@dev array out of bounds access"},"id":1563,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:13","nodeType":"VariableDeclaration","scope":1580,"src":"1365:52:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:13","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"1423:65:13","text":"@dev resource error (too large allocation or too large array)"},"id":1567,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:13","nodeType":"VariableDeclaration","scope":1580,"src":"1493:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"1546:42:13","text":"@dev calling invalid internal function"},"id":1571,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:13","nodeType":"VariableDeclaration","scope":1580,"src":"1593:58:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:13","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1578,"nodeType":"Block","src":"1819:151:13","statements":[{"AST":{"nativeSrc":"1854:110:13","nodeType":"YulBlock","src":"1854:110:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:13","nodeType":"YulLiteral","src":"1875:4:13","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:13","nodeType":"YulLiteral","src":"1881:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:13","nodeType":"YulIdentifier","src":"1868:6:13"},"nativeSrc":"1868:24:13","nodeType":"YulFunctionCall","src":"1868:24:13"},"nativeSrc":"1868:24:13","nodeType":"YulExpressionStatement","src":"1868:24:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:13","nodeType":"YulLiteral","src":"1912:4:13","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:13","nodeType":"YulIdentifier","src":"1918:4:13"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:13","nodeType":"YulIdentifier","src":"1905:6:13"},"nativeSrc":"1905:18:13","nodeType":"YulFunctionCall","src":"1905:18:13"},"nativeSrc":"1905:18:13","nodeType":"YulExpressionStatement","src":"1905:18:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:13","nodeType":"YulLiteral","src":"1943:4:13","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:13","nodeType":"YulLiteral","src":"1949:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:13","nodeType":"YulIdentifier","src":"1936:6:13"},"nativeSrc":"1936:18:13","nodeType":"YulFunctionCall","src":"1936:18:13"},"nativeSrc":"1936:18:13","nodeType":"YulExpressionStatement","src":"1936:18:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1574,"isOffset":false,"isSlot":false,"src":"1918:4:13","valueSize":1}],"flags":["memory-safe"],"id":1577,"nodeType":"InlineAssembly","src":"1829:135:13"}]},"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"1658:113:13","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:13","nodeType":"FunctionDefinition","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"code","nameLocation":"1799:4:13","nodeType":"VariableDeclaration","scope":1579,"src":"1791:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:13"},"returnParameters":{"id":1576,"nodeType":"ParameterList","parameters":[],"src":"1819:0:13"},"scope":1580,"src":"1776:194:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1581,"src":"657:1315:13","usedErrors":[],"usedEvents":[]}],"src":"99:1874:13"},"id":13},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[1460],"Pausable":[1688]},"id":1689,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1582,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1584,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1689,"sourceUnit":1461,"src":"128:45:14","symbolAliases":[{"foreign":{"id":1583,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"136:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1586,"name":"Context","nameLocations":["645:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":1460,"src":"645:7:14"},"id":1587,"nodeType":"InheritanceSpecifier","src":"645:7:14"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"175:439:14","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1688,"linearizedBaseContracts":[1688,1460],"name":"Pausable","nameLocation":"633:8:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1589,"mutability":"mutable","name":"_paused","nameLocation":"672:7:14","nodeType":"VariableDeclaration","scope":1688,"src":"659:20:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1588,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1590,"nodeType":"StructuredDocumentation","src":"686:73:14","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1594,"name":"Paused","nameLocation":"770:6:14","nodeType":"EventDefinition","parameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:14","nodeType":"VariableDeclaration","scope":1594,"src":"777:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:14"},"src":"764:30:14"},{"anonymous":false,"documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"800:70:14","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1599,"name":"Unpaused","nameLocation":"881:8:14","nodeType":"EventDefinition","parameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:14","nodeType":"VariableDeclaration","scope":1599,"src":"890:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:14"},"src":"875:32:14"},{"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"913:76:14","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1602,"name":"EnforcedPause","nameLocation":"1000:13:14","nodeType":"ErrorDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[],"src":"1013:2:14"},"src":"994:22:14"},{"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"1022:80:14","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1605,"name":"ExpectedPause","nameLocation":"1113:13:14","nodeType":"ErrorDefinition","parameters":{"id":1604,"nodeType":"ParameterList","parameters":[],"src":"1126:2:14"},"src":"1107:22:14"},{"body":{"id":1612,"nodeType":"Block","src":"1340:47:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1608,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1350:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1610,"nodeType":"ExpressionStatement","src":"1350:19:14"},{"id":1611,"nodeType":"PlaceholderStatement","src":"1379:1:14"}]},"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"1135:175:14","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1613,"name":"whenNotPaused","nameLocation":"1324:13:14","nodeType":"ModifierDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[],"src":"1337:2:14"},"src":"1315:72:14","virtual":false,"visibility":"internal"},{"body":{"id":1620,"nodeType":"Block","src":"1587:44:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1616,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"1597:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1618,"nodeType":"ExpressionStatement","src":"1597:16:14"},{"id":1619,"nodeType":"PlaceholderStatement","src":"1623:1:14"}]},"documentation":{"id":1614,"nodeType":"StructuredDocumentation","src":"1393:167:14","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1621,"name":"whenPaused","nameLocation":"1574:10:14","nodeType":"ModifierDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[],"src":"1584:2:14"},"src":"1565:66:14","virtual":false,"visibility":"internal"},{"body":{"id":1629,"nodeType":"Block","src":"1779:31:14","statements":[{"expression":{"id":1627,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"1796:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1626,"id":1628,"nodeType":"Return","src":"1789:14:14"}]},"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"1637:84:14","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:14","nodeType":"FunctionDefinition","parameters":{"id":1623,"nodeType":"ParameterList","parameters":[],"src":"1741:2:14"},"returnParameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1630,"src":"1773:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1624,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:14"},"scope":1688,"src":"1726:84:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1641,"nodeType":"Block","src":"1929:77:14","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1634,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"1943:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1640,"nodeType":"IfStatement","src":"1939:61:14","trueBody":{"id":1639,"nodeType":"Block","src":"1953:47:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1636,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"1974:13:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1638,"nodeType":"RevertStatement","src":"1967:22:14"}]}}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"1816:57:14","text":" @dev Throws if the contract is paused."},"id":1642,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:14","nodeType":"FunctionDefinition","parameters":{"id":1632,"nodeType":"ParameterList","parameters":[],"src":"1904:2:14"},"returnParameters":{"id":1633,"nodeType":"ParameterList","parameters":[],"src":"1929:0:14"},"scope":1688,"src":"1878:128:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1654,"nodeType":"Block","src":"2126:78:14","statements":[{"condition":{"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:14","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1646,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2141:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1653,"nodeType":"IfStatement","src":"2136:62:14","trueBody":{"id":1652,"nodeType":"Block","src":"2151:47:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1649,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"2172:13:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1651,"nodeType":"RevertStatement","src":"2165:22:14"}]}}]},"documentation":{"id":1643,"nodeType":"StructuredDocumentation","src":"2012:61:14","text":" @dev Throws if the contract is not paused."},"id":1655,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:14","nodeType":"FunctionDefinition","parameters":{"id":1644,"nodeType":"ParameterList","parameters":[],"src":"2101:2:14"},"returnParameters":{"id":1645,"nodeType":"ParameterList","parameters":[],"src":"2126:0:14"},"scope":1688,"src":"2078:126:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1670,"nodeType":"Block","src":"2388:66:14","statements":[{"expression":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1661,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"2398:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1664,"nodeType":"ExpressionStatement","src":"2398:14:14"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1666,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"2434:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1665,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"2427:6:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1669,"nodeType":"EmitStatement","src":"2422:25:14"}]},"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"2210:124:14","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1671,"implemented":true,"kind":"function","modifiers":[{"id":1659,"kind":"modifierInvocation","modifierName":{"id":1658,"name":"whenNotPaused","nameLocations":["2374:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":1613,"src":"2374:13:14"},"nodeType":"ModifierInvocation","src":"2374:13:14"}],"name":"_pause","nameLocation":"2348:6:14","nodeType":"FunctionDefinition","parameters":{"id":1657,"nodeType":"ParameterList","parameters":[],"src":"2354:2:14"},"returnParameters":{"id":1660,"nodeType":"ParameterList","parameters":[],"src":"2388:0:14"},"scope":1688,"src":"2339:115:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1686,"nodeType":"Block","src":"2634:69:14","statements":[{"expression":{"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1677,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"2644:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1680,"nodeType":"ExpressionStatement","src":"2644:15:14"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1682,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"2683:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1681,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"2674:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1685,"nodeType":"EmitStatement","src":"2669:27:14"}]},"documentation":{"id":1672,"nodeType":"StructuredDocumentation","src":"2460:121:14","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1687,"implemented":true,"kind":"function","modifiers":[{"id":1675,"kind":"modifierInvocation","modifierName":{"id":1674,"name":"whenPaused","nameLocations":["2623:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1621,"src":"2623:10:14"},"nodeType":"ModifierInvocation","src":"2623:10:14"}],"name":"_unpause","nameLocation":"2595:8:14","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[],"src":"2603:2:14"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[],"src":"2634:0:14"},"scope":1688,"src":"2586:117:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1689,"src":"615:2090:14","usedErrors":[1602,1605],"usedEvents":[1594,1599]}],"src":"102:2604:14"},"id":14},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1694],"ShortStrings":[1905],"StorageSlot":[2029]},"id":1906,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1690,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1692,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1906,"sourceUnit":2030,"src":"132:46:15","symbolAliases":[{"foreign":{"id":1691,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"140:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1694,"name":"ShortString","nameLocation":"353:11:15","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:15","underlyingType":{"id":1693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"378:876:15","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1905,"linearizedBaseContracts":[1905],"name":"ShortStrings","nameLocation":"1263:12:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1698,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:15","nodeType":"VariableDeclaration","scope":1905,"src":"1345:111:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1702,"name":"StringTooLong","nameLocation":"1469:13:15","nodeType":"ErrorDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"str","nameLocation":"1490:3:15","nodeType":"VariableDeclaration","scope":1702,"src":"1483:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1699,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:15"},"src":"1463:32:15"},{"errorSelector":"b3512b0c","id":1704,"name":"InvalidShortString","nameLocation":"1506:18:15","nodeType":"ErrorDefinition","parameters":{"id":1703,"nodeType":"ParameterList","parameters":[],"src":"1524:2:15"},"src":"1500:27:15"},{"body":{"id":1747,"nodeType":"Block","src":"1786:208:15","statements":[{"assignments":[1714],"declarations":[{"constant":false,"id":1714,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:15","nodeType":"VariableDeclaration","scope":1747,"src":"1796:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1713,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1719,"initialValue":{"arguments":[{"id":1717,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"1822:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1715,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:15","typeDescriptions":{}}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1720,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"1840:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:15","memberName":"length","nodeType":"MemberAccess","src":"1840:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:15","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1729,"nodeType":"IfStatement","src":"1836:72:15","trueBody":{"id":1728,"nodeType":"Block","src":"1858:50:15","statements":[{"errorCall":{"arguments":[{"id":1725,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"1893:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1724,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"1879:13:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1727,"nodeType":"RevertStatement","src":"1872:25:15"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1738,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"1965:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:15","typeDescriptions":{}}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:15","typeDescriptions":{}}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1741,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"1974:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:15","memberName":"length","nodeType":"MemberAccess","src":"1974:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:15","typeDescriptions":{}}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1730,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"1924:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1694_$","typeString":"type(ShortString)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:15","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:15","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1694_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"functionReturnParameters":1712,"id":1746,"nodeType":"Return","src":"1917:70:15"}]},"documentation":{"id":1705,"nodeType":"StructuredDocumentation","src":"1533:170:15","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1748,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:15","nodeType":"FunctionDefinition","parameters":{"id":1708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"str","nameLocation":"1745:3:15","nodeType":"VariableDeclaration","scope":1748,"src":"1731:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1706,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:15"},"returnParameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"1773:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"},"typeName":{"id":1710,"nodeType":"UserDefinedTypeName","pathNode":{"id":1709,"name":"ShortString","nameLocations":["1773:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"1773:11:15"},"referencedDeclaration":1694,"src":"1773:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:15"},"scope":1905,"src":"1708:286:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1773,"nodeType":"Block","src":"2152:304:15","statements":[{"assignments":[1758],"declarations":[{"constant":false,"id":1758,"mutability":"mutable","name":"len","nameLocation":"2170:3:15","nodeType":"VariableDeclaration","scope":1773,"src":"2162:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1757,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1762,"initialValue":{"arguments":[{"id":1760,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"2187:4:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}],"id":1759,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"2176:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1694_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:15"},{"assignments":[1764],"declarations":[{"constant":false,"id":1764,"mutability":"mutable","name":"str","nameLocation":"2294:3:15","nodeType":"VariableDeclaration","scope":1773,"src":"2280:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1763,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1769,"initialValue":{"arguments":[{"hexValue":"3332","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1765,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:15"},{"AST":{"nativeSrc":"2349:81:15","nodeType":"YulBlock","src":"2349:81:15","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:15","nodeType":"YulIdentifier","src":"2370:3:15"},{"name":"len","nativeSrc":"2375:3:15","nodeType":"YulIdentifier","src":"2375:3:15"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:15","nodeType":"YulIdentifier","src":"2363:6:15"},"nativeSrc":"2363:16:15","nodeType":"YulFunctionCall","src":"2363:16:15"},"nativeSrc":"2363:16:15","nodeType":"YulExpressionStatement","src":"2363:16:15"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:15","nodeType":"YulIdentifier","src":"2403:3:15"},{"kind":"number","nativeSrc":"2408:4:15","nodeType":"YulLiteral","src":"2408:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:15","nodeType":"YulIdentifier","src":"2399:3:15"},"nativeSrc":"2399:14:15","nodeType":"YulFunctionCall","src":"2399:14:15"},{"name":"sstr","nativeSrc":"2415:4:15","nodeType":"YulIdentifier","src":"2415:4:15"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:15","nodeType":"YulIdentifier","src":"2392:6:15"},"nativeSrc":"2392:28:15","nodeType":"YulFunctionCall","src":"2392:28:15"},"nativeSrc":"2392:28:15","nodeType":"YulExpressionStatement","src":"2392:28:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":1758,"isOffset":false,"isSlot":false,"src":"2375:3:15","valueSize":1},{"declaration":1752,"isOffset":false,"isSlot":false,"src":"2415:4:15","valueSize":1},{"declaration":1764,"isOffset":false,"isSlot":false,"src":"2370:3:15","valueSize":1},{"declaration":1764,"isOffset":false,"isSlot":false,"src":"2403:3:15","valueSize":1}],"flags":["memory-safe"],"id":1770,"nodeType":"InlineAssembly","src":"2324:106:15"},{"expression":{"id":1771,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"2446:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1756,"id":1772,"nodeType":"Return","src":"2439:10:15"}]},"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"2000:73:15","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1774,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:15","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:15","nodeType":"VariableDeclaration","scope":1774,"src":"2096:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"},"typeName":{"id":1751,"nodeType":"UserDefinedTypeName","pathNode":{"id":1750,"name":"ShortString","nameLocations":["2096:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"2096:11:15"},"referencedDeclaration":1694,"src":"2096:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:15"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1774,"src":"2137:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1754,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:15"},"scope":1905,"src":"2078:378:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1805,"nodeType":"Block","src":"2598:175:15","statements":[{"assignments":[1784],"declarations":[{"constant":false,"id":1784,"mutability":"mutable","name":"result","nameLocation":"2616:6:15","nodeType":"VariableDeclaration","scope":1805,"src":"2608:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1794,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1789,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"2652:4:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}],"expression":{"id":1787,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"2633:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1694_$","typeString":"type(ShortString)"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1694_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:15","typeDescriptions":{}}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"2679:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:15","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1802,"nodeType":"IfStatement","src":"2675:69:15","trueBody":{"id":1801,"nodeType":"Block","src":"2692:52:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1798,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"2713:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1800,"nodeType":"RevertStatement","src":"2706:27:15"}]}},{"expression":{"id":1803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"2760:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1782,"id":1804,"nodeType":"Return","src":"2753:13:15"}]},"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"2462:61:15","text":" @dev Return the length of a `ShortString`."},"id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:15","nodeType":"FunctionDefinition","parameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:15","nodeType":"VariableDeclaration","scope":1806,"src":"2548:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"},"typeName":{"id":1777,"nodeType":"UserDefinedTypeName","pathNode":{"id":1776,"name":"ShortString","nameLocations":["2548:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"2548:11:15"},"referencedDeclaration":1694,"src":"2548:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:15"},"returnParameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1806,"src":"2589:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:15"},"scope":1905,"src":"2528:245:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1845,"nodeType":"Block","src":"2996:231:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3016:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1817,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:15","typeDescriptions":{}}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:15","memberName":"length","nodeType":"MemberAccess","src":"3010:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1843,"nodeType":"Block","src":"3094:127:15","statements":[{"expression":{"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1832,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"3134:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1829,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"3108:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2029_$","typeString":"type(library StorageSlot)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:15","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2006,"src":"3108:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1926_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1926_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1925,"src":"3108:38:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3149:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1837,"nodeType":"ExpressionStatement","src":"3108:46:15"},{"expression":{"arguments":[{"id":1840,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"3192:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1838,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"3175:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1694_$","typeString":"type(ShortString)"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:15","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:15","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1694_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"functionReturnParameters":1816,"id":1842,"nodeType":"Return","src":"3168:42:15"}]},"id":1844,"nodeType":"IfStatement","src":"3006:215:15","trueBody":{"id":1828,"nodeType":"Block","src":"3036:52:15","statements":[{"expression":{"arguments":[{"id":1825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3071:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1824,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"3057:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1694_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"functionReturnParameters":1816,"id":1827,"nodeType":"Return","src":"3050:27:15"}]}}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"2779:103:15","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1846,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:15","nodeType":"FunctionDefinition","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"value","nameLocation":"2936:5:15","nodeType":"VariableDeclaration","scope":1846,"src":"2922:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1808,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1811,"mutability":"mutable","name":"store","nameLocation":"2958:5:15","nodeType":"VariableDeclaration","scope":1846,"src":"2943:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1810,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:15"},"returnParameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1846,"src":"2983:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"},"typeName":{"id":1814,"nodeType":"UserDefinedTypeName","pathNode":{"id":1813,"name":"ShortString","nameLocations":["2983:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"2983:11:15"},"referencedDeclaration":1694,"src":"2983:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:15"},"scope":1905,"src":"2887:340:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1872,"nodeType":"Block","src":"3477:158:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"3510:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}],"expression":{"id":1857,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"3491:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1694_$","typeString":"type(ShortString)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1694_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1861,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"3520:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1870,"nodeType":"Block","src":"3592:37:15","statements":[{"expression":{"id":1868,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"3613:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1856,"id":1869,"nodeType":"Return","src":"3606:12:15"}]},"id":1871,"nodeType":"IfStatement","src":"3487:142:15","trueBody":{"id":1867,"nodeType":"Block","src":"3539:47:15","statements":[{"expression":{"arguments":[{"id":1864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"3569:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}],"id":1863,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"3560:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1694_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1856,"id":1866,"nodeType":"Return","src":"3553:22:15"}]}}]},"documentation":{"id":1847,"nodeType":"StructuredDocumentation","src":"3233:130:15","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":1873,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:15","nodeType":"FunctionDefinition","parameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"value","nameLocation":"3410:5:15","nodeType":"VariableDeclaration","scope":1873,"src":"3398:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"},"typeName":{"id":1849,"nodeType":"UserDefinedTypeName","pathNode":{"id":1848,"name":"ShortString","nameLocations":["3398:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"3398:11:15"},"referencedDeclaration":1694,"src":"3398:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"store","nameLocation":"3432:5:15","nodeType":"VariableDeclaration","scope":1873,"src":"3417:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1851,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:15"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1873,"src":"3462:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1854,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:15"},"scope":1905,"src":"3368:267:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1903,"nodeType":"Block","src":"4125:174:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"4158:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}],"expression":{"id":1884,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"4139:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1694_$","typeString":"type(ShortString)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1694_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1888,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"4168:17:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1901,"nodeType":"Block","src":"4242:51:15","statements":[{"expression":{"expression":{"arguments":[{"id":1897,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"4269:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1895,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:15","typeDescriptions":{}}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:15","memberName":"length","nodeType":"MemberAccess","src":"4263:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1883,"id":1900,"nodeType":"Return","src":"4256:26:15"}]},"id":1902,"nodeType":"IfStatement","src":"4135:158:15","trueBody":{"id":1894,"nodeType":"Block","src":"4187:49:15","statements":[{"expression":{"arguments":[{"id":1891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"4219:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}],"id":1890,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"4208:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1694_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1883,"id":1893,"nodeType":"Return","src":"4201:24:15"}]}}]},"documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"3641:374:15","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1904,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:15","nodeType":"FunctionDefinition","parameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"value","nameLocation":"4064:5:15","nodeType":"VariableDeclaration","scope":1904,"src":"4052:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"},"typeName":{"id":1876,"nodeType":"UserDefinedTypeName","pathNode":{"id":1875,"name":"ShortString","nameLocations":["4052:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"4052:11:15"},"referencedDeclaration":1694,"src":"4052:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"store","nameLocation":"4086:5:15","nodeType":"VariableDeclaration","scope":1904,"src":"4071:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1878,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:15"},"returnParameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1904,"src":"4116:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:15"},"scope":1905,"src":"4020:279:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1906,"src":"1255:3046:15","usedErrors":[1702,1704],"usedEvents":[]}],"src":"106:4196:15"},"id":15},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2029]},"id":2030,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1907,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1908,"nodeType":"StructuredDocumentation","src":"219:1187:16","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2029,"linearizedBaseContracts":[2029],"name":"StorageSlot","nameLocation":"1415:11:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1911,"members":[{"constant":false,"id":1910,"mutability":"mutable","name":"value","nameLocation":"1470:5:16","nodeType":"VariableDeclaration","scope":1911,"src":"1462:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1909,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:16","nodeType":"StructDefinition","scope":2029,"src":"1433:49:16","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1914,"members":[{"constant":false,"id":1913,"mutability":"mutable","name":"value","nameLocation":"1522:5:16","nodeType":"VariableDeclaration","scope":1914,"src":"1517:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1912,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:16","nodeType":"StructDefinition","scope":2029,"src":"1488:46:16","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1917,"members":[{"constant":false,"id":1916,"mutability":"mutable","name":"value","nameLocation":"1577:5:16","nodeType":"VariableDeclaration","scope":1917,"src":"1569:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:16","nodeType":"StructDefinition","scope":2029,"src":"1540:49:16","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1920,"members":[{"constant":false,"id":1919,"mutability":"mutable","name":"value","nameLocation":"1632:5:16","nodeType":"VariableDeclaration","scope":1920,"src":"1624:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1918,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:16","nodeType":"StructDefinition","scope":2029,"src":"1595:49:16","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1923,"members":[{"constant":false,"id":1922,"mutability":"mutable","name":"value","nameLocation":"1685:5:16","nodeType":"VariableDeclaration","scope":1923,"src":"1678:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1921,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:16","nodeType":"StructDefinition","scope":2029,"src":"1650:47:16","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1926,"members":[{"constant":false,"id":1925,"mutability":"mutable","name":"value","nameLocation":"1738:5:16","nodeType":"VariableDeclaration","scope":1926,"src":"1731:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1924,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:16","nodeType":"StructDefinition","scope":2029,"src":"1703:47:16","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1929,"members":[{"constant":false,"id":1928,"mutability":"mutable","name":"value","nameLocation":"1789:5:16","nodeType":"VariableDeclaration","scope":1929,"src":"1783:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1927,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:16","nodeType":"StructDefinition","scope":2029,"src":"1756:45:16","visibility":"public"},{"body":{"id":1939,"nodeType":"Block","src":"1983:79:16","statements":[{"AST":{"nativeSrc":"2018:38:16","nodeType":"YulBlock","src":"2018:38:16","statements":[{"nativeSrc":"2032:14:16","nodeType":"YulAssignment","src":"2032:14:16","value":{"name":"slot","nativeSrc":"2042:4:16","nodeType":"YulIdentifier","src":"2042:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:16","nodeType":"YulIdentifier","src":"2032:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1936,"isOffset":false,"isSlot":true,"src":"2032:6:16","suffix":"slot","valueSize":1},{"declaration":1932,"isOffset":false,"isSlot":false,"src":"2042:4:16","valueSize":1}],"flags":["memory-safe"],"id":1938,"nodeType":"InlineAssembly","src":"1993:63:16"}]},"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"1807:87:16","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1940,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:16","nodeType":"FunctionDefinition","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"slot","nameLocation":"1931:4:16","nodeType":"VariableDeclaration","scope":1940,"src":"1923:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:16"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"r","nameLocation":"1980:1:16","nodeType":"VariableDeclaration","scope":1940,"src":"1960:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1911_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1935,"nodeType":"UserDefinedTypeName","pathNode":{"id":1934,"name":"AddressSlot","nameLocations":["1960:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"1960:11:16"},"referencedDeclaration":1911,"src":"1960:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1911_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:16"},"scope":2029,"src":"1899:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1950,"nodeType":"Block","src":"2243:79:16","statements":[{"AST":{"nativeSrc":"2278:38:16","nodeType":"YulBlock","src":"2278:38:16","statements":[{"nativeSrc":"2292:14:16","nodeType":"YulAssignment","src":"2292:14:16","value":{"name":"slot","nativeSrc":"2302:4:16","nodeType":"YulIdentifier","src":"2302:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:16","nodeType":"YulIdentifier","src":"2292:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1947,"isOffset":false,"isSlot":true,"src":"2292:6:16","suffix":"slot","valueSize":1},{"declaration":1943,"isOffset":false,"isSlot":false,"src":"2302:4:16","valueSize":1}],"flags":["memory-safe"],"id":1949,"nodeType":"InlineAssembly","src":"2253:63:16"}]},"documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"2068:86:16","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1951,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:16","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"slot","nameLocation":"2191:4:16","nodeType":"VariableDeclaration","scope":1951,"src":"2183:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:16"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"r","nameLocation":"2240:1:16","nodeType":"VariableDeclaration","scope":1951,"src":"2220:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1914_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1946,"nodeType":"UserDefinedTypeName","pathNode":{"id":1945,"name":"BooleanSlot","nameLocations":["2220:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1914,"src":"2220:11:16"},"referencedDeclaration":1914,"src":"2220:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1914_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:16"},"scope":2029,"src":"2159:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1961,"nodeType":"Block","src":"2503:79:16","statements":[{"AST":{"nativeSrc":"2538:38:16","nodeType":"YulBlock","src":"2538:38:16","statements":[{"nativeSrc":"2552:14:16","nodeType":"YulAssignment","src":"2552:14:16","value":{"name":"slot","nativeSrc":"2562:4:16","nodeType":"YulIdentifier","src":"2562:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:16","nodeType":"YulIdentifier","src":"2552:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1958,"isOffset":false,"isSlot":true,"src":"2552:6:16","suffix":"slot","valueSize":1},{"declaration":1954,"isOffset":false,"isSlot":false,"src":"2562:4:16","valueSize":1}],"flags":["memory-safe"],"id":1960,"nodeType":"InlineAssembly","src":"2513:63:16"}]},"documentation":{"id":1952,"nodeType":"StructuredDocumentation","src":"2328:86:16","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1962,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:16","nodeType":"FunctionDefinition","parameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"mutability":"mutable","name":"slot","nameLocation":"2451:4:16","nodeType":"VariableDeclaration","scope":1962,"src":"2443:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:16"},"returnParameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"r","nameLocation":"2500:1:16","nodeType":"VariableDeclaration","scope":1962,"src":"2480:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1917_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1957,"nodeType":"UserDefinedTypeName","pathNode":{"id":1956,"name":"Bytes32Slot","nameLocations":["2480:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1917,"src":"2480:11:16"},"referencedDeclaration":1917,"src":"2480:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1917_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:16"},"scope":2029,"src":"2419:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1972,"nodeType":"Block","src":"2763:79:16","statements":[{"AST":{"nativeSrc":"2798:38:16","nodeType":"YulBlock","src":"2798:38:16","statements":[{"nativeSrc":"2812:14:16","nodeType":"YulAssignment","src":"2812:14:16","value":{"name":"slot","nativeSrc":"2822:4:16","nodeType":"YulIdentifier","src":"2822:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:16","nodeType":"YulIdentifier","src":"2812:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1969,"isOffset":false,"isSlot":true,"src":"2812:6:16","suffix":"slot","valueSize":1},{"declaration":1965,"isOffset":false,"isSlot":false,"src":"2822:4:16","valueSize":1}],"flags":["memory-safe"],"id":1971,"nodeType":"InlineAssembly","src":"2773:63:16"}]},"documentation":{"id":1963,"nodeType":"StructuredDocumentation","src":"2588:86:16","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1973,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:16","nodeType":"FunctionDefinition","parameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"slot","nameLocation":"2711:4:16","nodeType":"VariableDeclaration","scope":1973,"src":"2703:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:16"},"returnParameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"r","nameLocation":"2760:1:16","nodeType":"VariableDeclaration","scope":1973,"src":"2740:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1920_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1968,"nodeType":"UserDefinedTypeName","pathNode":{"id":1967,"name":"Uint256Slot","nameLocations":["2740:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1920,"src":"2740:11:16"},"referencedDeclaration":1920,"src":"2740:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1920_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:16"},"scope":2029,"src":"2679:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1983,"nodeType":"Block","src":"3020:79:16","statements":[{"AST":{"nativeSrc":"3055:38:16","nodeType":"YulBlock","src":"3055:38:16","statements":[{"nativeSrc":"3069:14:16","nodeType":"YulAssignment","src":"3069:14:16","value":{"name":"slot","nativeSrc":"3079:4:16","nodeType":"YulIdentifier","src":"3079:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:16","nodeType":"YulIdentifier","src":"3069:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1980,"isOffset":false,"isSlot":true,"src":"3069:6:16","suffix":"slot","valueSize":1},{"declaration":1976,"isOffset":false,"isSlot":false,"src":"3079:4:16","valueSize":1}],"flags":["memory-safe"],"id":1982,"nodeType":"InlineAssembly","src":"3030:63:16"}]},"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"2848:85:16","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1984,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:16","nodeType":"FunctionDefinition","parameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"slot","nameLocation":"2969:4:16","nodeType":"VariableDeclaration","scope":1984,"src":"2961:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:16"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"r","nameLocation":"3017:1:16","nodeType":"VariableDeclaration","scope":1984,"src":"2998:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1923_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1979,"nodeType":"UserDefinedTypeName","pathNode":{"id":1978,"name":"Int256Slot","nameLocations":["2998:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":1923,"src":"2998:10:16"},"referencedDeclaration":1923,"src":"2998:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1923_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:16"},"scope":2029,"src":"2938:161:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1994,"nodeType":"Block","src":"3277:79:16","statements":[{"AST":{"nativeSrc":"3312:38:16","nodeType":"YulBlock","src":"3312:38:16","statements":[{"nativeSrc":"3326:14:16","nodeType":"YulAssignment","src":"3326:14:16","value":{"name":"slot","nativeSrc":"3336:4:16","nodeType":"YulIdentifier","src":"3336:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:16","nodeType":"YulIdentifier","src":"3326:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1991,"isOffset":false,"isSlot":true,"src":"3326:6:16","suffix":"slot","valueSize":1},{"declaration":1987,"isOffset":false,"isSlot":false,"src":"3336:4:16","valueSize":1}],"flags":["memory-safe"],"id":1993,"nodeType":"InlineAssembly","src":"3287:63:16"}]},"documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"3105:85:16","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1995,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:16","nodeType":"FunctionDefinition","parameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"mutability":"mutable","name":"slot","nameLocation":"3226:4:16","nodeType":"VariableDeclaration","scope":1995,"src":"3218:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:16"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"r","nameLocation":"3274:1:16","nodeType":"VariableDeclaration","scope":1995,"src":"3255:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1926_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1990,"nodeType":"UserDefinedTypeName","pathNode":{"id":1989,"name":"StringSlot","nameLocations":["3255:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":1926,"src":"3255:10:16"},"referencedDeclaration":1926,"src":"3255:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1926_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:16"},"scope":2029,"src":"3195:161:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2005,"nodeType":"Block","src":"3558:85:16","statements":[{"AST":{"nativeSrc":"3593:44:16","nodeType":"YulBlock","src":"3593:44:16","statements":[{"nativeSrc":"3607:20:16","nodeType":"YulAssignment","src":"3607:20:16","value":{"name":"store.slot","nativeSrc":"3617:10:16","nodeType":"YulIdentifier","src":"3617:10:16"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:16","nodeType":"YulIdentifier","src":"3607:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2002,"isOffset":false,"isSlot":true,"src":"3607:6:16","suffix":"slot","valueSize":1},{"declaration":1998,"isOffset":false,"isSlot":true,"src":"3617:10:16","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2004,"nodeType":"InlineAssembly","src":"3568:69:16"}]},"documentation":{"id":1996,"nodeType":"StructuredDocumentation","src":"3362:101:16","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2006,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:16","nodeType":"FunctionDefinition","parameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"store","nameLocation":"3506:5:16","nodeType":"VariableDeclaration","scope":2006,"src":"3491:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1997,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:16"},"returnParameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"r","nameLocation":"3555:1:16","nodeType":"VariableDeclaration","scope":2006,"src":"3536:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1926_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2001,"nodeType":"UserDefinedTypeName","pathNode":{"id":2000,"name":"StringSlot","nameLocations":["3536:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":1926,"src":"3536:10:16"},"referencedDeclaration":1926,"src":"3536:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1926_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:16"},"scope":2029,"src":"3468:175:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2016,"nodeType":"Block","src":"3818:79:16","statements":[{"AST":{"nativeSrc":"3853:38:16","nodeType":"YulBlock","src":"3853:38:16","statements":[{"nativeSrc":"3867:14:16","nodeType":"YulAssignment","src":"3867:14:16","value":{"name":"slot","nativeSrc":"3877:4:16","nodeType":"YulIdentifier","src":"3877:4:16"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:16","nodeType":"YulIdentifier","src":"3867:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2013,"isOffset":false,"isSlot":true,"src":"3867:6:16","suffix":"slot","valueSize":1},{"declaration":2009,"isOffset":false,"isSlot":false,"src":"3877:4:16","valueSize":1}],"flags":["memory-safe"],"id":2015,"nodeType":"InlineAssembly","src":"3828:63:16"}]},"documentation":{"id":2007,"nodeType":"StructuredDocumentation","src":"3649:84:16","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2017,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:16","nodeType":"FunctionDefinition","parameters":{"id":2010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"slot","nameLocation":"3768:4:16","nodeType":"VariableDeclaration","scope":2017,"src":"3760:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:16"},"returnParameters":{"id":2014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"r","nameLocation":"3815:1:16","nodeType":"VariableDeclaration","scope":2017,"src":"3797:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1929_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2012,"nodeType":"UserDefinedTypeName","pathNode":{"id":2011,"name":"BytesSlot","nameLocations":["3797:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":1929,"src":"3797:9:16"},"referencedDeclaration":1929,"src":"3797:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1929_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:16"},"scope":2029,"src":"3738:159:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2027,"nodeType":"Block","src":"4094:85:16","statements":[{"AST":{"nativeSrc":"4129:44:16","nodeType":"YulBlock","src":"4129:44:16","statements":[{"nativeSrc":"4143:20:16","nodeType":"YulAssignment","src":"4143:20:16","value":{"name":"store.slot","nativeSrc":"4153:10:16","nodeType":"YulIdentifier","src":"4153:10:16"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:16","nodeType":"YulIdentifier","src":"4143:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2024,"isOffset":false,"isSlot":true,"src":"4143:6:16","suffix":"slot","valueSize":1},{"declaration":2020,"isOffset":false,"isSlot":true,"src":"4153:10:16","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2026,"nodeType":"InlineAssembly","src":"4104:69:16"}]},"documentation":{"id":2018,"nodeType":"StructuredDocumentation","src":"3903:99:16","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2028,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:16","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"store","nameLocation":"4043:5:16","nodeType":"VariableDeclaration","scope":2028,"src":"4029:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2019,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:16"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"r","nameLocation":"4091:1:16","nodeType":"VariableDeclaration","scope":2028,"src":"4073:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1929_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2023,"nodeType":"UserDefinedTypeName","pathNode":{"id":2022,"name":"BytesSlot","nameLocations":["4073:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":1929,"src":"4073:9:16"},"referencedDeclaration":1929,"src":"4073:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1929_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:16"},"scope":2029,"src":"4007:172:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2030,"src":"1407:2774:16","usedErrors":[],"usedEvents":[]}],"src":"193:3989:16"},"id":16},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5749],"SafeCast":[7514],"SignedMath":[7658],"Strings":[3431]},"id":3432,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2031,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2033,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3432,"sourceUnit":5750,"src":"127:37:17","symbolAliases":[{"foreign":{"id":2032,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"135:4:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2035,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3432,"sourceUnit":7515,"src":"165:45:17","symbolAliases":[{"foreign":{"id":2034,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"173:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2037,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3432,"sourceUnit":7659,"src":"211:49:17","symbolAliases":[{"foreign":{"id":2036,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"219:10:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"262:34:17","text":" @dev String operations."},"fullyImplemented":true,"id":3431,"linearizedBaseContracts":[3431],"name":"Strings","nameLocation":"305:7:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2040,"libraryName":{"id":2039,"name":"SafeCast","nameLocations":["325:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":7514,"src":"325:8:17"},"nodeType":"UsingForDirective","src":"319:21:17"},{"constant":true,"id":2043,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:17","nodeType":"VariableDeclaration","scope":3431,"src":"346:56:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2041,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2046,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:17","nodeType":"VariableDeclaration","scope":3431,"src":"408:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2044,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2082,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:17","nodeType":"VariableDeclaration","scope":3431,"src":"456:302:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2047,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:17","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:17","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:17","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:17","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:17","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:17","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:17","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:17","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:17","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:17","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:17","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:17","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:17","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:17","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:17","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:17","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:17","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:17","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:17","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:17","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:17","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"778:81:17","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2089,"name":"StringsInsufficientHexLength","nameLocation":"870:28:17","nodeType":"ErrorDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"value","nameLocation":"907:5:17","nodeType":"VariableDeclaration","scope":2089,"src":"899:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2084,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2087,"mutability":"mutable","name":"length","nameLocation":"922:6:17","nodeType":"VariableDeclaration","scope":2089,"src":"914:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:17"},"src":"864:66:17"},{"documentation":{"id":2090,"nodeType":"StructuredDocumentation","src":"936:108:17","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2092,"name":"StringsInvalidChar","nameLocation":"1055:18:17","nodeType":"ErrorDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[],"src":"1073:2:17"},"src":"1049:27:17"},{"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"1082:84:17","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2095,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:17","nodeType":"ErrorDefinition","parameters":{"id":2094,"nodeType":"ParameterList","parameters":[],"src":"1204:2:17"},"src":"1171:36:17"},{"body":{"id":2142,"nodeType":"Block","src":"1379:563:17","statements":[{"id":2141,"nodeType":"UncheckedBlock","src":"1389:547:17","statements":[{"assignments":[2104],"declarations":[{"constant":false,"id":2104,"mutability":"mutable","name":"length","nameLocation":"1421:6:17","nodeType":"VariableDeclaration","scope":2141,"src":"1413:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2111,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"1441:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2105,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"1430:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5749_$","typeString":"type(library Math)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:17","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5581,"src":"1430:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:17"},{"assignments":[2113],"declarations":[{"constant":false,"id":2113,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:17","nodeType":"VariableDeclaration","scope":2141,"src":"1465:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2112,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2118,"initialValue":{"arguments":[{"id":2116,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"1499:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2114,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:17"},{"assignments":[2120],"declarations":[{"constant":false,"id":2120,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:17","nodeType":"VariableDeclaration","scope":2141,"src":"1520:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2121,"nodeType":"VariableDeclarationStatement","src":"1520:11:17"},{"AST":{"nativeSrc":"1570:69:17","nodeType":"YulBlock","src":"1570:69:17","statements":[{"nativeSrc":"1588:37:17","nodeType":"YulAssignment","src":"1588:37:17","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:17","nodeType":"YulIdentifier","src":"1603:6:17"},{"kind":"number","nativeSrc":"1611:4:17","nodeType":"YulLiteral","src":"1611:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:17","nodeType":"YulIdentifier","src":"1599:3:17"},"nativeSrc":"1599:17:17","nodeType":"YulFunctionCall","src":"1599:17:17"},{"name":"length","nativeSrc":"1618:6:17","nodeType":"YulIdentifier","src":"1618:6:17"}],"functionName":{"name":"add","nativeSrc":"1595:3:17","nodeType":"YulIdentifier","src":"1595:3:17"},"nativeSrc":"1595:30:17","nodeType":"YulFunctionCall","src":"1595:30:17"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:17","nodeType":"YulIdentifier","src":"1588:3:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2113,"isOffset":false,"isSlot":false,"src":"1603:6:17","valueSize":1},{"declaration":2104,"isOffset":false,"isSlot":false,"src":"1618:6:17","valueSize":1},{"declaration":2120,"isOffset":false,"isSlot":false,"src":"1588:3:17","valueSize":1}],"flags":["memory-safe"],"id":2122,"nodeType":"InlineAssembly","src":"1545:94:17"},{"body":{"id":2137,"nodeType":"Block","src":"1665:234:17","statements":[{"expression":{"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:17","subExpression":{"id":2124,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"1683:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2126,"nodeType":"ExpressionStatement","src":"1683:5:17"},{"AST":{"nativeSrc":"1731:86:17","nodeType":"YulBlock","src":"1731:86:17","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:17","nodeType":"YulIdentifier","src":"1761:3:17"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:17","nodeType":"YulIdentifier","src":"1775:5:17"},{"kind":"number","nativeSrc":"1782:2:17","nodeType":"YulLiteral","src":"1782:2:17","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:17","nodeType":"YulIdentifier","src":"1771:3:17"},"nativeSrc":"1771:14:17","nodeType":"YulFunctionCall","src":"1771:14:17"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:17","nodeType":"YulIdentifier","src":"1787:10:17"}],"functionName":{"name":"byte","nativeSrc":"1766:4:17","nodeType":"YulIdentifier","src":"1766:4:17"},"nativeSrc":"1766:32:17","nodeType":"YulFunctionCall","src":"1766:32:17"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:17","nodeType":"YulIdentifier","src":"1753:7:17"},"nativeSrc":"1753:46:17","nodeType":"YulFunctionCall","src":"1753:46:17"},"nativeSrc":"1753:46:17","nodeType":"YulExpressionStatement","src":"1753:46:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2043,"isOffset":false,"isSlot":false,"src":"1787:10:17","valueSize":1},{"declaration":2120,"isOffset":false,"isSlot":false,"src":"1761:3:17","valueSize":1},{"declaration":2098,"isOffset":false,"isSlot":false,"src":"1775:5:17","valueSize":1}],"flags":["memory-safe"],"id":2127,"nodeType":"InlineAssembly","src":"1706:111:17"},{"expression":{"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"1834:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2131,"nodeType":"ExpressionStatement","src":"1834:11:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"1867:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2136,"nodeType":"IfStatement","src":"1863:21:17","trueBody":{"id":2135,"nodeType":"Break","src":"1879:5:17"}}]},"condition":{"hexValue":"74727565","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2138,"nodeType":"WhileStatement","src":"1652:247:17"},{"expression":{"id":2139,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"1919:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2102,"id":2140,"nodeType":"Return","src":"1912:13:17"}]}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"1213:90:17","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2143,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:17","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"value","nameLocation":"1334:5:17","nodeType":"VariableDeclaration","scope":2143,"src":"1326:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:17"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2143,"src":"1364:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2100,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:17"},"scope":3431,"src":"1308:634:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2168,"nodeType":"Block","src":"2118:92:17","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"2149:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:17","trueExpression":{"hexValue":"2d","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"2195:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2161,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"2180:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7658_$","typeString":"type(library SignedMath)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:17","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7657,"src":"2180:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2160,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"2171:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2151,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:17","typeDescriptions":{}}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:17","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:17","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2150,"id":2167,"nodeType":"Return","src":"2128:75:17"}]},"documentation":{"id":2144,"nodeType":"StructuredDocumentation","src":"1948:89:17","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2169,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:17","nodeType":"FunctionDefinition","parameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"value","nameLocation":"2073:5:17","nodeType":"VariableDeclaration","scope":2169,"src":"2066:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2145,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:17"},"returnParameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2169,"src":"2103:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2148,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:17"},"scope":3431,"src":"2042:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2188,"nodeType":"Block","src":"2389:100:17","statements":[{"id":2187,"nodeType":"UncheckedBlock","src":"2399:84:17","statements":[{"expression":{"arguments":[{"id":2178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"2442:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"2461:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2179,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"2449:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5749_$","typeString":"type(library Math)"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:17","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5692,"src":"2449:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2177,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2189,2272,2292],"referencedDeclaration":2272,"src":"2430:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2176,"id":2186,"nodeType":"Return","src":"2423:49:17"}]}]},"documentation":{"id":2170,"nodeType":"StructuredDocumentation","src":"2216:94:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2189,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:17","nodeType":"FunctionDefinition","parameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"value","nameLocation":"2344:5:17","nodeType":"VariableDeclaration","scope":2189,"src":"2336:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:17"},"returnParameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2189,"src":"2374:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2174,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:17"},"scope":3431,"src":"2315:174:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2271,"nodeType":"Block","src":"2702:435:17","statements":[{"assignments":[2200],"declarations":[{"constant":false,"id":2200,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:17","nodeType":"VariableDeclaration","scope":2271,"src":"2712:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2202,"initialValue":{"id":2201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"2733:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:17"},{"assignments":[2204],"declarations":[{"constant":false,"id":2204,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:17","nodeType":"VariableDeclaration","scope":2271,"src":"2748:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2203,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2213,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2208,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"2784:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2205,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:17"},{"expression":{"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2214,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"2805:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2216,"indexExpression":{"hexValue":"30","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2219,"nodeType":"ExpressionStatement","src":"2805:15:17"},{"expression":{"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2220,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"2830:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2222,"indexExpression":{"hexValue":"31","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2225,"nodeType":"ExpressionStatement","src":"2830:15:17"},{"body":{"id":2254,"nodeType":"Block","src":"2900:95:17","statements":[{"expression":{"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2240,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"2914:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2242,"indexExpression":{"id":2241,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"2921:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2243,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"2926:10:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2247,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2244,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"2937:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2249,"nodeType":"ExpressionStatement","src":"2914:40:17"},{"expression":{"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2250,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"2968:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2253,"nodeType":"ExpressionStatement","src":"2968:16:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"2888:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2255,"initializationExpression":{"assignments":[2227],"declarations":[{"constant":false,"id":2227,"mutability":"mutable","name":"i","nameLocation":"2868:1:17","nodeType":"VariableDeclaration","scope":2255,"src":"2860:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2226,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2233,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2229,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"2876:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:17"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:17","subExpression":{"id":2237,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"2897:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2239,"nodeType":"ExpressionStatement","src":"2895:3:17"},"nodeType":"ForStatement","src":"2855:140:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2256,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"3008:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2265,"nodeType":"IfStatement","src":"3004:96:17","trueBody":{"id":2264,"nodeType":"Block","src":"3025:75:17","statements":[{"errorCall":{"arguments":[{"id":2260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"3075:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2261,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"3082:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2259,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"3046:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2263,"nodeType":"RevertStatement","src":"3039:50:17"}]}},{"expression":{"arguments":[{"id":2268,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"3123:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2266,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:17","typeDescriptions":{}}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2198,"id":2270,"nodeType":"Return","src":"3109:21:17"}]},"documentation":{"id":2190,"nodeType":"StructuredDocumentation","src":"2495:112:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2272,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:17","nodeType":"FunctionDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"value","nameLocation":"2641:5:17","nodeType":"VariableDeclaration","scope":2272,"src":"2633:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2194,"mutability":"mutable","name":"length","nameLocation":"2656:6:17","nodeType":"VariableDeclaration","scope":2272,"src":"2648:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:17"},"returnParameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2272,"src":"2687:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2196,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:17"},"scope":3431,"src":"2612:525:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2291,"nodeType":"Block","src":"3369:75:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2285,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"3414:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2283,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:17","typeDescriptions":{}}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2281,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:17","typeDescriptions":{}}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2288,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"3422:14:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2280,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2189,2272,2292],"referencedDeclaration":2272,"src":"3386:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2279,"id":2290,"nodeType":"Return","src":"3379:58:17"}]},"documentation":{"id":2273,"nodeType":"StructuredDocumentation","src":"3143:148:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2292,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:17","nodeType":"FunctionDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"addr","nameLocation":"3325:4:17","nodeType":"VariableDeclaration","scope":2292,"src":"3317:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2274,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:17"},"returnParameters":{"id":2279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2292,"src":"3354:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2277,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:17"},"scope":3431,"src":"3296:148:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2356,"nodeType":"Block","src":"3701:642:17","statements":[{"assignments":[2301],"declarations":[{"constant":false,"id":2301,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:17","nodeType":"VariableDeclaration","scope":2356,"src":"3711:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2300,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2308,"initialValue":{"arguments":[{"arguments":[{"id":2305,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"3751:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2304,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2189,2272,2292],"referencedDeclaration":2292,"src":"3739:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2302,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:17","typeDescriptions":{}}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:17"},{"assignments":[2310],"declarations":[{"constant":false,"id":2310,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:17","nodeType":"VariableDeclaration","scope":2356,"src":"3842:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2311,"nodeType":"VariableDeclarationStatement","src":"3842:17:17"},{"AST":{"nativeSrc":"3894:78:17","nodeType":"YulBlock","src":"3894:78:17","statements":[{"nativeSrc":"3908:54:17","nodeType":"YulAssignment","src":"3908:54:17","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:17","nodeType":"YulLiteral","src":"3925:2:17","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:17","nodeType":"YulIdentifier","src":"3943:6:17"},{"kind":"number","nativeSrc":"3951:4:17","nodeType":"YulLiteral","src":"3951:4:17","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:17","nodeType":"YulIdentifier","src":"3939:3:17"},"nativeSrc":"3939:17:17","nodeType":"YulFunctionCall","src":"3939:17:17"},{"kind":"number","nativeSrc":"3958:2:17","nodeType":"YulLiteral","src":"3958:2:17","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:17","nodeType":"YulIdentifier","src":"3929:9:17"},"nativeSrc":"3929:32:17","nodeType":"YulFunctionCall","src":"3929:32:17"}],"functionName":{"name":"shr","nativeSrc":"3921:3:17","nodeType":"YulIdentifier","src":"3921:3:17"},"nativeSrc":"3921:41:17","nodeType":"YulFunctionCall","src":"3921:41:17"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:17","nodeType":"YulIdentifier","src":"3908:9:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2301,"isOffset":false,"isSlot":false,"src":"3943:6:17","valueSize":1},{"declaration":2310,"isOffset":false,"isSlot":false,"src":"3908:9:17","valueSize":1}],"flags":["memory-safe"],"id":2312,"nodeType":"InlineAssembly","src":"3869:103:17"},{"body":{"id":2349,"nodeType":"Block","src":"4015:291:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"4121:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:17","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2330,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"4150:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2332,"indexExpression":{"id":2331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"4157:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2328,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:17","typeDescriptions":{}}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2344,"nodeType":"IfStatement","src":"4117:150:17","trueBody":{"id":2343,"nodeType":"Block","src":"4167:100:17","statements":[{"expression":{"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2337,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"4235:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2339,"indexExpression":{"id":2338,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"4242:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2342,"nodeType":"ExpressionStatement","src":"4235:17:17"}]}},{"expression":{"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2345,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"4280:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2348,"nodeType":"ExpressionStatement","src":"4280:15:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2317,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"4003:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2350,"initializationExpression":{"assignments":[2314],"declarations":[{"constant":false,"id":2314,"mutability":"mutable","name":"i","nameLocation":"3995:1:17","nodeType":"VariableDeclaration","scope":2350,"src":"3987:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2316,"initialValue":{"hexValue":"3431","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:17","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:17"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:17","subExpression":{"id":2320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"4012:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2322,"nodeType":"ExpressionStatement","src":"4010:3:17"},"nodeType":"ForStatement","src":"3982:324:17"},{"expression":{"arguments":[{"id":2353,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"4329:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2351,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:17","typeDescriptions":{}}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2299,"id":2355,"nodeType":"Return","src":"4315:21:17"}]},"documentation":{"id":2293,"nodeType":"StructuredDocumentation","src":"3450:165:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2357,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:17","nodeType":"FunctionDefinition","parameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"addr","nameLocation":"3657:4:17","nodeType":"VariableDeclaration","scope":2357,"src":"3649:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2294,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:17"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2357,"src":"3686:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2297,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:17"},"scope":3431,"src":"3620:723:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2393,"nodeType":"Block","src":"4498:104:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2369,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"4521:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2367,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:17","typeDescriptions":{}}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:17","memberName":"length","nodeType":"MemberAccess","src":"4515:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2374,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"4540:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2372,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:17","typeDescriptions":{}}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:17","memberName":"length","nodeType":"MemberAccess","src":"4534:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2381,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"4569:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2379,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:17","typeDescriptions":{}}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2378,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2387,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"4592:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2385,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:17","typeDescriptions":{}}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2384,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2366,"id":2392,"nodeType":"Return","src":"4508:87:17"}]},"documentation":{"id":2358,"nodeType":"StructuredDocumentation","src":"4349:66:17","text":" @dev Returns true if the two strings are equal."},"id":2394,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:17","nodeType":"FunctionDefinition","parameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"a","nameLocation":"4449:1:17","nodeType":"VariableDeclaration","scope":2394,"src":"4435:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2359,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"b","nameLocation":"4466:1:17","nodeType":"VariableDeclaration","scope":2394,"src":"4452:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2361,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:17"},"returnParameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2394,"src":"4492:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2364,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:17"},"scope":3431,"src":"4420:182:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2412,"nodeType":"Block","src":"4899:64:17","statements":[{"expression":{"arguments":[{"id":2403,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"4926:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2407,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"4942:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2405,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:17","typeDescriptions":{}}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:17","memberName":"length","nodeType":"MemberAccess","src":"4936:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2402,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2413,2444],"referencedDeclaration":2444,"src":"4916:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2401,"id":2411,"nodeType":"Return","src":"4909:47:17"}]},"documentation":{"id":2395,"nodeType":"StructuredDocumentation","src":"4608:214:17","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2413,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:17","nodeType":"FunctionDefinition","parameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"input","nameLocation":"4860:5:17","nodeType":"VariableDeclaration","scope":2413,"src":"4846:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2396,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:17"},"returnParameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2413,"src":"4890:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:17"},"scope":3431,"src":"4827:136:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2443,"nodeType":"Block","src":"5368:153:17","statements":[{"assignments":[2426,2428],"declarations":[{"constant":false,"id":2426,"mutability":"mutable","name":"success","nameLocation":"5384:7:17","nodeType":"VariableDeclaration","scope":2443,"src":"5379:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2425,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"value","nameLocation":"5401:5:17","nodeType":"VariableDeclaration","scope":2443,"src":"5393:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2434,"initialValue":{"arguments":[{"id":2430,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"5423:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2431,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"5430:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2432,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"5437:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2429,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2465,2502],"referencedDeclaration":2502,"src":"5410:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:17"},{"condition":{"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:17","subExpression":{"id":2435,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"5456:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2440,"nodeType":"IfStatement","src":"5451:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2437,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"5472:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2439,"nodeType":"RevertStatement","src":"5465:27:17"}},{"expression":{"id":2441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"5509:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2424,"id":2442,"nodeType":"Return","src":"5502:12:17"}]},"documentation":{"id":2414,"nodeType":"StructuredDocumentation","src":"4969:294:17","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2444,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:17","nodeType":"FunctionDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2416,"mutability":"mutable","name":"input","nameLocation":"5301:5:17","nodeType":"VariableDeclaration","scope":2444,"src":"5287:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2415,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2418,"mutability":"mutable","name":"begin","nameLocation":"5316:5:17","nodeType":"VariableDeclaration","scope":2444,"src":"5308:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2417,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2420,"mutability":"mutable","name":"end","nameLocation":"5331:3:17","nodeType":"VariableDeclaration","scope":2444,"src":"5323:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:17"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2444,"src":"5359:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:17"},"scope":3431,"src":"5268:253:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2464,"nodeType":"Block","src":"5842:83:17","statements":[{"expression":{"arguments":[{"id":2455,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"5888:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2459,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"5904:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2457,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:17","typeDescriptions":{}}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:17","memberName":"length","nodeType":"MemberAccess","src":"5898:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2454,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5859:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2453,"id":2463,"nodeType":"Return","src":"5852:66:17"}]},"documentation":{"id":2445,"nodeType":"StructuredDocumentation","src":"5527:215:17","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2465,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:17","nodeType":"FunctionDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"input","nameLocation":"5783:5:17","nodeType":"VariableDeclaration","scope":2465,"src":"5769:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2446,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:17"},"returnParameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"success","nameLocation":"5818:7:17","nodeType":"VariableDeclaration","scope":2465,"src":"5813:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2449,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2452,"mutability":"mutable","name":"value","nameLocation":"5835:5:17","nodeType":"VariableDeclaration","scope":2465,"src":"5827:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:17"},"scope":3431,"src":"5747:178:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2501,"nodeType":"Block","src":"6327:144:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2479,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"6341:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2482,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"6353:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2480,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:17","typeDescriptions":{}}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:17","memberName":"length","nodeType":"MemberAccess","src":"6347:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2486,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"6370:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2487,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"6378:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2494,"nodeType":"IfStatement","src":"6337:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2478,"id":2493,"nodeType":"Return","src":"6383:17:17"}},{"expression":{"arguments":[{"id":2496,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"6446:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2497,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"6453:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2498,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"6460:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2495,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"6417:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2478,"id":2500,"nodeType":"Return","src":"6410:54:17"}]},"documentation":{"id":2466,"nodeType":"StructuredDocumentation","src":"5931:238:17","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2502,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:17","nodeType":"FunctionDefinition","parameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"input","nameLocation":"6219:5:17","nodeType":"VariableDeclaration","scope":2502,"src":"6205:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2467,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"begin","nameLocation":"6242:5:17","nodeType":"VariableDeclaration","scope":2502,"src":"6234:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2472,"mutability":"mutable","name":"end","nameLocation":"6265:3:17","nodeType":"VariableDeclaration","scope":2502,"src":"6257:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:17"},"returnParameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"success","nameLocation":"6303:7:17","nodeType":"VariableDeclaration","scope":2502,"src":"6298:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2474,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2477,"mutability":"mutable","name":"value","nameLocation":"6320:5:17","nodeType":"VariableDeclaration","scope":2502,"src":"6312:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:17"},"scope":3431,"src":"6174:297:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2571,"nodeType":"Block","src":"6874:347:17","statements":[{"assignments":[2517],"declarations":[{"constant":false,"id":2517,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:17","nodeType":"VariableDeclaration","scope":2571,"src":"6884:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2516,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2522,"initialValue":{"arguments":[{"id":2520,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"6912:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2518,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:17","typeDescriptions":{}}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:17"},{"assignments":[2524],"declarations":[{"constant":false,"id":2524,"mutability":"mutable","name":"result","nameLocation":"6937:6:17","nodeType":"VariableDeclaration","scope":2571,"src":"6929:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2526,"initialValue":{"hexValue":"30","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:17"},{"body":{"id":2565,"nodeType":"Block","src":"6995:189:17","statements":[{"assignments":[2538],"declarations":[{"constant":false,"id":2538,"mutability":"mutable","name":"chr","nameLocation":"7015:3:17","nodeType":"VariableDeclaration","scope":2565,"src":"7009:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2537,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2548,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2543,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"7064:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2544,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"7072:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2542,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"7041:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2540,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:17","typeDescriptions":{}}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2539,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"7021:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"7094:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:17","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2556,"nodeType":"IfStatement","src":"7090:30:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2554,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2515,"id":2555,"nodeType":"Return","src":"7103:17:17"}},{"expression":{"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"7134:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2560,"nodeType":"ExpressionStatement","src":"7134:12:17"},{"expression":{"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2561,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"7160:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2562,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"7170:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2564,"nodeType":"ExpressionStatement","src":"7160:13:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"6981:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2532,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"6985:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2566,"initializationExpression":{"assignments":[2528],"declarations":[{"constant":false,"id":2528,"mutability":"mutable","name":"i","nameLocation":"6970:1:17","nodeType":"VariableDeclaration","scope":2566,"src":"6962:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2530,"initialValue":{"id":2529,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"6974:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:17","subExpression":{"id":2534,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"6992:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2536,"nodeType":"ExpressionStatement","src":"6990:3:17"},"nodeType":"ForStatement","src":"6957:227:17"},{"expression":{"components":[{"hexValue":"74727565","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"7207:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2515,"id":2570,"nodeType":"Return","src":"7193:21:17"}]},"documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"6477:224:17","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2572,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:17","nodeType":"FunctionDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"input","nameLocation":"6767:5:17","nodeType":"VariableDeclaration","scope":2572,"src":"6753:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2504,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"begin","nameLocation":"6790:5:17","nodeType":"VariableDeclaration","scope":2572,"src":"6782:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"end","nameLocation":"6813:3:17","nodeType":"VariableDeclaration","scope":2572,"src":"6805:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:17"},"returnParameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"success","nameLocation":"6850:7:17","nodeType":"VariableDeclaration","scope":2572,"src":"6845:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2511,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2514,"mutability":"mutable","name":"value","nameLocation":"6867:5:17","nodeType":"VariableDeclaration","scope":2572,"src":"6859:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:17"},"scope":3431,"src":"6706:515:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2590,"nodeType":"Block","src":"7518:63:17","statements":[{"expression":{"arguments":[{"id":2581,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"7544:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2585,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"7560:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2583,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:17","typeDescriptions":{}}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:17","memberName":"length","nodeType":"MemberAccess","src":"7554:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2580,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2591,2622],"referencedDeclaration":2622,"src":"7535:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2579,"id":2589,"nodeType":"Return","src":"7528:46:17"}]},"documentation":{"id":2573,"nodeType":"StructuredDocumentation","src":"7227:216:17","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2591,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:17","nodeType":"FunctionDefinition","parameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"input","nameLocation":"7480:5:17","nodeType":"VariableDeclaration","scope":2591,"src":"7466:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2574,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:17"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2591,"src":"7510:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2577,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:17"},"scope":3431,"src":"7448:133:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2621,"nodeType":"Block","src":"7986:151:17","statements":[{"assignments":[2604,2606],"declarations":[{"constant":false,"id":2604,"mutability":"mutable","name":"success","nameLocation":"8002:7:17","nodeType":"VariableDeclaration","scope":2621,"src":"7997:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2603,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2606,"mutability":"mutable","name":"value","nameLocation":"8018:5:17","nodeType":"VariableDeclaration","scope":2621,"src":"8011:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2605,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2612,"initialValue":{"arguments":[{"id":2608,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"8039:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2609,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"8046:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2610,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"8053:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2607,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2643,2685],"referencedDeclaration":2685,"src":"8027:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:17"},{"condition":{"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:17","subExpression":{"id":2613,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"8072:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2618,"nodeType":"IfStatement","src":"8067:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2615,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"8088:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2617,"nodeType":"RevertStatement","src":"8081:27:17"}},{"expression":{"id":2619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"8125:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2602,"id":2620,"nodeType":"Return","src":"8118:12:17"}]},"documentation":{"id":2592,"nodeType":"StructuredDocumentation","src":"7587:296:17","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2622,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:17","nodeType":"FunctionDefinition","parameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2594,"mutability":"mutable","name":"input","nameLocation":"7920:5:17","nodeType":"VariableDeclaration","scope":2622,"src":"7906:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2593,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2596,"mutability":"mutable","name":"begin","nameLocation":"7935:5:17","nodeType":"VariableDeclaration","scope":2622,"src":"7927:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2598,"mutability":"mutable","name":"end","nameLocation":"7950:3:17","nodeType":"VariableDeclaration","scope":2622,"src":"7942:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:17"},"returnParameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2622,"src":"7978:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2600,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:17"},"scope":3431,"src":"7888:249:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2642,"nodeType":"Block","src":"8528:82:17","statements":[{"expression":{"arguments":[{"id":2633,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"8573:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2637,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"8589:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2635,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:17","typeDescriptions":{}}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:17","memberName":"length","nodeType":"MemberAccess","src":"8583:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2632,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"8545:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2631,"id":2641,"nodeType":"Return","src":"8538:65:17"}]},"documentation":{"id":2623,"nodeType":"StructuredDocumentation","src":"8143:287:17","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2643,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:17","nodeType":"FunctionDefinition","parameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"input","nameLocation":"8470:5:17","nodeType":"VariableDeclaration","scope":2643,"src":"8456:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2624,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:17"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"success","nameLocation":"8505:7:17","nodeType":"VariableDeclaration","scope":2643,"src":"8500:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2627,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2630,"mutability":"mutable","name":"value","nameLocation":"8521:5:17","nodeType":"VariableDeclaration","scope":2643,"src":"8514:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2629,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:17"},"scope":3431,"src":"8435:175:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2648,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:17","nodeType":"VariableDeclaration","scope":3431,"src":"8616:50:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2684,"nodeType":"Block","src":"9132:143:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2662,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"9146:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2665,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"9158:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2663,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:17","typeDescriptions":{}}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:17","memberName":"length","nodeType":"MemberAccess","src":"9152:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2669,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"9175:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2670,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"9183:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2677,"nodeType":"IfStatement","src":"9142:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2661,"id":2676,"nodeType":"Return","src":"9188:17:17"}},{"expression":{"arguments":[{"id":2679,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"9250:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2680,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"9257:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2681,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"9264:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2678,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"9222:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2661,"id":2683,"nodeType":"Return","src":"9215:53:17"}]},"documentation":{"id":2649,"nodeType":"StructuredDocumentation","src":"8673:303:17","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2685,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:17","nodeType":"FunctionDefinition","parameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"input","nameLocation":"9025:5:17","nodeType":"VariableDeclaration","scope":2685,"src":"9011:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2650,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2653,"mutability":"mutable","name":"begin","nameLocation":"9048:5:17","nodeType":"VariableDeclaration","scope":2685,"src":"9040:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2652,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2655,"mutability":"mutable","name":"end","nameLocation":"9071:3:17","nodeType":"VariableDeclaration","scope":2685,"src":"9063:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:17"},"returnParameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2658,"mutability":"mutable","name":"success","nameLocation":"9109:7:17","nodeType":"VariableDeclaration","scope":2685,"src":"9104:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2657,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2660,"mutability":"mutable","name":"value","nameLocation":"9125:5:17","nodeType":"VariableDeclaration","scope":2685,"src":"9118:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2659,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:17"},"scope":3431,"src":"8981:294:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2805,"nodeType":"Block","src":"9675:812:17","statements":[{"assignments":[2700],"declarations":[{"constant":false,"id":2700,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:17","nodeType":"VariableDeclaration","scope":2805,"src":"9685:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2699,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2705,"initialValue":{"arguments":[{"id":2703,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"9713:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2701,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:17","typeDescriptions":{}}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:17"},{"assignments":[2707],"declarations":[{"constant":false,"id":2707,"mutability":"mutable","name":"sign","nameLocation":"9783:4:17","nodeType":"VariableDeclaration","scope":2805,"src":"9776:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2706,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2723,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2708,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"9790:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2709,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"9799:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2718,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"9847:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2719,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"9855:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2717,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"9824:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2715,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:17","typeDescriptions":{}}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:17","trueExpression":{"arguments":[{"hexValue":"30","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2711,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:17","typeDescriptions":{}}},"id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:17"},{"assignments":[2725],"declarations":[{"constant":false,"id":2725,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:17","nodeType":"VariableDeclaration","scope":2805,"src":"9943:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2724,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2732,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2726,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"9963:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2727,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:17","typeDescriptions":{}}},"id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:17"},{"assignments":[2734],"declarations":[{"constant":false,"id":2734,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:17","nodeType":"VariableDeclaration","scope":2805,"src":"9992:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2733,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2741,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2735,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"10012:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2736,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:17","typeDescriptions":{}}},"id":2739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:17"},{"assignments":[2743],"declarations":[{"constant":false,"id":2743,"mutability":"mutable","name":"offset","nameLocation":"10049:6:17","nodeType":"VariableDeclaration","scope":2805,"src":"10041:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2750,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2744,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"10059:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2745,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"10075:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"10058:37:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:17"},{"assignments":[2752,2754],"declarations":[{"constant":false,"id":2752,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:17","nodeType":"VariableDeclaration","scope":2805,"src":"10109:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2751,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2754,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:17","nodeType":"VariableDeclaration","scope":2805,"src":"10126:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2753,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2762,"initialValue":{"arguments":[{"id":2756,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"10159:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2757,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"10166:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2758,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"10174:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2760,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"10182:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2755,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2465,2502],"referencedDeclaration":2502,"src":"10146:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2763,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"10201:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2764,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"10215:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2765,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10226:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2783,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"10343:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2784,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"10357:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2786,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"10373:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2787,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"10385:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2698,"id":2802,"nodeType":"Return","src":"10463:17:17"},"id":2803,"nodeType":"IfStatement","src":"10339:141:17","trueBody":{"id":2798,"nodeType":"Block","src":"10401:56:17","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2792,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2791,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:17","memberName":"min","nodeType":"MemberAccess","src":"10429:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2796,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2698,"id":2797,"nodeType":"Return","src":"10415:31:17"}]}},"id":2804,"nodeType":"IfStatement","src":"10197:283:17","trueBody":{"id":2782,"nodeType":"Block","src":"10242:91:17","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2769,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"10270:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2777,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"10312:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2775,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:17","typeDescriptions":{}}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:17","trueExpression":{"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:17","subExpression":{"arguments":[{"id":2772,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"10293:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2770,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:17","typeDescriptions":{}}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2698,"id":2781,"nodeType":"Return","src":"10256:66:17"}]}}]},"documentation":{"id":2686,"nodeType":"StructuredDocumentation","src":"9281:223:17","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2806,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:17","nodeType":"FunctionDefinition","parameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2688,"mutability":"mutable","name":"input","nameLocation":"9569:5:17","nodeType":"VariableDeclaration","scope":2806,"src":"9555:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2687,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2690,"mutability":"mutable","name":"begin","nameLocation":"9592:5:17","nodeType":"VariableDeclaration","scope":2806,"src":"9584:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2689,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2692,"mutability":"mutable","name":"end","nameLocation":"9615:3:17","nodeType":"VariableDeclaration","scope":2806,"src":"9607:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:17"},"returnParameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"success","nameLocation":"9652:7:17","nodeType":"VariableDeclaration","scope":2806,"src":"9647:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2694,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2697,"mutability":"mutable","name":"value","nameLocation":"9668:5:17","nodeType":"VariableDeclaration","scope":2806,"src":"9661:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2696,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:17"},"scope":3431,"src":"9509:978:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2824,"nodeType":"Block","src":"10832:67:17","statements":[{"expression":{"arguments":[{"id":2815,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"10862:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2819,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"10878:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2817,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:17","typeDescriptions":{}}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:17","memberName":"length","nodeType":"MemberAccess","src":"10872:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2814,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2825,2856],"referencedDeclaration":2856,"src":"10849:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2813,"id":2823,"nodeType":"Return","src":"10842:50:17"}]},"documentation":{"id":2807,"nodeType":"StructuredDocumentation","src":"10493:259:17","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2825,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:17","nodeType":"FunctionDefinition","parameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2809,"mutability":"mutable","name":"input","nameLocation":"10793:5:17","nodeType":"VariableDeclaration","scope":2825,"src":"10779:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2808,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:17"},"returnParameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2825,"src":"10823:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:17"},"scope":3431,"src":"10757:142:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2855,"nodeType":"Block","src":"11320:156:17","statements":[{"assignments":[2838,2840],"declarations":[{"constant":false,"id":2838,"mutability":"mutable","name":"success","nameLocation":"11336:7:17","nodeType":"VariableDeclaration","scope":2855,"src":"11331:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2837,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2840,"mutability":"mutable","name":"value","nameLocation":"11353:5:17","nodeType":"VariableDeclaration","scope":2855,"src":"11345:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2846,"initialValue":{"arguments":[{"id":2842,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"11378:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2843,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"11385:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2844,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"11392:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2841,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2877,2914],"referencedDeclaration":2914,"src":"11362:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:17"},{"condition":{"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:17","subExpression":{"id":2847,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"11411:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2852,"nodeType":"IfStatement","src":"11406:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2849,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"11427:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2851,"nodeType":"RevertStatement","src":"11420:27:17"}},{"expression":{"id":2853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"11464:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2836,"id":2854,"nodeType":"Return","src":"11457:12:17"}]},"documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"10905:307:17","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2856,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:17","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"input","nameLocation":"11253:5:17","nodeType":"VariableDeclaration","scope":2856,"src":"11239:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2827,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2830,"mutability":"mutable","name":"begin","nameLocation":"11268:5:17","nodeType":"VariableDeclaration","scope":2856,"src":"11260:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2829,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2832,"mutability":"mutable","name":"end","nameLocation":"11283:3:17","nodeType":"VariableDeclaration","scope":2856,"src":"11275:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:17"},"returnParameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2856,"src":"11311:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:17"},"scope":3431,"src":"11217:259:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2876,"nodeType":"Block","src":"11803:86:17","statements":[{"expression":{"arguments":[{"id":2867,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"11852:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2871,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"11868:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2869,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:17","typeDescriptions":{}}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:17","memberName":"length","nodeType":"MemberAccess","src":"11862:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2866,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"11820:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2865,"id":2875,"nodeType":"Return","src":"11813:69:17"}]},"documentation":{"id":2857,"nodeType":"StructuredDocumentation","src":"11482:218:17","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2877,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:17","nodeType":"FunctionDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"input","nameLocation":"11744:5:17","nodeType":"VariableDeclaration","scope":2877,"src":"11730:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2858,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:17"},"returnParameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"success","nameLocation":"11779:7:17","nodeType":"VariableDeclaration","scope":2877,"src":"11774:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2861,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2864,"mutability":"mutable","name":"value","nameLocation":"11796:5:17","nodeType":"VariableDeclaration","scope":2877,"src":"11788:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2863,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:17"},"scope":3431,"src":"11705:184:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2913,"nodeType":"Block","src":"12297:147:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2891,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"12311:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2894,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"12323:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2892,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:17","typeDescriptions":{}}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:17","memberName":"length","nodeType":"MemberAccess","src":"12317:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2898,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"12340:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2899,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"12348:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2906,"nodeType":"IfStatement","src":"12307:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2890,"id":2905,"nodeType":"Return","src":"12353:17:17"}},{"expression":{"arguments":[{"id":2908,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"12419:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2909,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"12426:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2910,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"12433:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2907,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"12387:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2890,"id":2912,"nodeType":"Return","src":"12380:57:17"}]},"documentation":{"id":2878,"nodeType":"StructuredDocumentation","src":"11895:241:17","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2914,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:17","nodeType":"FunctionDefinition","parameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"input","nameLocation":"12189:5:17","nodeType":"VariableDeclaration","scope":2914,"src":"12175:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2879,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2882,"mutability":"mutable","name":"begin","nameLocation":"12212:5:17","nodeType":"VariableDeclaration","scope":2914,"src":"12204:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2884,"mutability":"mutable","name":"end","nameLocation":"12235:3:17","nodeType":"VariableDeclaration","scope":2914,"src":"12227:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:17"},"returnParameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"success","nameLocation":"12273:7:17","nodeType":"VariableDeclaration","scope":2914,"src":"12268:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2886,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"value","nameLocation":"12290:5:17","nodeType":"VariableDeclaration","scope":2914,"src":"12282:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:17"},"scope":3431,"src":"12141:303:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3016,"nodeType":"Block","src":"12853:881:17","statements":[{"assignments":[2929],"declarations":[{"constant":false,"id":2929,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:17","nodeType":"VariableDeclaration","scope":3016,"src":"12863:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2928,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2934,"initialValue":{"arguments":[{"id":2932,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"12891:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2930,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:17","typeDescriptions":{}}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:17"},{"assignments":[2936],"declarations":[{"constant":false,"id":2936,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:17","nodeType":"VariableDeclaration","scope":3016,"src":"12945:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2935,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2956,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2937,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"12963:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2938,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"12969:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2946,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"13013:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2947,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"13021:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2945,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"12990:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2943,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:17","typeDescriptions":{}}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2950,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:17","typeDescriptions":{}}},"id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:17"},{"assignments":[2958],"declarations":[{"constant":false,"id":2958,"mutability":"mutable","name":"offset","nameLocation":"13133:6:17","nodeType":"VariableDeclaration","scope":3016,"src":"13125:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2964,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2959,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"13142:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"13142:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:17"},{"assignments":[2966],"declarations":[{"constant":false,"id":2966,"mutability":"mutable","name":"result","nameLocation":"13183:6:17","nodeType":"VariableDeclaration","scope":3016,"src":"13175:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2968,"initialValue":{"hexValue":"30","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:17"},{"body":{"id":3010,"nodeType":"Block","src":"13250:447:17","statements":[{"assignments":[2982],"declarations":[{"constant":false,"id":2982,"mutability":"mutable","name":"chr","nameLocation":"13270:3:17","nodeType":"VariableDeclaration","scope":3010,"src":"13264:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2981,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2992,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2987,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"13319:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2988,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"13327:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2986,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"13296:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2984,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:17","typeDescriptions":{}}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2983,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"13276:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2993,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"13349:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3000,"nodeType":"IfStatement","src":"13345:31:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2927,"id":2999,"nodeType":"Return","src":"13359:17:17"}},{"expression":{"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3001,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"13390:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3004,"nodeType":"ExpressionStatement","src":"13390:12:17"},{"id":3009,"nodeType":"UncheckedBlock","src":"13416:271:17","statements":[{"expression":{"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3005,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"13659:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3006,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"13669:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3008,"nodeType":"ExpressionStatement","src":"13659:13:17"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2975,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"13236:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2976,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"13240:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3011,"initializationExpression":{"assignments":[2970],"declarations":[{"constant":false,"id":2970,"mutability":"mutable","name":"i","nameLocation":"13216:1:17","nodeType":"VariableDeclaration","scope":3011,"src":"13208:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2969,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2974,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2971,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"13220:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2972,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"13228:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:17","subExpression":{"id":2978,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"13247:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"nodeType":"ExpressionStatement","src":"13245:3:17"},"nodeType":"ForStatement","src":"13203:494:17"},{"expression":{"components":[{"hexValue":"74727565","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"13720:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2927,"id":3015,"nodeType":"Return","src":"13706:21:17"}]},"documentation":{"id":2915,"nodeType":"StructuredDocumentation","src":"12450:227:17","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3017,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:17","nodeType":"FunctionDefinition","parameters":{"id":2922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"mutability":"mutable","name":"input","nameLocation":"12746:5:17","nodeType":"VariableDeclaration","scope":3017,"src":"12732:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2916,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2919,"mutability":"mutable","name":"begin","nameLocation":"12769:5:17","nodeType":"VariableDeclaration","scope":3017,"src":"12761:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2918,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2921,"mutability":"mutable","name":"end","nameLocation":"12792:3:17","nodeType":"VariableDeclaration","scope":3017,"src":"12784:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:17"},"returnParameters":{"id":2927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"success","nameLocation":"12829:7:17","nodeType":"VariableDeclaration","scope":3017,"src":"12824:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2923,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2926,"mutability":"mutable","name":"value","nameLocation":"12846:5:17","nodeType":"VariableDeclaration","scope":3017,"src":"12838:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2925,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:17"},"scope":3431,"src":"12682:1052:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3035,"nodeType":"Block","src":"14032:67:17","statements":[{"expression":{"arguments":[{"id":3026,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"14062:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3030,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"14078:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3028,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:17","typeDescriptions":{}}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:17","memberName":"length","nodeType":"MemberAccess","src":"14072:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3025,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3036,3067],"referencedDeclaration":3067,"src":"14049:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3024,"id":3034,"nodeType":"Return","src":"14042:50:17"}]},"documentation":{"id":3018,"nodeType":"StructuredDocumentation","src":"13740:212:17","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3036,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:17","nodeType":"FunctionDefinition","parameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"input","nameLocation":"13993:5:17","nodeType":"VariableDeclaration","scope":3036,"src":"13979:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3019,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:17"},"returnParameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3036,"src":"14023:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3022,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:17"},"scope":3431,"src":"13957:142:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3066,"nodeType":"Block","src":"14472:165:17","statements":[{"assignments":[3049,3051],"declarations":[{"constant":false,"id":3049,"mutability":"mutable","name":"success","nameLocation":"14488:7:17","nodeType":"VariableDeclaration","scope":3066,"src":"14483:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3048,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3051,"mutability":"mutable","name":"value","nameLocation":"14505:5:17","nodeType":"VariableDeclaration","scope":3066,"src":"14497:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3050,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3057,"initialValue":{"arguments":[{"id":3053,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"14530:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3054,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"14537:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3055,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"14544:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3052,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3088,3192],"referencedDeclaration":3192,"src":"14514:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:17"},{"condition":{"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:17","subExpression":{"id":3058,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"14563:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3063,"nodeType":"IfStatement","src":"14558:50:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3060,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"14579:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3062,"nodeType":"RevertStatement","src":"14572:36:17"}},{"expression":{"id":3064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"14625:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3047,"id":3065,"nodeType":"Return","src":"14618:12:17"}]},"documentation":{"id":3037,"nodeType":"StructuredDocumentation","src":"14105:259:17","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3067,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:17","nodeType":"FunctionDefinition","parameters":{"id":3044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"input","nameLocation":"14405:5:17","nodeType":"VariableDeclaration","scope":3067,"src":"14391:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3038,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3041,"mutability":"mutable","name":"begin","nameLocation":"14420:5:17","nodeType":"VariableDeclaration","scope":3067,"src":"14412:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3043,"mutability":"mutable","name":"end","nameLocation":"14435:3:17","nodeType":"VariableDeclaration","scope":3067,"src":"14427:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3042,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:17"},"returnParameters":{"id":3047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3067,"src":"14463:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3045,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:17"},"scope":3431,"src":"14369:268:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3087,"nodeType":"Block","src":"14944:70:17","statements":[{"expression":{"arguments":[{"id":3078,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"14977:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3082,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"14993:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3080,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:17","typeDescriptions":{}}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:17","memberName":"length","nodeType":"MemberAccess","src":"14987:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3077,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3088,3192],"referencedDeclaration":3192,"src":"14961:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3076,"id":3086,"nodeType":"Return","src":"14954:53:17"}]},"documentation":{"id":3068,"nodeType":"StructuredDocumentation","src":"14643:198:17","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3088,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:17","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3070,"mutability":"mutable","name":"input","nameLocation":"14885:5:17","nodeType":"VariableDeclaration","scope":3088,"src":"14871:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3069,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:17"},"returnParameters":{"id":3076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"success","nameLocation":"14920:7:17","nodeType":"VariableDeclaration","scope":3088,"src":"14915:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3072,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3075,"mutability":"mutable","name":"value","nameLocation":"14937:5:17","nodeType":"VariableDeclaration","scope":3088,"src":"14929:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3074,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:17"},"scope":3431,"src":"14846:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3191,"nodeType":"Block","src":"15407:733:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"15421:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3105,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"15433:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3103,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:17","typeDescriptions":{}}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:17","memberName":"length","nodeType":"MemberAccess","src":"15427:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3109,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"15450:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3110,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"15458:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3120,"nodeType":"IfStatement","src":"15417:72:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3114,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:17","typeDescriptions":{}}},"id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3101,"id":3119,"nodeType":"Return","src":"15463:26:17"}},{"assignments":[3122],"declarations":[{"constant":false,"id":3122,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:17","nodeType":"VariableDeclaration","scope":3191,"src":"15500:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3121,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3145,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3123,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"15518:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3124,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"15524:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3134,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"15574:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3132,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:17","typeDescriptions":{}}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3136,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"15582:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3131,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"15545:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3129,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:17","typeDescriptions":{}}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3139,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:17","typeDescriptions":{}}},"id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:17"},{"assignments":[3147],"declarations":[{"constant":false,"id":3147,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:17","nodeType":"VariableDeclaration","scope":3191,"src":"15686:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3155,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3149,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"15716:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"15716:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3156,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"15803:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3157,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"15809:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3159,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"15818:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3189,"nodeType":"Block","src":"16083:51:17","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3183,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:17","typeDescriptions":{}}},"id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3101,"id":3188,"nodeType":"Return","src":"16097:26:17"}]},"id":3190,"nodeType":"IfStatement","src":"15799:335:17","trueBody":{"id":3181,"nodeType":"Block","src":"15834:243:17","statements":[{"assignments":[3162,3164],"declarations":[{"constant":false,"id":3162,"mutability":"mutable","name":"s","nameLocation":"15955:1:17","nodeType":"VariableDeclaration","scope":3181,"src":"15950:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3161,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3164,"mutability":"mutable","name":"v","nameLocation":"15966:1:17","nodeType":"VariableDeclaration","scope":3181,"src":"15958:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3163,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3170,"initialValue":{"arguments":[{"id":3166,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"16003:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3167,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"16010:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3168,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"16017:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3165,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"15971:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:17"},{"expression":{"components":[{"id":3171,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"16043:1:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3176,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"16062:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3174,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:17","typeDescriptions":{}}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3172,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:17","typeDescriptions":{}}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3101,"id":3180,"nodeType":"Return","src":"16035:31:17"}]}}]},"documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"15020:226:17","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3192,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:17","nodeType":"FunctionDefinition","parameters":{"id":3096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"input","nameLocation":"15299:5:17","nodeType":"VariableDeclaration","scope":3192,"src":"15285:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3090,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"begin","nameLocation":"15322:5:17","nodeType":"VariableDeclaration","scope":3192,"src":"15314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3092,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3095,"mutability":"mutable","name":"end","nameLocation":"15345:3:17","nodeType":"VariableDeclaration","scope":3192,"src":"15337:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:17"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"success","nameLocation":"15383:7:17","nodeType":"VariableDeclaration","scope":3192,"src":"15378:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3097,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"value","nameLocation":"15400:5:17","nodeType":"VariableDeclaration","scope":3192,"src":"15392:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3099,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:17"},"scope":3431,"src":"15251:889:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3251,"nodeType":"Block","src":"16209:461:17","statements":[{"assignments":[3200],"declarations":[{"constant":false,"id":3200,"mutability":"mutable","name":"value","nameLocation":"16225:5:17","nodeType":"VariableDeclaration","scope":3251,"src":"16219:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3199,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3205,"initialValue":{"arguments":[{"id":3203,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"16239:3:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3201,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:17","typeDescriptions":{}}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:17"},{"id":3248,"nodeType":"UncheckedBlock","src":"16403:238:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"16431:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:17","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"16445:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:17","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"16491:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"16505:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:17","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"16552:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"16566:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:17","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3240,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3239,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:17","memberName":"max","nodeType":"MemberAccess","src":"16615:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3198,"id":3244,"nodeType":"Return","src":"16608:22:17"},"id":3245,"nodeType":"IfStatement","src":"16548:82:17","trueBody":{"expression":{"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"16578:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:17","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3238,"nodeType":"ExpressionStatement","src":"16578:11:17"}},"id":3246,"nodeType":"IfStatement","src":"16487:143:17","trueBody":{"expression":{"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"16518:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:17","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3227,"nodeType":"ExpressionStatement","src":"16518:11:17"}},"id":3247,"nodeType":"IfStatement","src":"16427:203:17","trueBody":{"expression":{"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"16457:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3216,"nodeType":"ExpressionStatement","src":"16457:11:17"}}]},{"expression":{"id":3249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"16658:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3198,"id":3250,"nodeType":"Return","src":"16651:12:17"}]},"id":3252,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:17","nodeType":"FunctionDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"chr","nameLocation":"16175:3:17","nodeType":"VariableDeclaration","scope":3252,"src":"16168:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3193,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:17"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3252,"src":"16202:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3196,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:17"},"scope":3431,"src":"16146:524:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3417,"nodeType":"Block","src":"17336:1331:17","statements":[{"assignments":[3261],"declarations":[{"constant":false,"id":3261,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:17","nodeType":"VariableDeclaration","scope":3417,"src":"17346:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3260,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3266,"initialValue":{"arguments":[{"id":3264,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"17374:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3262,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:17","typeDescriptions":{}}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:17"},{"assignments":[3268],"declarations":[{"constant":false,"id":3268,"mutability":"mutable","name":"output","nameLocation":"17403:6:17","nodeType":"VariableDeclaration","scope":3417,"src":"17390:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3267,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3276,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3272,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"17426:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:17","memberName":"length","nodeType":"MemberAccess","src":"17426:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3269,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:17"},{"assignments":[3278],"declarations":[{"constant":false,"id":3278,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:17","nodeType":"VariableDeclaration","scope":3417,"src":"17473:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3277,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3280,"initialValue":{"hexValue":"30","id":3279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:17"},{"body":{"id":3409,"nodeType":"Block","src":"17548:854:17","statements":[{"assignments":[3292],"declarations":[{"constant":false,"id":3292,"mutability":"mutable","name":"char","nameLocation":"17569:4:17","nodeType":"VariableDeclaration","scope":3409,"src":"17562:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3291,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3300,"initialValue":{"arguments":[{"arguments":[{"id":3296,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"17606:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3297,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"17614:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3295,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"17583:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3293,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:17","typeDescriptions":{}}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:17"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3301,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"17637:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3305,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"17672:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3303,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:17","typeDescriptions":{}}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3308,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3407,"nodeType":"Block","src":"18330:62:17","statements":[{"expression":{"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3400,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"18348:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3403,"indexExpression":{"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:17","subExpression":{"id":3401,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"18355:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3404,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"18373:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3406,"nodeType":"ExpressionStatement","src":"18348:29:17"}]},"id":3408,"nodeType":"IfStatement","src":"17631:761:17","trueBody":{"id":3399,"nodeType":"Block","src":"17687:637:17","statements":[{"expression":{"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3314,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"17705:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3317,"indexExpression":{"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:17","subExpression":{"id":3315,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"17712:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3320,"nodeType":"ExpressionStatement","src":"17705:29:17"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3321,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"17756:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"17825:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:17","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3341,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"17894:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3351,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"17963:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:17","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3361,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"18032:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:17","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3371,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"18101:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:17","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3381,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"18171:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:17","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3392,"nodeType":"IfStatement","src":"18167:143:17","trueBody":{"id":3391,"nodeType":"Block","src":"18185:125:17","statements":[{"expression":{"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3384,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"18263:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3387,"indexExpression":{"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:17","subExpression":{"id":3385,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"18270:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3390,"nodeType":"ExpressionStatement","src":"18263:28:17"}]}},"id":3393,"nodeType":"IfStatement","src":"18097:213:17","trueBody":{"expression":{"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3374,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"18115:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3377,"indexExpression":{"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:17","subExpression":{"id":3375,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"18122:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3380,"nodeType":"ExpressionStatement","src":"18115:29:17"}},"id":3394,"nodeType":"IfStatement","src":"18028:282:17","trueBody":{"expression":{"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3364,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"18046:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3367,"indexExpression":{"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:17","subExpression":{"id":3365,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"18053:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3370,"nodeType":"ExpressionStatement","src":"18046:28:17"}},"id":3395,"nodeType":"IfStatement","src":"17959:351:17","trueBody":{"expression":{"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3354,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"17977:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3357,"indexExpression":{"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:17","subExpression":{"id":3355,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"17984:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3360,"nodeType":"ExpressionStatement","src":"17977:28:17"}},"id":3396,"nodeType":"IfStatement","src":"17890:420:17","trueBody":{"expression":{"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3344,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"17908:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3347,"indexExpression":{"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:17","subExpression":{"id":3345,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"17915:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3350,"nodeType":"ExpressionStatement","src":"17908:28:17"}},"id":3397,"nodeType":"IfStatement","src":"17821:489:17","trueBody":{"expression":{"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3334,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"17839:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3337,"indexExpression":{"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:17","subExpression":{"id":3335,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"17846:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3340,"nodeType":"ExpressionStatement","src":"17839:28:17"}},"id":3398,"nodeType":"IfStatement","src":"17752:558:17","trueBody":{"expression":{"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3324,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"17770:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3327,"indexExpression":{"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:17","subExpression":{"id":3325,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"17777:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3330,"nodeType":"ExpressionStatement","src":"17770:28:17"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3284,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"17524:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3285,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"17528:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:17","memberName":"length","nodeType":"MemberAccess","src":"17528:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3410,"initializationExpression":{"assignments":[3282],"declarations":[{"constant":false,"id":3282,"mutability":"mutable","name":"i","nameLocation":"17521:1:17","nodeType":"VariableDeclaration","scope":3410,"src":"17513:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3283,"nodeType":"VariableDeclarationStatement","src":"17513:9:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:17","subExpression":{"id":3288,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"17545:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3290,"nodeType":"ExpressionStatement","src":"17543:3:17"},"nodeType":"ForStatement","src":"17508:894:17"},{"AST":{"nativeSrc":"18500:129:17","nodeType":"YulBlock","src":"18500:129:17","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:17","nodeType":"YulIdentifier","src":"18521:6:17"},{"name":"outputLength","nativeSrc":"18529:12:17","nodeType":"YulIdentifier","src":"18529:12:17"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:17","nodeType":"YulIdentifier","src":"18514:6:17"},"nativeSrc":"18514:28:17","nodeType":"YulFunctionCall","src":"18514:28:17"},"nativeSrc":"18514:28:17","nodeType":"YulExpressionStatement","src":"18514:28:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:17","nodeType":"YulLiteral","src":"18562:4:17","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:17","nodeType":"YulIdentifier","src":"18572:6:17"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:17","nodeType":"YulLiteral","src":"18584:1:17","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:17","nodeType":"YulLiteral","src":"18591:1:17","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:17","nodeType":"YulIdentifier","src":"18598:12:17"},{"kind":"number","nativeSrc":"18612:2:17","nodeType":"YulLiteral","src":"18612:2:17","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:17","nodeType":"YulIdentifier","src":"18594:3:17"},"nativeSrc":"18594:21:17","nodeType":"YulFunctionCall","src":"18594:21:17"}],"functionName":{"name":"shr","nativeSrc":"18587:3:17","nodeType":"YulIdentifier","src":"18587:3:17"},"nativeSrc":"18587:29:17","nodeType":"YulFunctionCall","src":"18587:29:17"}],"functionName":{"name":"shl","nativeSrc":"18580:3:17","nodeType":"YulIdentifier","src":"18580:3:17"},"nativeSrc":"18580:37:17","nodeType":"YulFunctionCall","src":"18580:37:17"}],"functionName":{"name":"add","nativeSrc":"18568:3:17","nodeType":"YulIdentifier","src":"18568:3:17"},"nativeSrc":"18568:50:17","nodeType":"YulFunctionCall","src":"18568:50:17"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:17","nodeType":"YulIdentifier","src":"18555:6:17"},"nativeSrc":"18555:64:17","nodeType":"YulFunctionCall","src":"18555:64:17"},"nativeSrc":"18555:64:17","nodeType":"YulExpressionStatement","src":"18555:64:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":3268,"isOffset":false,"isSlot":false,"src":"18521:6:17","valueSize":1},{"declaration":3268,"isOffset":false,"isSlot":false,"src":"18572:6:17","valueSize":1},{"declaration":3278,"isOffset":false,"isSlot":false,"src":"18529:12:17","valueSize":1},{"declaration":3278,"isOffset":false,"isSlot":false,"src":"18598:12:17","valueSize":1}],"flags":["memory-safe"],"id":3411,"nodeType":"InlineAssembly","src":"18475:154:17"},{"expression":{"arguments":[{"id":3414,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"18653:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3412,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:17","typeDescriptions":{}}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3259,"id":3416,"nodeType":"Return","src":"18639:21:17"}]},"documentation":{"id":3253,"nodeType":"StructuredDocumentation","src":"16676:576:17","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3418,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:17","nodeType":"FunctionDefinition","parameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3255,"mutability":"mutable","name":"input","nameLocation":"17291:5:17","nodeType":"VariableDeclaration","scope":3418,"src":"17277:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3254,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:17"},"returnParameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3418,"src":"17321:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3257,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:17"},"scope":3431,"src":"17257:1410:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3429,"nodeType":"Block","src":"19052:225:17","statements":[{"AST":{"nativeSrc":"19201:70:17","nodeType":"YulBlock","src":"19201:70:17","statements":[{"nativeSrc":"19215:46:17","nodeType":"YulAssignment","src":"19215:46:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:17","nodeType":"YulIdentifier","src":"19238:6:17"},{"kind":"number","nativeSrc":"19246:4:17","nodeType":"YulLiteral","src":"19246:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:17","nodeType":"YulIdentifier","src":"19234:3:17"},"nativeSrc":"19234:17:17","nodeType":"YulFunctionCall","src":"19234:17:17"},{"name":"offset","nativeSrc":"19253:6:17","nodeType":"YulIdentifier","src":"19253:6:17"}],"functionName":{"name":"add","nativeSrc":"19230:3:17","nodeType":"YulIdentifier","src":"19230:3:17"},"nativeSrc":"19230:30:17","nodeType":"YulFunctionCall","src":"19230:30:17"}],"functionName":{"name":"mload","nativeSrc":"19224:5:17","nodeType":"YulIdentifier","src":"19224:5:17"},"nativeSrc":"19224:37:17","nodeType":"YulFunctionCall","src":"19224:37:17"},"variableNames":[{"name":"value","nativeSrc":"19215:5:17","nodeType":"YulIdentifier","src":"19215:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3421,"isOffset":false,"isSlot":false,"src":"19238:6:17","valueSize":1},{"declaration":3423,"isOffset":false,"isSlot":false,"src":"19253:6:17","valueSize":1},{"declaration":3426,"isOffset":false,"isSlot":false,"src":"19215:5:17","valueSize":1}],"flags":["memory-safe"],"id":3428,"nodeType":"InlineAssembly","src":"19176:95:17"}]},"documentation":{"id":3419,"nodeType":"StructuredDocumentation","src":"18673:268:17","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3430,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:17","nodeType":"FunctionDefinition","parameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3421,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:17","nodeType":"VariableDeclaration","scope":3430,"src":"18978:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3420,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3423,"mutability":"mutable","name":"offset","nameLocation":"19007:6:17","nodeType":"VariableDeclaration","scope":3430,"src":"18999:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:17"},"returnParameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"value","nameLocation":"19045:5:17","nodeType":"VariableDeclaration","scope":3430,"src":"19037:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:17"},"scope":3431,"src":"18946:331:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3432,"src":"297:18982:17","usedErrors":[2089,2092,2095],"usedEvents":[]}],"src":"101:19179:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3779]},"id":3780,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3433,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3434,"nodeType":"StructuredDocumentation","src":"138:205:18","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3779,"linearizedBaseContracts":[3779],"name":"ECDSA","nameLocation":"352:5:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3439,"members":[{"id":3435,"name":"NoError","nameLocation":"392:7:18","nodeType":"EnumValue","src":"392:7:18"},{"id":3436,"name":"InvalidSignature","nameLocation":"409:16:18","nodeType":"EnumValue","src":"409:16:18"},{"id":3437,"name":"InvalidSignatureLength","nameLocation":"435:22:18","nodeType":"EnumValue","src":"435:22:18"},{"id":3438,"name":"InvalidSignatureS","nameLocation":"467:17:18","nodeType":"EnumValue","src":"467:17:18"}],"name":"RecoverError","nameLocation":"369:12:18","nodeType":"EnumDefinition","src":"364:126:18"},{"documentation":{"id":3440,"nodeType":"StructuredDocumentation","src":"496:63:18","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3442,"name":"ECDSAInvalidSignature","nameLocation":"570:21:18","nodeType":"ErrorDefinition","parameters":{"id":3441,"nodeType":"ParameterList","parameters":[],"src":"591:2:18"},"src":"564:30:18"},{"documentation":{"id":3443,"nodeType":"StructuredDocumentation","src":"600:60:18","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3447,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:18","nodeType":"ErrorDefinition","parameters":{"id":3446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"mutability":"mutable","name":"length","nameLocation":"707:6:18","nodeType":"VariableDeclaration","scope":3447,"src":"699:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3444,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:18"},"src":"665:50:18"},{"documentation":{"id":3448,"nodeType":"StructuredDocumentation","src":"721:85:18","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3452,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:18","nodeType":"ErrorDefinition","parameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"s","nameLocation":"848:1:18","nodeType":"VariableDeclaration","scope":3452,"src":"840:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:18"},"src":"811:40:18"},{"body":{"id":3504,"nodeType":"Block","src":"2285:622:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3467,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"2299:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:18","memberName":"length","nodeType":"MemberAccess","src":"2299:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:18","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3502,"nodeType":"Block","src":"2793:108:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3489,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:18","typeDescriptions":{}}},"id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3493,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"2827:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3439_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:18","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3437,"src":"2827:35:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3497,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"2872:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:18","memberName":"length","nodeType":"MemberAccess","src":"2872:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:18","typeDescriptions":{}}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3439_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3466,"id":3501,"nodeType":"Return","src":"2807:83:18"}]},"id":3503,"nodeType":"IfStatement","src":"2295:606:18","trueBody":{"id":3488,"nodeType":"Block","src":"2323:464:18","statements":[{"assignments":[3472],"declarations":[{"constant":false,"id":3472,"mutability":"mutable","name":"r","nameLocation":"2345:1:18","nodeType":"VariableDeclaration","scope":3488,"src":"2337:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3473,"nodeType":"VariableDeclarationStatement","src":"2337:9:18"},{"assignments":[3475],"declarations":[{"constant":false,"id":3475,"mutability":"mutable","name":"s","nameLocation":"2368:1:18","nodeType":"VariableDeclaration","scope":3488,"src":"2360:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3476,"nodeType":"VariableDeclarationStatement","src":"2360:9:18"},{"assignments":[3478],"declarations":[{"constant":false,"id":3478,"mutability":"mutable","name":"v","nameLocation":"2389:1:18","nodeType":"VariableDeclaration","scope":3488,"src":"2383:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3477,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3479,"nodeType":"VariableDeclarationStatement","src":"2383:7:18"},{"AST":{"nativeSrc":"2560:171:18","nodeType":"YulBlock","src":"2560:171:18","statements":[{"nativeSrc":"2578:32:18","nodeType":"YulAssignment","src":"2578:32:18","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:18","nodeType":"YulIdentifier","src":"2593:9:18"},{"kind":"number","nativeSrc":"2604:4:18","nodeType":"YulLiteral","src":"2604:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:18","nodeType":"YulIdentifier","src":"2589:3:18"},"nativeSrc":"2589:20:18","nodeType":"YulFunctionCall","src":"2589:20:18"}],"functionName":{"name":"mload","nativeSrc":"2583:5:18","nodeType":"YulIdentifier","src":"2583:5:18"},"nativeSrc":"2583:27:18","nodeType":"YulFunctionCall","src":"2583:27:18"},"variableNames":[{"name":"r","nativeSrc":"2578:1:18","nodeType":"YulIdentifier","src":"2578:1:18"}]},{"nativeSrc":"2627:32:18","nodeType":"YulAssignment","src":"2627:32:18","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:18","nodeType":"YulIdentifier","src":"2642:9:18"},{"kind":"number","nativeSrc":"2653:4:18","nodeType":"YulLiteral","src":"2653:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:18","nodeType":"YulIdentifier","src":"2638:3:18"},"nativeSrc":"2638:20:18","nodeType":"YulFunctionCall","src":"2638:20:18"}],"functionName":{"name":"mload","nativeSrc":"2632:5:18","nodeType":"YulIdentifier","src":"2632:5:18"},"nativeSrc":"2632:27:18","nodeType":"YulFunctionCall","src":"2632:27:18"},"variableNames":[{"name":"s","nativeSrc":"2627:1:18","nodeType":"YulIdentifier","src":"2627:1:18"}]},{"nativeSrc":"2676:41:18","nodeType":"YulAssignment","src":"2676:41:18","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:18","nodeType":"YulLiteral","src":"2686:1:18","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:18","nodeType":"YulIdentifier","src":"2699:9:18"},{"kind":"number","nativeSrc":"2710:4:18","nodeType":"YulLiteral","src":"2710:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:18","nodeType":"YulIdentifier","src":"2695:3:18"},"nativeSrc":"2695:20:18","nodeType":"YulFunctionCall","src":"2695:20:18"}],"functionName":{"name":"mload","nativeSrc":"2689:5:18","nodeType":"YulIdentifier","src":"2689:5:18"},"nativeSrc":"2689:27:18","nodeType":"YulFunctionCall","src":"2689:27:18"}],"functionName":{"name":"byte","nativeSrc":"2681:4:18","nodeType":"YulIdentifier","src":"2681:4:18"},"nativeSrc":"2681:36:18","nodeType":"YulFunctionCall","src":"2681:36:18"},"variableNames":[{"name":"v","nativeSrc":"2676:1:18","nodeType":"YulIdentifier","src":"2676:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3472,"isOffset":false,"isSlot":false,"src":"2578:1:18","valueSize":1},{"declaration":3475,"isOffset":false,"isSlot":false,"src":"2627:1:18","valueSize":1},{"declaration":3457,"isOffset":false,"isSlot":false,"src":"2593:9:18","valueSize":1},{"declaration":3457,"isOffset":false,"isSlot":false,"src":"2642:9:18","valueSize":1},{"declaration":3457,"isOffset":false,"isSlot":false,"src":"2699:9:18","valueSize":1},{"declaration":3478,"isOffset":false,"isSlot":false,"src":"2676:1:18","valueSize":1}],"flags":["memory-safe"],"id":3480,"nodeType":"InlineAssembly","src":"2535:196:18"},{"expression":{"arguments":[{"id":3482,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"2762:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3483,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"2768:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3484,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"2771:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3485,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"2774:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3481,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3505,3585,3693],"referencedDeclaration":3693,"src":"2751:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3439_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3439_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3466,"id":3487,"nodeType":"Return","src":"2744:32:18"}]}}]},"documentation":{"id":3453,"nodeType":"StructuredDocumentation","src":"857:1267:18","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3505,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:18","nodeType":"FunctionDefinition","parameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3455,"mutability":"mutable","name":"hash","nameLocation":"2166:4:18","nodeType":"VariableDeclaration","scope":3505,"src":"2158:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3457,"mutability":"mutable","name":"signature","nameLocation":"2193:9:18","nodeType":"VariableDeclaration","scope":3505,"src":"2180:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3456,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:18"},"returnParameters":{"id":3466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3460,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:18","nodeType":"VariableDeclaration","scope":3505,"src":"2232:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3459,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3463,"mutability":"mutable","name":"err","nameLocation":"2264:3:18","nodeType":"VariableDeclaration","scope":3505,"src":"2251:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3462,"nodeType":"UserDefinedTypeName","pathNode":{"id":3461,"name":"RecoverError","nameLocations":["2251:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3439,"src":"2251:12:18"},"referencedDeclaration":3439,"src":"2251:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3465,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:18","nodeType":"VariableDeclaration","scope":3505,"src":"2269:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:18"},"scope":3779,"src":"2129:778:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3534,"nodeType":"Block","src":"3801:168:18","statements":[{"assignments":[3516,3519,3521],"declarations":[{"constant":false,"id":3516,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:18","nodeType":"VariableDeclaration","scope":3534,"src":"3812:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3515,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3519,"mutability":"mutable","name":"error","nameLocation":"3844:5:18","nodeType":"VariableDeclaration","scope":3534,"src":"3831:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3518,"nodeType":"UserDefinedTypeName","pathNode":{"id":3517,"name":"RecoverError","nameLocations":["3831:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3439,"src":"3831:12:18"},"referencedDeclaration":3439,"src":"3831:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3521,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:18","nodeType":"VariableDeclaration","scope":3534,"src":"3851:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3526,"initialValue":{"arguments":[{"id":3523,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"3882:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3524,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"3888:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3522,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3505,3585,3693],"referencedDeclaration":3505,"src":"3871:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3439_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3439_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:18"},{"expression":{"arguments":[{"id":3528,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"3920:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},{"id":3529,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"3927:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3527,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"3908:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3439_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3531,"nodeType":"ExpressionStatement","src":"3908:28:18"},{"expression":{"id":3532,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"3953:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3514,"id":3533,"nodeType":"Return","src":"3946:16:18"}]},"documentation":{"id":3506,"nodeType":"StructuredDocumentation","src":"2913:796:18","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3535,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:18","nodeType":"FunctionDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"hash","nameLocation":"3739:4:18","nodeType":"VariableDeclaration","scope":3535,"src":"3731:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3510,"mutability":"mutable","name":"signature","nameLocation":"3758:9:18","nodeType":"VariableDeclaration","scope":3535,"src":"3745:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3509,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:18"},"returnParameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3535,"src":"3792:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3512,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:18"},"scope":3779,"src":"3714:255:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3584,"nodeType":"Block","src":"4348:342:18","statements":[{"id":3583,"nodeType":"UncheckedBlock","src":"4358:326:18","statements":[{"assignments":[3553],"declarations":[{"constant":false,"id":3553,"mutability":"mutable","name":"s","nameLocation":"4390:1:18","nodeType":"VariableDeclaration","scope":3583,"src":"4382:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3560,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3554,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"4394:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:18","typeDescriptions":{}}},"id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:18"},{"assignments":[3562],"declarations":[{"constant":false,"id":3562,"mutability":"mutable","name":"v","nameLocation":"4591:1:18","nodeType":"VariableDeclaration","scope":3583,"src":"4585:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3561,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3575,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3567,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"4610:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:18","typeDescriptions":{}}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3571,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:18","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3563,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:18","typeDescriptions":{}}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:18"},{"expression":{"arguments":[{"id":3577,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"4659:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3578,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"4665:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3579,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"4668:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3580,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"4671:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3576,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3505,3585,3693],"referencedDeclaration":3693,"src":"4648:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3439_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3439_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3551,"id":3582,"nodeType":"Return","src":"4641:32:18"}]}]},"documentation":{"id":3536,"nodeType":"StructuredDocumentation","src":"3975:205:18","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3585,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:18","nodeType":"FunctionDefinition","parameters":{"id":3543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"hash","nameLocation":"4222:4:18","nodeType":"VariableDeclaration","scope":3585,"src":"4214:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3540,"mutability":"mutable","name":"r","nameLocation":"4244:1:18","nodeType":"VariableDeclaration","scope":3585,"src":"4236:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3542,"mutability":"mutable","name":"vs","nameLocation":"4263:2:18","nodeType":"VariableDeclaration","scope":3585,"src":"4255:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:18"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:18","nodeType":"VariableDeclaration","scope":3585,"src":"4295:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3544,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3548,"mutability":"mutable","name":"err","nameLocation":"4327:3:18","nodeType":"VariableDeclaration","scope":3585,"src":"4314:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3547,"nodeType":"UserDefinedTypeName","pathNode":{"id":3546,"name":"RecoverError","nameLocations":["4314:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3439,"src":"4314:12:18"},"referencedDeclaration":3439,"src":"4314:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3550,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:18","nodeType":"VariableDeclaration","scope":3585,"src":"4332:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:18"},"scope":3779,"src":"4185:505:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3617,"nodeType":"Block","src":"4903:164:18","statements":[{"assignments":[3598,3601,3603],"declarations":[{"constant":false,"id":3598,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:18","nodeType":"VariableDeclaration","scope":3617,"src":"4914:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3597,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"error","nameLocation":"4946:5:18","nodeType":"VariableDeclaration","scope":3617,"src":"4933:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3600,"nodeType":"UserDefinedTypeName","pathNode":{"id":3599,"name":"RecoverError","nameLocations":["4933:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3439,"src":"4933:12:18"},"referencedDeclaration":3439,"src":"4933:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3603,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:18","nodeType":"VariableDeclaration","scope":3617,"src":"4953:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3602,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3609,"initialValue":{"arguments":[{"id":3605,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"4984:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3606,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"4990:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3607,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"4993:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3604,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3505,3585,3693],"referencedDeclaration":3585,"src":"4973:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3439_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3439_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:18"},{"expression":{"arguments":[{"id":3611,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"5018:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},{"id":3612,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"5025:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3610,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"5006:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3439_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3614,"nodeType":"ExpressionStatement","src":"5006:28:18"},{"expression":{"id":3615,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"5051:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3596,"id":3616,"nodeType":"Return","src":"5044:16:18"}]},"documentation":{"id":3586,"nodeType":"StructuredDocumentation","src":"4696:116:18","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3618,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:18","nodeType":"FunctionDefinition","parameters":{"id":3593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3588,"mutability":"mutable","name":"hash","nameLocation":"4842:4:18","nodeType":"VariableDeclaration","scope":3618,"src":"4834:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3590,"mutability":"mutable","name":"r","nameLocation":"4856:1:18","nodeType":"VariableDeclaration","scope":3618,"src":"4848:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3592,"mutability":"mutable","name":"vs","nameLocation":"4867:2:18","nodeType":"VariableDeclaration","scope":3618,"src":"4859:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:18"},"returnParameters":{"id":3596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3618,"src":"4894:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3594,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:18"},"scope":3779,"src":"4817:250:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3692,"nodeType":"Block","src":"5382:1372:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3639,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"6278:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3637,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:18","typeDescriptions":{}}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3653,"nodeType":"IfStatement","src":"6266:164:18","trueBody":{"id":3652,"nodeType":"Block","src":"6351:79:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3643,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:18","typeDescriptions":{}}},"id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3647,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"6385:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3439_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:18","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3438,"src":"6385:30:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},{"id":3649,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"6417:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3439_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3636,"id":3651,"nodeType":"Return","src":"6365:54:18"}]}},{"assignments":[3655],"declarations":[{"constant":false,"id":3655,"mutability":"mutable","name":"signer","nameLocation":"6532:6:18","nodeType":"VariableDeclaration","scope":3692,"src":"6524:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3654,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3662,"initialValue":{"arguments":[{"id":3657,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"6551:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3658,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"6557:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3659,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"6560:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3660,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"6563:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3656,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:18","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3663,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"6579:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3664,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:18","typeDescriptions":{}}},"id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3682,"nodeType":"IfStatement","src":"6575:113:18","trueBody":{"id":3681,"nodeType":"Block","src":"6601:87:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3669,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:18","typeDescriptions":{}}},"id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3673,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"6635:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3439_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:18","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3436,"src":"6635:29:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:18","typeDescriptions":{}}},"id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3439_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3636,"id":3680,"nodeType":"Return","src":"6615:62:18"}]}},{"expression":{"components":[{"id":3683,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"6706:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3684,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"6714:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3439_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:18","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3435,"src":"6714:20:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3686,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:18","typeDescriptions":{}}},"id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3439_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3636,"id":3691,"nodeType":"Return","src":"6698:49:18"}]},"documentation":{"id":3619,"nodeType":"StructuredDocumentation","src":"5073:125:18","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3693,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:18","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"hash","nameLocation":"5240:4:18","nodeType":"VariableDeclaration","scope":3693,"src":"5232:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3623,"mutability":"mutable","name":"v","nameLocation":"5260:1:18","nodeType":"VariableDeclaration","scope":3693,"src":"5254:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3622,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"r","nameLocation":"5279:1:18","nodeType":"VariableDeclaration","scope":3693,"src":"5271:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"s","nameLocation":"5298:1:18","nodeType":"VariableDeclaration","scope":3693,"src":"5290:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:18"},"returnParameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:18","nodeType":"VariableDeclaration","scope":3693,"src":"5329:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3629,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"err","nameLocation":"5361:3:18","nodeType":"VariableDeclaration","scope":3693,"src":"5348:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3632,"nodeType":"UserDefinedTypeName","pathNode":{"id":3631,"name":"RecoverError","nameLocations":["5348:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3439,"src":"5348:12:18"},"referencedDeclaration":3439,"src":"5348:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:18","nodeType":"VariableDeclaration","scope":3693,"src":"5366:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:18"},"scope":3779,"src":"5203:1551:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3728,"nodeType":"Block","src":"6981:166:18","statements":[{"assignments":[3708,3711,3713],"declarations":[{"constant":false,"id":3708,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:18","nodeType":"VariableDeclaration","scope":3728,"src":"6992:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3707,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3711,"mutability":"mutable","name":"error","nameLocation":"7024:5:18","nodeType":"VariableDeclaration","scope":3728,"src":"7011:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3710,"nodeType":"UserDefinedTypeName","pathNode":{"id":3709,"name":"RecoverError","nameLocations":["7011:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3439,"src":"7011:12:18"},"referencedDeclaration":3439,"src":"7011:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3713,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:18","nodeType":"VariableDeclaration","scope":3728,"src":"7031:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3720,"initialValue":{"arguments":[{"id":3715,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"7062:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3716,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"7068:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3717,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"7071:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3718,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"7074:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3714,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3505,3585,3693],"referencedDeclaration":3693,"src":"7051:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3439_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3439_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:18"},{"expression":{"arguments":[{"id":3722,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"7098:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},{"id":3723,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"7105:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3721,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"7086:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3439_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3725,"nodeType":"ExpressionStatement","src":"7086:28:18"},{"expression":{"id":3726,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"7131:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3706,"id":3727,"nodeType":"Return","src":"7124:16:18"}]},"documentation":{"id":3694,"nodeType":"StructuredDocumentation","src":"6760:122:18","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3729,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:18","nodeType":"FunctionDefinition","parameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3696,"mutability":"mutable","name":"hash","nameLocation":"6912:4:18","nodeType":"VariableDeclaration","scope":3729,"src":"6904:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3698,"mutability":"mutable","name":"v","nameLocation":"6924:1:18","nodeType":"VariableDeclaration","scope":3729,"src":"6918:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3697,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3700,"mutability":"mutable","name":"r","nameLocation":"6935:1:18","nodeType":"VariableDeclaration","scope":3729,"src":"6927:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3702,"mutability":"mutable","name":"s","nameLocation":"6946:1:18","nodeType":"VariableDeclaration","scope":3729,"src":"6938:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:18"},"returnParameters":{"id":3706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3729,"src":"6972:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3704,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:18"},"scope":3779,"src":"6887:260:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3777,"nodeType":"Block","src":"7352:460:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3738,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"7366:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3739,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"7375:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3439_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:18","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3435,"src":"7375:20:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3744,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"7462:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3745,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"7471:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3439_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:18","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3436,"src":"7471:29:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3752,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"7567:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3753,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"7576:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3439_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:18","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3437,"src":"7576:35:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3764,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"7701:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3765,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"7710:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3439_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:18","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3438,"src":"7710:30:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3773,"nodeType":"IfStatement","src":"7697:109:18","trueBody":{"id":3772,"nodeType":"Block","src":"7742:64:18","statements":[{"errorCall":{"arguments":[{"id":3769,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"7786:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3768,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"7763:22:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3771,"nodeType":"RevertStatement","src":"7756:39:18"}]}},"id":3774,"nodeType":"IfStatement","src":"7563:243:18","trueBody":{"id":3763,"nodeType":"Block","src":"7613:78:18","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3759,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"7670:8:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:18","typeDescriptions":{}}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3756,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"7634:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3762,"nodeType":"RevertStatement","src":"7627:53:18"}]}},"id":3775,"nodeType":"IfStatement","src":"7458:348:18","trueBody":{"id":3751,"nodeType":"Block","src":"7502:55:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3748,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"7523:21:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3750,"nodeType":"RevertStatement","src":"7516:30:18"}]}},"id":3776,"nodeType":"IfStatement","src":"7362:444:18","trueBody":{"id":3743,"nodeType":"Block","src":"7397:55:18","statements":[{"functionReturnParameters":3737,"id":3742,"nodeType":"Return","src":"7411:7:18"}]}}]},"documentation":{"id":3730,"nodeType":"StructuredDocumentation","src":"7153:122:18","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3778,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:18","nodeType":"FunctionDefinition","parameters":{"id":3736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3733,"mutability":"mutable","name":"error","nameLocation":"7314:5:18","nodeType":"VariableDeclaration","scope":3778,"src":"7301:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3732,"nodeType":"UserDefinedTypeName","pathNode":{"id":3731,"name":"RecoverError","nameLocations":["7301:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":3439,"src":"7301:12:18"},"referencedDeclaration":3439,"src":"7301:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3439","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3735,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:18","nodeType":"VariableDeclaration","scope":3778,"src":"7321:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:18"},"returnParameters":{"id":3737,"nodeType":"ParameterList","parameters":[],"src":"7352:0:18"},"scope":3779,"src":"7280:532:18","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3780,"src":"344:7470:18","usedErrors":[3442,3447,3452],"usedEvents":[]}],"src":"112:7703:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[4006],"IERC5267":[404],"MessageHashUtils":[4092],"ShortString":[1694],"ShortStrings":[1905]},"id":4007,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3781,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3783,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4007,"sourceUnit":4093,"src":"139:56:19","symbolAliases":[{"foreign":{"id":3782,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"147:16:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3786,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4007,"sourceUnit":1906,"src":"196:62:19","symbolAliases":[{"foreign":{"id":3784,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"204:12:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3785,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"218:11:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3788,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4007,"sourceUnit":405,"src":"259:55:19","symbolAliases":[{"foreign":{"id":3787,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"267:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3790,"name":"IERC5267","nameLocations":["1988:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":404,"src":"1988:8:19"},"id":3791,"nodeType":"InheritanceSpecifier","src":"1988:8:19"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3789,"nodeType":"StructuredDocumentation","src":"316:1643:19","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":4006,"linearizedBaseContracts":[4006,404],"name":"EIP712","nameLocation":"1978:6:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3793,"libraryName":{"id":3792,"name":"ShortStrings","nameLocations":["2009:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":1905,"src":"2009:12:19"},"nodeType":"UsingForDirective","src":"2003:25:19"},{"constant":true,"id":3798,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:19","nodeType":"VariableDeclaration","scope":4006,"src":"2034:140:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3795,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3800,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:19","nodeType":"VariableDeclaration","scope":4006,"src":"2373:48:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3802,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:19","nodeType":"VariableDeclaration","scope":4006,"src":"2427:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3804,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:19","nodeType":"VariableDeclaration","scope":4006,"src":"2473:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3803,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3806,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:19","nodeType":"VariableDeclaration","scope":4006,"src":"2517:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3808,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:19","nodeType":"VariableDeclaration","scope":4006,"src":"2560:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3811,"mutability":"immutable","name":"_name","nameLocation":"2637:5:19","nodeType":"VariableDeclaration","scope":4006,"src":"2607:35:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"},"typeName":{"id":3810,"nodeType":"UserDefinedTypeName","pathNode":{"id":3809,"name":"ShortString","nameLocations":["2607:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"2607:11:19"},"referencedDeclaration":1694,"src":"2607:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3814,"mutability":"immutable","name":"_version","nameLocation":"2678:8:19","nodeType":"VariableDeclaration","scope":4006,"src":"2648:38:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"},"typeName":{"id":3813,"nodeType":"UserDefinedTypeName","pathNode":{"id":3812,"name":"ShortString","nameLocations":["2648:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"2648:11:19"},"referencedDeclaration":1694,"src":"2648:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3816,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:19","nodeType":"VariableDeclaration","scope":4006,"src":"2742:28:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3815,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3818,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:19","nodeType":"VariableDeclaration","scope":4006,"src":"2826:31:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3817,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3875,"nodeType":"Block","src":"3483:376:19","statements":[{"expression":{"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3826,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"3493:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3829,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"3532:13:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3827,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"3501:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:19","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1846,"src":"3501:30:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1694_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"src":"3493:53:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"id":3832,"nodeType":"ExpressionStatement","src":"3493:53:19"},{"expression":{"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3833,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"3556:8:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3836,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"3601:16:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3834,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"3567:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:19","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1846,"src":"3567:33:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1694_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"src":"3556:62:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"id":3839,"nodeType":"ExpressionStatement","src":"3556:62:19"},{"expression":{"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3840,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"3628:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3844,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"3658:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3842,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:19","typeDescriptions":{}}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3841,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3848,"nodeType":"ExpressionStatement","src":"3628:36:19"},{"expression":{"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3849,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"3674:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3853,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"3707:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3851,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:19","typeDescriptions":{}}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3850,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3857,"nodeType":"ExpressionStatement","src":"3674:42:19"},{"expression":{"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3858,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"3727:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3859,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3862,"nodeType":"ExpressionStatement","src":"3727:30:19"},{"expression":{"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3863,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"3767:22:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3864,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"3792:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3867,"nodeType":"ExpressionStatement","src":"3767:48:19"},{"expression":{"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3868,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"3825:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3871,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4006","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4006","typeString":"contract EIP712"}],"id":3870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3869,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:19","typeDescriptions":{}}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3874,"nodeType":"ExpressionStatement","src":"3825:27:19"}]},"documentation":{"id":3819,"nodeType":"StructuredDocumentation","src":"2864:559:19","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3876,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"name","nameLocation":"3454:4:19","nodeType":"VariableDeclaration","scope":3876,"src":"3440:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3820,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"version","nameLocation":"3474:7:19","nodeType":"VariableDeclaration","scope":3876,"src":"3460:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3822,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:19"},"returnParameters":{"id":3825,"nodeType":"ParameterList","parameters":[],"src":"3483:0:19"},"scope":4006,"src":"3428:431:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3901,"nodeType":"Block","src":"4007:200:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3884,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4006","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4006","typeString":"contract EIP712"}],"id":3883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3882,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:19","typeDescriptions":{}}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3886,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"4038:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3888,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3890,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"4070:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3899,"nodeType":"Block","src":"4146:55:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3896,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"4167:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3881,"id":3898,"nodeType":"Return","src":"4160:30:19"}]},"id":3900,"nodeType":"IfStatement","src":"4017:184:19","trueBody":{"id":3895,"nodeType":"Block","src":"4086:54:19","statements":[{"expression":{"id":3893,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"4107:22:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3881,"id":3894,"nodeType":"Return","src":"4100:29:19"}]}}]},"documentation":{"id":3877,"nodeType":"StructuredDocumentation","src":"3865:75:19","text":" @dev Returns the domain separator for the current chain."},"id":3902,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:19","nodeType":"FunctionDefinition","parameters":{"id":3878,"nodeType":"ParameterList","parameters":[],"src":"3972:2:19"},"returnParameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3902,"src":"3998:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:19"},"scope":4006,"src":"3945:262:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3922,"nodeType":"Block","src":"4277:115:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3910,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"4315:9:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3911,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"4326:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3912,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"4339:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3913,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3917,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4006","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4006","typeString":"contract EIP712"}],"id":3916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3915,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:19","typeDescriptions":{}}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3908,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:19","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3907,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3906,"id":3921,"nodeType":"Return","src":"4287:98:19"}]},"id":3923,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:19","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[],"src":"4243:2:19"},"returnParameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3923,"src":"4268:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:19"},"scope":4006,"src":"4213:179:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3938,"nodeType":"Block","src":"5103:90:19","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3933,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"5153:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3935,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"5175:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3931,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"5120:16:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4092_$","typeString":"type(library MessageHashUtils)"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:19","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4091,"src":"5120:32:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3930,"id":3937,"nodeType":"Return","src":"5113:73:19"}]},"documentation":{"id":3924,"nodeType":"StructuredDocumentation","src":"4398:614:19","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3939,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:19","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3926,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:19","nodeType":"VariableDeclaration","scope":3939,"src":"5043:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:19"},"returnParameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3939,"src":"5094:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:19"},"scope":4006,"src":"5017:176:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[403],"body":{"id":3980,"nodeType":"Block","src":"5556:229:19","statements":[{"expression":{"components":[{"hexValue":"0f","id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5587:7:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3959,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"5617:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3961,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"5644:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3963,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5674:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"5674:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3967,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5709:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4006","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4006","typeString":"contract EIP712"}],"id":3966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5701:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3965,"name":"address","nodeType":"ElementaryTypeName","src":"5701:7:19","typeDescriptions":{}}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5736:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5728:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5728:7:19","typeDescriptions":{}}},"id":3972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5728:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5766:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5752:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3973,"name":"uint256","nodeType":"ElementaryTypeName","src":"5756:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3974,"nodeType":"ArrayTypeName","src":"5756:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5573:205:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3957,"id":3979,"nodeType":"Return","src":"5566:212:19"}]},"documentation":{"id":3940,"nodeType":"StructuredDocumentation","src":"5199:24:19","text":"@inheritdoc IERC5267"},"functionSelector":"84b0196e","id":3981,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5237:12:19","nodeType":"FunctionDefinition","parameters":{"id":3941,"nodeType":"ParameterList","parameters":[],"src":"5249:2:19"},"returnParameters":{"id":3957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"mutability":"mutable","name":"fields","nameLocation":"5333:6:19","nodeType":"VariableDeclaration","scope":3981,"src":"5326:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3942,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5326:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3945,"mutability":"mutable","name":"name","nameLocation":"5367:4:19","nodeType":"VariableDeclaration","scope":3981,"src":"5353:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3944,"name":"string","nodeType":"ElementaryTypeName","src":"5353:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3947,"mutability":"mutable","name":"version","nameLocation":"5399:7:19","nodeType":"VariableDeclaration","scope":3981,"src":"5385:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3946,"name":"string","nodeType":"ElementaryTypeName","src":"5385:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"chainId","nameLocation":"5428:7:19","nodeType":"VariableDeclaration","scope":3981,"src":"5420:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"5420:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3951,"mutability":"mutable","name":"verifyingContract","nameLocation":"5457:17:19","nodeType":"VariableDeclaration","scope":3981,"src":"5449:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3950,"name":"address","nodeType":"ElementaryTypeName","src":"5449:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3953,"mutability":"mutable","name":"salt","nameLocation":"5496:4:19","nodeType":"VariableDeclaration","scope":3981,"src":"5488:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3952,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5488:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3956,"mutability":"mutable","name":"extensions","nameLocation":"5531:10:19","nodeType":"VariableDeclaration","scope":3981,"src":"5514:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3954,"name":"uint256","nodeType":"ElementaryTypeName","src":"5514:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3955,"nodeType":"ArrayTypeName","src":"5514:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5312:239:19"},"scope":4006,"src":"5228:557:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3992,"nodeType":"Block","src":"6166:65:19","statements":[{"expression":{"arguments":[{"id":3989,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"6210:13:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3987,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"6183:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6189:20:19","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1873,"src":"6183:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1694_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1694_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6183:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3986,"id":3991,"nodeType":"Return","src":"6176:48:19"}]},"documentation":{"id":3982,"nodeType":"StructuredDocumentation","src":"5791:256:19","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3993,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6114:11:19","nodeType":"FunctionDefinition","parameters":{"id":3983,"nodeType":"ParameterList","parameters":[],"src":"6125:2:19"},"returnParameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3993,"src":"6151:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3984,"name":"string","nodeType":"ElementaryTypeName","src":"6151:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6150:15:19"},"scope":4006,"src":"6105:126:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4004,"nodeType":"Block","src":"6621:71:19","statements":[{"expression":{"arguments":[{"id":4001,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"6668:16:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3999,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"6638:8:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1694","typeString":"ShortString"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6647:20:19","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1873,"src":"6638:29:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1694_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1694_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6638:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3998,"id":4003,"nodeType":"Return","src":"6631:54:19"}]},"documentation":{"id":3994,"nodeType":"StructuredDocumentation","src":"6237:262:19","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4005,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6566:14:19","nodeType":"FunctionDefinition","parameters":{"id":3995,"nodeType":"ParameterList","parameters":[],"src":"6580:2:19"},"returnParameters":{"id":3998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4005,"src":"6606:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3996,"name":"string","nodeType":"ElementaryTypeName","src":"6606:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6605:15:19"},"scope":4006,"src":"6557:135:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4007,"src":"1960:4734:19","usedErrors":[1702,1704],"usedEvents":[384]}],"src":"113:6582:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4092],"Strings":[3431]},"id":4093,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4008,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4010,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4093,"sourceUnit":3432,"src":"149:39:20","symbolAliases":[{"foreign":{"id":4009,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"157:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4011,"nodeType":"StructuredDocumentation","src":"190:330:20","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4092,"linearizedBaseContracts":[4092],"name":"MessageHashUtils","nameLocation":"529:16:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":4020,"nodeType":"Block","src":"1339:341:20","statements":[{"AST":{"nativeSrc":"1374:300:20","nodeType":"YulBlock","src":"1374:300:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:20","nodeType":"YulLiteral","src":"1395:4:20","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:20","nodeType":"YulLiteral","src":"1401:34:20","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:20","nodeType":"YulIdentifier","src":"1388:6:20"},"nativeSrc":"1388:48:20","nodeType":"YulFunctionCall","src":"1388:48:20"},"nativeSrc":"1388:48:20","nodeType":"YulExpressionStatement","src":"1388:48:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:20","nodeType":"YulLiteral","src":"1497:4:20","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:20","nodeType":"YulIdentifier","src":"1503:11:20"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:20","nodeType":"YulIdentifier","src":"1490:6:20"},"nativeSrc":"1490:25:20","nodeType":"YulFunctionCall","src":"1490:25:20"},"nativeSrc":"1490:25:20","nodeType":"YulExpressionStatement","src":"1490:25:20"},{"nativeSrc":"1569:31:20","nodeType":"YulAssignment","src":"1569:31:20","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:20","nodeType":"YulLiteral","src":"1589:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:20","nodeType":"YulLiteral","src":"1595:4:20","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:20","nodeType":"YulIdentifier","src":"1579:9:20"},"nativeSrc":"1579:21:20","nodeType":"YulFunctionCall","src":"1579:21:20"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:20","nodeType":"YulIdentifier","src":"1569:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4017,"isOffset":false,"isSlot":false,"src":"1569:6:20","valueSize":1},{"declaration":4014,"isOffset":false,"isSlot":false,"src":"1503:11:20","valueSize":1}],"flags":["memory-safe"],"id":4019,"nodeType":"InlineAssembly","src":"1349:325:20"}]},"documentation":{"id":4012,"nodeType":"StructuredDocumentation","src":"552:690:20","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4021,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:20","nodeType":"FunctionDefinition","parameters":{"id":4015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4014,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:20","nodeType":"VariableDeclaration","scope":4021,"src":"1279:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:20"},"returnParameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"digest","nameLocation":"1331:6:20","nodeType":"VariableDeclaration","scope":4021,"src":"1323:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:20"},"scope":4092,"src":"1247:433:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4046,"nodeType":"Block","src":"2257:143:20","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4038,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"2366:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:20","memberName":"length","nodeType":"MemberAccess","src":"2366:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4036,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"2349:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3431_$","typeString":"type(library Strings)"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:20","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2143,"src":"2349:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4034,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:20","typeDescriptions":{}}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4042,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"2384:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4030,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:20","typeDescriptions":{}}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:20","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:20","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4029,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4028,"id":4045,"nodeType":"Return","src":"2267:126:20"}]},"documentation":{"id":4022,"nodeType":"StructuredDocumentation","src":"1686:480:20","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4047,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:20","nodeType":"FunctionDefinition","parameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"message","nameLocation":"2216:7:20","nodeType":"VariableDeclaration","scope":4047,"src":"2203:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4023,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:20"},"returnParameters":{"id":4028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4047,"src":"2248:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:20"},"scope":4092,"src":"2171:229:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4066,"nodeType":"Block","src":"2854:80:20","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4061,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"2910:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4062,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"2921:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4058,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4057,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4056,"id":4065,"nodeType":"Return","src":"2864:63:20"}]},"documentation":{"id":4048,"nodeType":"StructuredDocumentation","src":"2406:332:20","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4067,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:20","nodeType":"FunctionDefinition","parameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4050,"mutability":"mutable","name":"validator","nameLocation":"2792:9:20","nodeType":"VariableDeclaration","scope":4067,"src":"2784:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4049,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4052,"mutability":"mutable","name":"data","nameLocation":"2816:4:20","nodeType":"VariableDeclaration","scope":4067,"src":"2803:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4051,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:20"},"returnParameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4067,"src":"2845:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:20"},"scope":4092,"src":"2743:191:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4078,"nodeType":"Block","src":"3216:216:20","statements":[{"AST":{"nativeSrc":"3251:175:20","nodeType":"YulBlock","src":"3251:175:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:20","nodeType":"YulLiteral","src":"3272:4:20","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:20","nodeType":"YulLiteral","src":"3278:10:20","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:20","nodeType":"YulIdentifier","src":"3265:6:20"},"nativeSrc":"3265:24:20","nodeType":"YulFunctionCall","src":"3265:24:20"},"nativeSrc":"3265:24:20","nodeType":"YulExpressionStatement","src":"3265:24:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:20","nodeType":"YulLiteral","src":"3309:4:20","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:20","nodeType":"YulLiteral","src":"3319:2:20","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:20","nodeType":"YulIdentifier","src":"3323:9:20"}],"functionName":{"name":"shl","nativeSrc":"3315:3:20","nodeType":"YulIdentifier","src":"3315:3:20"},"nativeSrc":"3315:18:20","nodeType":"YulFunctionCall","src":"3315:18:20"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:20","nodeType":"YulIdentifier","src":"3302:6:20"},"nativeSrc":"3302:32:20","nodeType":"YulFunctionCall","src":"3302:32:20"},"nativeSrc":"3302:32:20","nodeType":"YulExpressionStatement","src":"3302:32:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:20","nodeType":"YulLiteral","src":"3354:4:20","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:20","nodeType":"YulIdentifier","src":"3360:11:20"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:20","nodeType":"YulIdentifier","src":"3347:6:20"},"nativeSrc":"3347:25:20","nodeType":"YulFunctionCall","src":"3347:25:20"},"nativeSrc":"3347:25:20","nodeType":"YulExpressionStatement","src":"3347:25:20"},{"nativeSrc":"3385:31:20","nodeType":"YulAssignment","src":"3385:31:20","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:20","nodeType":"YulLiteral","src":"3405:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:20","nodeType":"YulLiteral","src":"3411:4:20","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:20","nodeType":"YulIdentifier","src":"3395:9:20"},"nativeSrc":"3395:21:20","nodeType":"YulFunctionCall","src":"3395:21:20"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:20","nodeType":"YulIdentifier","src":"3385:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4075,"isOffset":false,"isSlot":false,"src":"3385:6:20","valueSize":1},{"declaration":4072,"isOffset":false,"isSlot":false,"src":"3360:11:20","valueSize":1},{"declaration":4070,"isOffset":false,"isSlot":false,"src":"3323:9:20","valueSize":1}],"flags":["memory-safe"],"id":4077,"nodeType":"InlineAssembly","src":"3226:200:20"}]},"documentation":{"id":4068,"nodeType":"StructuredDocumentation","src":"2940:129:20","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":4079,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:20","nodeType":"FunctionDefinition","parameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"validator","nameLocation":"3132:9:20","nodeType":"VariableDeclaration","scope":4079,"src":"3124:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4069,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4072,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:20","nodeType":"VariableDeclaration","scope":4079,"src":"3151:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:20"},"returnParameters":{"id":4076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4075,"mutability":"mutable","name":"digest","nameLocation":"3208:6:20","nodeType":"VariableDeclaration","scope":4079,"src":"3200:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:20"},"scope":4092,"src":"3074:358:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4090,"nodeType":"Block","src":"3983:265:20","statements":[{"AST":{"nativeSrc":"4018:224:20","nodeType":"YulBlock","src":"4018:224:20","statements":[{"nativeSrc":"4032:22:20","nodeType":"YulVariableDeclaration","src":"4032:22:20","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:20","nodeType":"YulLiteral","src":"4049:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:20","nodeType":"YulIdentifier","src":"4043:5:20"},"nativeSrc":"4043:11:20","nodeType":"YulFunctionCall","src":"4043:11:20"},"variables":[{"name":"ptr","nativeSrc":"4036:3:20","nodeType":"YulTypedName","src":"4036:3:20","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:20","nodeType":"YulIdentifier","src":"4074:3:20"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:20","nodeType":"YulLiteral","src":"4079:10:20","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:20","nodeType":"YulIdentifier","src":"4067:6:20"},"nativeSrc":"4067:23:20","nodeType":"YulFunctionCall","src":"4067:23:20"},"nativeSrc":"4067:23:20","nodeType":"YulExpressionStatement","src":"4067:23:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:20","nodeType":"YulIdentifier","src":"4114:3:20"},{"kind":"number","nativeSrc":"4119:4:20","nodeType":"YulLiteral","src":"4119:4:20","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:20","nodeType":"YulIdentifier","src":"4110:3:20"},"nativeSrc":"4110:14:20","nodeType":"YulFunctionCall","src":"4110:14:20"},{"name":"domainSeparator","nativeSrc":"4126:15:20","nodeType":"YulIdentifier","src":"4126:15:20"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:20","nodeType":"YulIdentifier","src":"4103:6:20"},"nativeSrc":"4103:39:20","nodeType":"YulFunctionCall","src":"4103:39:20"},"nativeSrc":"4103:39:20","nodeType":"YulExpressionStatement","src":"4103:39:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:20","nodeType":"YulIdentifier","src":"4166:3:20"},{"kind":"number","nativeSrc":"4171:4:20","nodeType":"YulLiteral","src":"4171:4:20","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:20","nodeType":"YulIdentifier","src":"4162:3:20"},"nativeSrc":"4162:14:20","nodeType":"YulFunctionCall","src":"4162:14:20"},{"name":"structHash","nativeSrc":"4178:10:20","nodeType":"YulIdentifier","src":"4178:10:20"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:20","nodeType":"YulIdentifier","src":"4155:6:20"},"nativeSrc":"4155:34:20","nodeType":"YulFunctionCall","src":"4155:34:20"},"nativeSrc":"4155:34:20","nodeType":"YulExpressionStatement","src":"4155:34:20"},{"nativeSrc":"4202:30:20","nodeType":"YulAssignment","src":"4202:30:20","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:20","nodeType":"YulIdentifier","src":"4222:3:20"},{"kind":"number","nativeSrc":"4227:4:20","nodeType":"YulLiteral","src":"4227:4:20","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:20","nodeType":"YulIdentifier","src":"4212:9:20"},"nativeSrc":"4212:20:20","nodeType":"YulFunctionCall","src":"4212:20:20"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:20","nodeType":"YulIdentifier","src":"4202:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4087,"isOffset":false,"isSlot":false,"src":"4202:6:20","valueSize":1},{"declaration":4082,"isOffset":false,"isSlot":false,"src":"4126:15:20","valueSize":1},{"declaration":4084,"isOffset":false,"isSlot":false,"src":"4178:10:20","valueSize":1}],"flags":["memory-safe"],"id":4089,"nodeType":"InlineAssembly","src":"3993:249:20"}]},"documentation":{"id":4080,"nodeType":"StructuredDocumentation","src":"3438:431:20","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4091,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:20","nodeType":"FunctionDefinition","parameters":{"id":4085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:20","nodeType":"VariableDeclaration","scope":4091,"src":"3899:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4084,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:20","nodeType":"VariableDeclaration","scope":4091,"src":"3924:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:20"},"returnParameters":{"id":4088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4087,"mutability":"mutable","name":"digest","nameLocation":"3975:6:20","nodeType":"VariableDeclaration","scope":4091,"src":"3967:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:20"},"scope":4092,"src":"3874:374:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4093,"src":"521:3729:20","usedErrors":[],"usedEvents":[]}],"src":"123:4128:20"},"id":20},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4116],"IERC165":[4128]},"id":4117,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4094,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4096,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4117,"sourceUnit":4129,"src":"140:38:21","symbolAliases":[{"foreign":{"id":4095,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"148:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4098,"name":"IERC165","nameLocations":["688:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4128,"src":"688:7:21"},"id":4099,"nodeType":"InheritanceSpecifier","src":"688:7:21"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4097,"nodeType":"StructuredDocumentation","src":"180:479:21","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4116,"linearizedBaseContracts":[4116,4128],"name":"ERC165","nameLocation":"678:6:21","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4127],"body":{"id":4114,"nodeType":"Block","src":"812:64:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4107,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"829:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4109,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"849:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4128_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4128_$","typeString":"type(contract IERC165)"}],"id":4108,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4128","typeString":"type(contract IERC165)"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:21","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4106,"id":4113,"nodeType":"Return","src":"822:47:21"}]},"documentation":{"id":4100,"nodeType":"StructuredDocumentation","src":"702:23:21","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":4115,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:21","nodeType":"FunctionDefinition","parameters":{"id":4103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4102,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:21","nodeType":"VariableDeclaration","scope":4115,"src":"757:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4101,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:21"},"returnParameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4115,"src":"806:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4104,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:21"},"scope":4116,"src":"730:146:21","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4117,"src":"660:218:21","usedErrors":[],"usedEvents":[]}],"src":"114:765:21"},"id":21},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4128]},"id":4129,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4118,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4119,"nodeType":"StructuredDocumentation","src":"142:280:22","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4128,"linearizedBaseContracts":[4128],"name":"IERC165","nameLocation":"433:7:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4120,"nodeType":"StructuredDocumentation","src":"447:340:22","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4127,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:22","nodeType":"FunctionDefinition","parameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:22","nodeType":"VariableDeclaration","scope":4127,"src":"819:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4121,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:22"},"returnParameters":{"id":4126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4127,"src":"862:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4124,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:22"},"scope":4128,"src":"792:76:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4129,"src":"423:447:22","usedErrors":[],"usedEvents":[]}],"src":"115:756:22"},"id":22},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5749],"Panic":[1580],"SafeCast":[7514]},"id":5750,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4130,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4132,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5750,"sourceUnit":1581,"src":"129:35:23","symbolAliases":[{"foreign":{"id":4131,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"137:5:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4134,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5750,"sourceUnit":7515,"src":"165:40:23","symbolAliases":[{"foreign":{"id":4133,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"173:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4135,"nodeType":"StructuredDocumentation","src":"207:73:23","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5749,"linearizedBaseContracts":[5749],"name":"Math","nameLocation":"289:4:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4140,"members":[{"id":4136,"name":"Floor","nameLocation":"324:5:23","nodeType":"EnumValue","src":"324:5:23"},{"id":4137,"name":"Ceil","nameLocation":"367:4:23","nodeType":"EnumValue","src":"367:4:23"},{"id":4138,"name":"Trunc","nameLocation":"409:5:23","nodeType":"EnumValue","src":"409:5:23"},{"id":4139,"name":"Expand","nameLocation":"439:6:23","nodeType":"EnumValue","src":"439:6:23"}],"name":"Rounding","nameLocation":"305:8:23","nodeType":"EnumDefinition","src":"300:169:23"},{"body":{"id":4153,"nodeType":"Block","src":"731:112:23","statements":[{"AST":{"nativeSrc":"766:71:23","nodeType":"YulBlock","src":"766:71:23","statements":[{"nativeSrc":"780:16:23","nodeType":"YulAssignment","src":"780:16:23","value":{"arguments":[{"name":"a","nativeSrc":"791:1:23","nodeType":"YulIdentifier","src":"791:1:23"},{"name":"b","nativeSrc":"794:1:23","nodeType":"YulIdentifier","src":"794:1:23"}],"functionName":{"name":"add","nativeSrc":"787:3:23","nodeType":"YulIdentifier","src":"787:3:23"},"nativeSrc":"787:9:23","nodeType":"YulFunctionCall","src":"787:9:23"},"variableNames":[{"name":"low","nativeSrc":"780:3:23","nodeType":"YulIdentifier","src":"780:3:23"}]},{"nativeSrc":"809:18:23","nodeType":"YulAssignment","src":"809:18:23","value":{"arguments":[{"name":"low","nativeSrc":"820:3:23","nodeType":"YulIdentifier","src":"820:3:23"},{"name":"a","nativeSrc":"825:1:23","nodeType":"YulIdentifier","src":"825:1:23"}],"functionName":{"name":"lt","nativeSrc":"817:2:23","nodeType":"YulIdentifier","src":"817:2:23"},"nativeSrc":"817:10:23","nodeType":"YulFunctionCall","src":"817:10:23"},"variableNames":[{"name":"high","nativeSrc":"809:4:23","nodeType":"YulIdentifier","src":"809:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4143,"isOffset":false,"isSlot":false,"src":"791:1:23","valueSize":1},{"declaration":4143,"isOffset":false,"isSlot":false,"src":"825:1:23","valueSize":1},{"declaration":4145,"isOffset":false,"isSlot":false,"src":"794:1:23","valueSize":1},{"declaration":4148,"isOffset":false,"isSlot":false,"src":"809:4:23","valueSize":1},{"declaration":4150,"isOffset":false,"isSlot":false,"src":"780:3:23","valueSize":1},{"declaration":4150,"isOffset":false,"isSlot":false,"src":"820:3:23","valueSize":1}],"flags":["memory-safe"],"id":4152,"nodeType":"InlineAssembly","src":"741:96:23"}]},"documentation":{"id":4141,"nodeType":"StructuredDocumentation","src":"475:163:23","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4154,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:23","nodeType":"FunctionDefinition","parameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4143,"mutability":"mutable","name":"a","nameLocation":"667:1:23","nodeType":"VariableDeclaration","scope":4154,"src":"659:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4142,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4145,"mutability":"mutable","name":"b","nameLocation":"678:1:23","nodeType":"VariableDeclaration","scope":4154,"src":"670:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:23"},"returnParameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"high","nameLocation":"712:4:23","nodeType":"VariableDeclaration","scope":4154,"src":"704:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4150,"mutability":"mutable","name":"low","nameLocation":"726:3:23","nodeType":"VariableDeclaration","scope":4154,"src":"718:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4149,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:23"},"scope":5749,"src":"643:200:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4167,"nodeType":"Block","src":"1115:462:23","statements":[{"AST":{"nativeSrc":"1437:134:23","nodeType":"YulBlock","src":"1437:134:23","statements":[{"nativeSrc":"1451:30:23","nodeType":"YulVariableDeclaration","src":"1451:30:23","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:23","nodeType":"YulIdentifier","src":"1468:1:23"},{"name":"b","nativeSrc":"1471:1:23","nodeType":"YulIdentifier","src":"1471:1:23"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:23","nodeType":"YulLiteral","src":"1478:1:23","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:23","nodeType":"YulIdentifier","src":"1474:3:23"},"nativeSrc":"1474:6:23","nodeType":"YulFunctionCall","src":"1474:6:23"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:23","nodeType":"YulIdentifier","src":"1461:6:23"},"nativeSrc":"1461:20:23","nodeType":"YulFunctionCall","src":"1461:20:23"},"variables":[{"name":"mm","nativeSrc":"1455:2:23","nodeType":"YulTypedName","src":"1455:2:23","type":""}]},{"nativeSrc":"1494:16:23","nodeType":"YulAssignment","src":"1494:16:23","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:23","nodeType":"YulIdentifier","src":"1505:1:23"},{"name":"b","nativeSrc":"1508:1:23","nodeType":"YulIdentifier","src":"1508:1:23"}],"functionName":{"name":"mul","nativeSrc":"1501:3:23","nodeType":"YulIdentifier","src":"1501:3:23"},"nativeSrc":"1501:9:23","nodeType":"YulFunctionCall","src":"1501:9:23"},"variableNames":[{"name":"low","nativeSrc":"1494:3:23","nodeType":"YulIdentifier","src":"1494:3:23"}]},{"nativeSrc":"1523:38:23","nodeType":"YulAssignment","src":"1523:38:23","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:23","nodeType":"YulIdentifier","src":"1539:2:23"},{"name":"low","nativeSrc":"1543:3:23","nodeType":"YulIdentifier","src":"1543:3:23"}],"functionName":{"name":"sub","nativeSrc":"1535:3:23","nodeType":"YulIdentifier","src":"1535:3:23"},"nativeSrc":"1535:12:23","nodeType":"YulFunctionCall","src":"1535:12:23"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:23","nodeType":"YulIdentifier","src":"1552:2:23"},{"name":"low","nativeSrc":"1556:3:23","nodeType":"YulIdentifier","src":"1556:3:23"}],"functionName":{"name":"lt","nativeSrc":"1549:2:23","nodeType":"YulIdentifier","src":"1549:2:23"},"nativeSrc":"1549:11:23","nodeType":"YulFunctionCall","src":"1549:11:23"}],"functionName":{"name":"sub","nativeSrc":"1531:3:23","nodeType":"YulIdentifier","src":"1531:3:23"},"nativeSrc":"1531:30:23","nodeType":"YulFunctionCall","src":"1531:30:23"},"variableNames":[{"name":"high","nativeSrc":"1523:4:23","nodeType":"YulIdentifier","src":"1523:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4157,"isOffset":false,"isSlot":false,"src":"1468:1:23","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"1505:1:23","valueSize":1},{"declaration":4159,"isOffset":false,"isSlot":false,"src":"1471:1:23","valueSize":1},{"declaration":4159,"isOffset":false,"isSlot":false,"src":"1508:1:23","valueSize":1},{"declaration":4162,"isOffset":false,"isSlot":false,"src":"1523:4:23","valueSize":1},{"declaration":4164,"isOffset":false,"isSlot":false,"src":"1494:3:23","valueSize":1},{"declaration":4164,"isOffset":false,"isSlot":false,"src":"1543:3:23","valueSize":1},{"declaration":4164,"isOffset":false,"isSlot":false,"src":"1556:3:23","valueSize":1}],"flags":["memory-safe"],"id":4166,"nodeType":"InlineAssembly","src":"1412:159:23"}]},"documentation":{"id":4155,"nodeType":"StructuredDocumentation","src":"849:173:23","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4168,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:23","nodeType":"FunctionDefinition","parameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4157,"mutability":"mutable","name":"a","nameLocation":"1051:1:23","nodeType":"VariableDeclaration","scope":4168,"src":"1043:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4159,"mutability":"mutable","name":"b","nameLocation":"1062:1:23","nodeType":"VariableDeclaration","scope":4168,"src":"1054:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:23"},"returnParameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4162,"mutability":"mutable","name":"high","nameLocation":"1096:4:23","nodeType":"VariableDeclaration","scope":4168,"src":"1088:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4164,"mutability":"mutable","name":"low","nameLocation":"1110:3:23","nodeType":"VariableDeclaration","scope":4168,"src":"1102:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4163,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:23"},"scope":5749,"src":"1027:550:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4202,"nodeType":"Block","src":"1784:149:23","statements":[{"id":4201,"nodeType":"UncheckedBlock","src":"1794:133:23","statements":[{"assignments":[4181],"declarations":[{"constant":false,"id":4181,"mutability":"mutable","name":"c","nameLocation":"1826:1:23","nodeType":"VariableDeclaration","scope":4201,"src":"1818:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4185,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4182,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"1830:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4183,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"1834:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:23"},{"expression":{"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4186,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"1849:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4187,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"1859:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4188,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"1864:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4191,"nodeType":"ExpressionStatement","src":"1849:16:23"},{"expression":{"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4192,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"1879:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4193,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"1888:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4196,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"1908:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4194,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"1892:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"1892:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4200,"nodeType":"ExpressionStatement","src":"1879:37:23"}]}]},"documentation":{"id":4169,"nodeType":"StructuredDocumentation","src":"1583:105:23","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4203,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:23","nodeType":"FunctionDefinition","parameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"a","nameLocation":"1717:1:23","nodeType":"VariableDeclaration","scope":4203,"src":"1709:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4173,"mutability":"mutable","name":"b","nameLocation":"1728:1:23","nodeType":"VariableDeclaration","scope":4203,"src":"1720:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:23"},"returnParameters":{"id":4179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"mutability":"mutable","name":"success","nameLocation":"1759:7:23","nodeType":"VariableDeclaration","scope":4203,"src":"1754:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4175,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4178,"mutability":"mutable","name":"result","nameLocation":"1776:6:23","nodeType":"VariableDeclaration","scope":4203,"src":"1768:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:23"},"scope":5749,"src":"1693:240:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4237,"nodeType":"Block","src":"2143:149:23","statements":[{"id":4236,"nodeType":"UncheckedBlock","src":"2153:133:23","statements":[{"assignments":[4216],"declarations":[{"constant":false,"id":4216,"mutability":"mutable","name":"c","nameLocation":"2185:1:23","nodeType":"VariableDeclaration","scope":4236,"src":"2177:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4215,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4220,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4217,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"2189:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4218,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"2193:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:23"},{"expression":{"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4221,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"2208:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"2218:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4223,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"2223:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4226,"nodeType":"ExpressionStatement","src":"2208:16:23"},{"expression":{"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4227,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"2238:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4228,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"2247:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4231,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"2267:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4229,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"2251:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"2251:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4235,"nodeType":"ExpressionStatement","src":"2238:37:23"}]}]},"documentation":{"id":4204,"nodeType":"StructuredDocumentation","src":"1939:108:23","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4238,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:23","nodeType":"FunctionDefinition","parameters":{"id":4209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4206,"mutability":"mutable","name":"a","nameLocation":"2076:1:23","nodeType":"VariableDeclaration","scope":4238,"src":"2068:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4205,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4208,"mutability":"mutable","name":"b","nameLocation":"2087:1:23","nodeType":"VariableDeclaration","scope":4238,"src":"2079:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4207,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:23"},"returnParameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"success","nameLocation":"2118:7:23","nodeType":"VariableDeclaration","scope":4238,"src":"2113:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4210,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"result","nameLocation":"2135:6:23","nodeType":"VariableDeclaration","scope":4238,"src":"2127:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:23"},"scope":5749,"src":"2052:240:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4267,"nodeType":"Block","src":"2505:391:23","statements":[{"id":4266,"nodeType":"UncheckedBlock","src":"2515:375:23","statements":[{"assignments":[4251],"declarations":[{"constant":false,"id":4251,"mutability":"mutable","name":"c","nameLocation":"2547:1:23","nodeType":"VariableDeclaration","scope":4266,"src":"2539:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4255,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4252,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"2551:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4253,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"2555:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:23"},{"AST":{"nativeSrc":"2595:188:23","nodeType":"YulBlock","src":"2595:188:23","statements":[{"nativeSrc":"2727:42:23","nodeType":"YulAssignment","src":"2727:42:23","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:23","nodeType":"YulIdentifier","src":"2748:1:23"},{"name":"a","nativeSrc":"2751:1:23","nodeType":"YulIdentifier","src":"2751:1:23"}],"functionName":{"name":"div","nativeSrc":"2744:3:23","nodeType":"YulIdentifier","src":"2744:3:23"},"nativeSrc":"2744:9:23","nodeType":"YulFunctionCall","src":"2744:9:23"},{"name":"b","nativeSrc":"2755:1:23","nodeType":"YulIdentifier","src":"2755:1:23"}],"functionName":{"name":"eq","nativeSrc":"2741:2:23","nodeType":"YulIdentifier","src":"2741:2:23"},"nativeSrc":"2741:16:23","nodeType":"YulFunctionCall","src":"2741:16:23"},{"arguments":[{"name":"a","nativeSrc":"2766:1:23","nodeType":"YulIdentifier","src":"2766:1:23"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:23","nodeType":"YulIdentifier","src":"2759:6:23"},"nativeSrc":"2759:9:23","nodeType":"YulFunctionCall","src":"2759:9:23"}],"functionName":{"name":"or","nativeSrc":"2738:2:23","nodeType":"YulIdentifier","src":"2738:2:23"},"nativeSrc":"2738:31:23","nodeType":"YulFunctionCall","src":"2738:31:23"},"variableNames":[{"name":"success","nativeSrc":"2727:7:23","nodeType":"YulIdentifier","src":"2727:7:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4241,"isOffset":false,"isSlot":false,"src":"2751:1:23","valueSize":1},{"declaration":4241,"isOffset":false,"isSlot":false,"src":"2766:1:23","valueSize":1},{"declaration":4243,"isOffset":false,"isSlot":false,"src":"2755:1:23","valueSize":1},{"declaration":4251,"isOffset":false,"isSlot":false,"src":"2748:1:23","valueSize":1},{"declaration":4246,"isOffset":false,"isSlot":false,"src":"2727:7:23","valueSize":1}],"flags":["memory-safe"],"id":4256,"nodeType":"InlineAssembly","src":"2570:213:23"},{"expression":{"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"2842:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4258,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"2851:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4261,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"2871:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4259,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"2855:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"2855:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4265,"nodeType":"ExpressionStatement","src":"2842:37:23"}]}]},"documentation":{"id":4239,"nodeType":"StructuredDocumentation","src":"2298:111:23","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4268,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:23","nodeType":"FunctionDefinition","parameters":{"id":4244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4241,"mutability":"mutable","name":"a","nameLocation":"2438:1:23","nodeType":"VariableDeclaration","scope":4268,"src":"2430:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4240,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4243,"mutability":"mutable","name":"b","nameLocation":"2449:1:23","nodeType":"VariableDeclaration","scope":4268,"src":"2441:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4242,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:23"},"returnParameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"mutability":"mutable","name":"success","nameLocation":"2480:7:23","nodeType":"VariableDeclaration","scope":4268,"src":"2475:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4245,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4248,"mutability":"mutable","name":"result","nameLocation":"2497:6:23","nodeType":"VariableDeclaration","scope":4268,"src":"2489:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:23"},"scope":5749,"src":"2414:482:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4288,"nodeType":"Block","src":"3111:231:23","statements":[{"id":4287,"nodeType":"UncheckedBlock","src":"3121:215:23","statements":[{"expression":{"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4280,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"3145:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4281,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"3155:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4285,"nodeType":"ExpressionStatement","src":"3145:15:23"},{"AST":{"nativeSrc":"3199:127:23","nodeType":"YulBlock","src":"3199:127:23","statements":[{"nativeSrc":"3293:19:23","nodeType":"YulAssignment","src":"3293:19:23","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:23","nodeType":"YulIdentifier","src":"3307:1:23"},{"name":"b","nativeSrc":"3310:1:23","nodeType":"YulIdentifier","src":"3310:1:23"}],"functionName":{"name":"div","nativeSrc":"3303:3:23","nodeType":"YulIdentifier","src":"3303:3:23"},"nativeSrc":"3303:9:23","nodeType":"YulFunctionCall","src":"3303:9:23"},"variableNames":[{"name":"result","nativeSrc":"3293:6:23","nodeType":"YulIdentifier","src":"3293:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4271,"isOffset":false,"isSlot":false,"src":"3307:1:23","valueSize":1},{"declaration":4273,"isOffset":false,"isSlot":false,"src":"3310:1:23","valueSize":1},{"declaration":4278,"isOffset":false,"isSlot":false,"src":"3293:6:23","valueSize":1}],"flags":["memory-safe"],"id":4286,"nodeType":"InlineAssembly","src":"3174:152:23"}]}]},"documentation":{"id":4269,"nodeType":"StructuredDocumentation","src":"2902:113:23","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4289,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:23","nodeType":"FunctionDefinition","parameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"mutability":"mutable","name":"a","nameLocation":"3044:1:23","nodeType":"VariableDeclaration","scope":4289,"src":"3036:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4273,"mutability":"mutable","name":"b","nameLocation":"3055:1:23","nodeType":"VariableDeclaration","scope":4289,"src":"3047:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:23"},"returnParameters":{"id":4279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"success","nameLocation":"3086:7:23","nodeType":"VariableDeclaration","scope":4289,"src":"3081:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4275,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4278,"mutability":"mutable","name":"result","nameLocation":"3103:6:23","nodeType":"VariableDeclaration","scope":4289,"src":"3095:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4277,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:23"},"scope":5749,"src":"3020:322:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4309,"nodeType":"Block","src":"3567:231:23","statements":[{"id":4308,"nodeType":"UncheckedBlock","src":"3577:215:23","statements":[{"expression":{"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4301,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"3601:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4302,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"3611:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4306,"nodeType":"ExpressionStatement","src":"3601:15:23"},{"AST":{"nativeSrc":"3655:127:23","nodeType":"YulBlock","src":"3655:127:23","statements":[{"nativeSrc":"3749:19:23","nodeType":"YulAssignment","src":"3749:19:23","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:23","nodeType":"YulIdentifier","src":"3763:1:23"},{"name":"b","nativeSrc":"3766:1:23","nodeType":"YulIdentifier","src":"3766:1:23"}],"functionName":{"name":"mod","nativeSrc":"3759:3:23","nodeType":"YulIdentifier","src":"3759:3:23"},"nativeSrc":"3759:9:23","nodeType":"YulFunctionCall","src":"3759:9:23"},"variableNames":[{"name":"result","nativeSrc":"3749:6:23","nodeType":"YulIdentifier","src":"3749:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4292,"isOffset":false,"isSlot":false,"src":"3763:1:23","valueSize":1},{"declaration":4294,"isOffset":false,"isSlot":false,"src":"3766:1:23","valueSize":1},{"declaration":4299,"isOffset":false,"isSlot":false,"src":"3749:6:23","valueSize":1}],"flags":["memory-safe"],"id":4307,"nodeType":"InlineAssembly","src":"3630:152:23"}]}]},"documentation":{"id":4290,"nodeType":"StructuredDocumentation","src":"3348:123:23","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4310,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:23","nodeType":"FunctionDefinition","parameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4292,"mutability":"mutable","name":"a","nameLocation":"3500:1:23","nodeType":"VariableDeclaration","scope":4310,"src":"3492:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4291,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4294,"mutability":"mutable","name":"b","nameLocation":"3511:1:23","nodeType":"VariableDeclaration","scope":4310,"src":"3503:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4293,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:23"},"returnParameters":{"id":4300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4297,"mutability":"mutable","name":"success","nameLocation":"3542:7:23","nodeType":"VariableDeclaration","scope":4310,"src":"3537:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4296,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4299,"mutability":"mutable","name":"result","nameLocation":"3559:6:23","nodeType":"VariableDeclaration","scope":4310,"src":"3551:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4298,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:23"},"scope":5749,"src":"3476:322:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4339,"nodeType":"Block","src":"3989:122:23","statements":[{"assignments":[4321,4323],"declarations":[{"constant":false,"id":4321,"mutability":"mutable","name":"success","nameLocation":"4005:7:23","nodeType":"VariableDeclaration","scope":4339,"src":"4000:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4320,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4323,"mutability":"mutable","name":"result","nameLocation":"4022:6:23","nodeType":"VariableDeclaration","scope":4339,"src":"4014:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4322,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4328,"initialValue":{"arguments":[{"id":4325,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"4039:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4326,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"4042:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4324,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"4032:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:23"},{"expression":{"arguments":[{"id":4330,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"4069:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4331,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"4078:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4333,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4332,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:23","memberName":"max","nodeType":"MemberAccess","src":"4086:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4329,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"4061:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4319,"id":4338,"nodeType":"Return","src":"4054:50:23"}]},"documentation":{"id":4311,"nodeType":"StructuredDocumentation","src":"3804:103:23","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4340,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:23","nodeType":"FunctionDefinition","parameters":{"id":4316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4313,"mutability":"mutable","name":"a","nameLocation":"3943:1:23","nodeType":"VariableDeclaration","scope":4340,"src":"3935:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4312,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4315,"mutability":"mutable","name":"b","nameLocation":"3954:1:23","nodeType":"VariableDeclaration","scope":4340,"src":"3946:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4314,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:23"},"returnParameters":{"id":4319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4340,"src":"3980:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:23"},"scope":5749,"src":"3912:199:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4359,"nodeType":"Block","src":"4294:73:23","statements":[{"assignments":[null,4351],"declarations":[null,{"constant":false,"id":4351,"mutability":"mutable","name":"result","nameLocation":"4315:6:23","nodeType":"VariableDeclaration","scope":4359,"src":"4307:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4356,"initialValue":{"arguments":[{"id":4353,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"4332:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4354,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"4335:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4352,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"4325:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:23"},{"expression":{"id":4357,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"4354:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4349,"id":4358,"nodeType":"Return","src":"4347:13:23"}]},"documentation":{"id":4341,"nodeType":"StructuredDocumentation","src":"4117:95:23","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4360,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:23","nodeType":"FunctionDefinition","parameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4343,"mutability":"mutable","name":"a","nameLocation":"4248:1:23","nodeType":"VariableDeclaration","scope":4360,"src":"4240:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4342,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4345,"mutability":"mutable","name":"b","nameLocation":"4259:1:23","nodeType":"VariableDeclaration","scope":4360,"src":"4251:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4344,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:23"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4360,"src":"4285:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4347,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:23"},"scope":5749,"src":"4217:150:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4389,"nodeType":"Block","src":"4564:122:23","statements":[{"assignments":[4371,4373],"declarations":[{"constant":false,"id":4371,"mutability":"mutable","name":"success","nameLocation":"4580:7:23","nodeType":"VariableDeclaration","scope":4389,"src":"4575:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4370,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4373,"mutability":"mutable","name":"result","nameLocation":"4597:6:23","nodeType":"VariableDeclaration","scope":4389,"src":"4589:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4372,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4378,"initialValue":{"arguments":[{"id":4375,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"4614:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4376,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"4617:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4374,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"4607:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:23"},{"expression":{"arguments":[{"id":4380,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"4644:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"4653:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4383,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4382,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:23","memberName":"max","nodeType":"MemberAccess","src":"4661:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4379,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"4636:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4369,"id":4388,"nodeType":"Return","src":"4629:50:23"}]},"documentation":{"id":4361,"nodeType":"StructuredDocumentation","src":"4373:109:23","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4390,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:23","nodeType":"FunctionDefinition","parameters":{"id":4366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"a","nameLocation":"4518:1:23","nodeType":"VariableDeclaration","scope":4390,"src":"4510:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4365,"mutability":"mutable","name":"b","nameLocation":"4529:1:23","nodeType":"VariableDeclaration","scope":4390,"src":"4521:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4364,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:23"},"returnParameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4390,"src":"4555:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:23"},"scope":5749,"src":"4487:199:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4416,"nodeType":"Block","src":"5158:207:23","statements":[{"id":4415,"nodeType":"UncheckedBlock","src":"5168:191:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4402,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"5306:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4403,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"5312:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4404,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"5316:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4409,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"5337:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4407,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"5321:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"5321:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4401,"id":4414,"nodeType":"Return","src":"5299:49:23"}]}]},"documentation":{"id":4391,"nodeType":"StructuredDocumentation","src":"4692:374:23","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4417,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:23","nodeType":"FunctionDefinition","parameters":{"id":4398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4393,"mutability":"mutable","name":"condition","nameLocation":"5093:9:23","nodeType":"VariableDeclaration","scope":4417,"src":"5088:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4392,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4395,"mutability":"mutable","name":"a","nameLocation":"5112:1:23","nodeType":"VariableDeclaration","scope":4417,"src":"5104:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4394,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4397,"mutability":"mutable","name":"b","nameLocation":"5123:1:23","nodeType":"VariableDeclaration","scope":4417,"src":"5115:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4396,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:23"},"returnParameters":{"id":4401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4417,"src":"5149:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4399,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:23"},"scope":5749,"src":"5071:294:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4435,"nodeType":"Block","src":"5502:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4428,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"5527:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4429,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"5531:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4431,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"5534:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4432,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"5537:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4427,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"5519:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4426,"id":4434,"nodeType":"Return","src":"5512:27:23"}]},"documentation":{"id":4418,"nodeType":"StructuredDocumentation","src":"5371:59:23","text":" @dev Returns the largest of two numbers."},"id":4436,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:23","nodeType":"FunctionDefinition","parameters":{"id":4423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"a","nameLocation":"5456:1:23","nodeType":"VariableDeclaration","scope":4436,"src":"5448:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4422,"mutability":"mutable","name":"b","nameLocation":"5467:1:23","nodeType":"VariableDeclaration","scope":4436,"src":"5459:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4421,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:23"},"returnParameters":{"id":4426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4436,"src":"5493:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4424,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:23"},"scope":5749,"src":"5435:111:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4454,"nodeType":"Block","src":"5684:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4447,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"5709:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4448,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"5713:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4450,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"5716:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4451,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"5719:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4446,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"5701:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4445,"id":4453,"nodeType":"Return","src":"5694:27:23"}]},"documentation":{"id":4437,"nodeType":"StructuredDocumentation","src":"5552:60:23","text":" @dev Returns the smallest of two numbers."},"id":4455,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:23","nodeType":"FunctionDefinition","parameters":{"id":4442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4439,"mutability":"mutable","name":"a","nameLocation":"5638:1:23","nodeType":"VariableDeclaration","scope":4455,"src":"5630:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4441,"mutability":"mutable","name":"b","nameLocation":"5649:1:23","nodeType":"VariableDeclaration","scope":4455,"src":"5641:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:23"},"returnParameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4455,"src":"5675:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:23"},"scope":5749,"src":"5617:111:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4477,"nodeType":"Block","src":"5912:82:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4465,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"5967:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4466,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"5971:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4468,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"5977:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4470,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"5981:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4464,"id":4476,"nodeType":"Return","src":"5959:28:23"}]},"documentation":{"id":4456,"nodeType":"StructuredDocumentation","src":"5734:102:23","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4478,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:23","nodeType":"FunctionDefinition","parameters":{"id":4461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4458,"mutability":"mutable","name":"a","nameLocation":"5866:1:23","nodeType":"VariableDeclaration","scope":4478,"src":"5858:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4457,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4460,"mutability":"mutable","name":"b","nameLocation":"5877:1:23","nodeType":"VariableDeclaration","scope":4478,"src":"5869:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4459,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:23"},"returnParameters":{"id":4464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4478,"src":"5903:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4462,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:23"},"scope":5749,"src":"5841:153:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4518,"nodeType":"Block","src":"6286:633:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4488,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"6300:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4499,"nodeType":"IfStatement","src":"6296:150:23","trueBody":{"id":4498,"nodeType":"Block","src":"6308:138:23","statements":[{"expression":{"arguments":[{"expression":{"id":4494,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"6412:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1580_$","typeString":"type(library Panic)"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1547,"src":"6412:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4491,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"6400:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1580_$","typeString":"type(library Panic)"}},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1579,"src":"6400:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4497,"nodeType":"ExpressionStatement","src":"6400:35:23"}]}},{"id":4517,"nodeType":"UncheckedBlock","src":"6829:84:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"6876:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4500,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"6860:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"6860:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"6887:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4510,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"6896:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4487,"id":4516,"nodeType":"Return","src":"6853:49:23"}]}]},"documentation":{"id":4479,"nodeType":"StructuredDocumentation","src":"6000:210:23","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4519,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:23","nodeType":"FunctionDefinition","parameters":{"id":4484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"a","nameLocation":"6240:1:23","nodeType":"VariableDeclaration","scope":4519,"src":"6232:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4480,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4483,"mutability":"mutable","name":"b","nameLocation":"6251:1:23","nodeType":"VariableDeclaration","scope":4519,"src":"6243:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4482,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:23"},"returnParameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4519,"src":"6277:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4485,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:23"},"scope":5749,"src":"6215:704:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4654,"nodeType":"Block","src":"7340:3585:23","statements":[{"id":4653,"nodeType":"UncheckedBlock","src":"7350:3569:23","statements":[{"assignments":[4532,4534],"declarations":[{"constant":false,"id":4532,"mutability":"mutable","name":"high","nameLocation":"7383:4:23","nodeType":"VariableDeclaration","scope":4653,"src":"7375:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4531,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4534,"mutability":"mutable","name":"low","nameLocation":"7397:3:23","nodeType":"VariableDeclaration","scope":4653,"src":"7389:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4533,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4539,"initialValue":{"arguments":[{"id":4536,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"7411:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4537,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"7414:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4535,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"7404:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4540,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"7498:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4548,"nodeType":"IfStatement","src":"7494:365:23","trueBody":{"id":4547,"nodeType":"Block","src":"7509:350:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4543,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"7827:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4544,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"7833:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4530,"id":4546,"nodeType":"Return","src":"7820:24:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4549,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"7969:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4550,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"7984:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4567,"nodeType":"IfStatement","src":"7965:142:23","trueBody":{"id":4566,"nodeType":"Block","src":"7990:117:23","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4556,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"8028:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4559,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"8046:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1580_$","typeString":"type(library Panic)"}},"id":4560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1547,"src":"8046:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4561,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"8070:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1580_$","typeString":"type(library Panic)"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:23","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1543,"src":"8070:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4555,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"8020:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4552,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"8008:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1580_$","typeString":"type(library Panic)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1579,"src":"8008:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4565,"nodeType":"ExpressionStatement","src":"8008:84:23"}]}},{"assignments":[4569],"declarations":[{"constant":false,"id":4569,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:23","nodeType":"VariableDeclaration","scope":4653,"src":"8359:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4568,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4570,"nodeType":"VariableDeclarationStatement","src":"8359:17:23"},{"AST":{"nativeSrc":"8415:283:23","nodeType":"YulBlock","src":"8415:283:23","statements":[{"nativeSrc":"8484:38:23","nodeType":"YulAssignment","src":"8484:38:23","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:23","nodeType":"YulIdentifier","src":"8504:1:23"},{"name":"y","nativeSrc":"8507:1:23","nodeType":"YulIdentifier","src":"8507:1:23"},{"name":"denominator","nativeSrc":"8510:11:23","nodeType":"YulIdentifier","src":"8510:11:23"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:23","nodeType":"YulIdentifier","src":"8497:6:23"},"nativeSrc":"8497:25:23","nodeType":"YulFunctionCall","src":"8497:25:23"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:23","nodeType":"YulIdentifier","src":"8484:9:23"}]},{"nativeSrc":"8604:37:23","nodeType":"YulAssignment","src":"8604:37:23","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:23","nodeType":"YulIdentifier","src":"8616:4:23"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:23","nodeType":"YulIdentifier","src":"8625:9:23"},{"name":"low","nativeSrc":"8636:3:23","nodeType":"YulIdentifier","src":"8636:3:23"}],"functionName":{"name":"gt","nativeSrc":"8622:2:23","nodeType":"YulIdentifier","src":"8622:2:23"},"nativeSrc":"8622:18:23","nodeType":"YulFunctionCall","src":"8622:18:23"}],"functionName":{"name":"sub","nativeSrc":"8612:3:23","nodeType":"YulIdentifier","src":"8612:3:23"},"nativeSrc":"8612:29:23","nodeType":"YulFunctionCall","src":"8612:29:23"},"variableNames":[{"name":"high","nativeSrc":"8604:4:23","nodeType":"YulIdentifier","src":"8604:4:23"}]},{"nativeSrc":"8658:26:23","nodeType":"YulAssignment","src":"8658:26:23","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:23","nodeType":"YulIdentifier","src":"8669:3:23"},{"name":"remainder","nativeSrc":"8674:9:23","nodeType":"YulIdentifier","src":"8674:9:23"}],"functionName":{"name":"sub","nativeSrc":"8665:3:23","nodeType":"YulIdentifier","src":"8665:3:23"},"nativeSrc":"8665:19:23","nodeType":"YulFunctionCall","src":"8665:19:23"},"variableNames":[{"name":"low","nativeSrc":"8658:3:23","nodeType":"YulIdentifier","src":"8658:3:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4526,"isOffset":false,"isSlot":false,"src":"8510:11:23","valueSize":1},{"declaration":4532,"isOffset":false,"isSlot":false,"src":"8604:4:23","valueSize":1},{"declaration":4532,"isOffset":false,"isSlot":false,"src":"8616:4:23","valueSize":1},{"declaration":4534,"isOffset":false,"isSlot":false,"src":"8636:3:23","valueSize":1},{"declaration":4534,"isOffset":false,"isSlot":false,"src":"8658:3:23","valueSize":1},{"declaration":4534,"isOffset":false,"isSlot":false,"src":"8669:3:23","valueSize":1},{"declaration":4569,"isOffset":false,"isSlot":false,"src":"8484:9:23","valueSize":1},{"declaration":4569,"isOffset":false,"isSlot":false,"src":"8625:9:23","valueSize":1},{"declaration":4569,"isOffset":false,"isSlot":false,"src":"8674:9:23","valueSize":1},{"declaration":4522,"isOffset":false,"isSlot":false,"src":"8504:1:23","valueSize":1},{"declaration":4524,"isOffset":false,"isSlot":false,"src":"8507:1:23","valueSize":1}],"flags":["memory-safe"],"id":4571,"nodeType":"InlineAssembly","src":"8390:308:23"},{"assignments":[4573],"declarations":[{"constant":false,"id":4573,"mutability":"mutable","name":"twos","nameLocation":"8910:4:23","nodeType":"VariableDeclaration","scope":4653,"src":"8902:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4572,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4580,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4574,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"8917:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4576,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"8936:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:23"},{"AST":{"nativeSrc":"8987:359:23","nodeType":"YulBlock","src":"8987:359:23","statements":[{"nativeSrc":"9052:37:23","nodeType":"YulAssignment","src":"9052:37:23","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:23","nodeType":"YulIdentifier","src":"9071:11:23"},{"name":"twos","nativeSrc":"9084:4:23","nodeType":"YulIdentifier","src":"9084:4:23"}],"functionName":{"name":"div","nativeSrc":"9067:3:23","nodeType":"YulIdentifier","src":"9067:3:23"},"nativeSrc":"9067:22:23","nodeType":"YulFunctionCall","src":"9067:22:23"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:23","nodeType":"YulIdentifier","src":"9052:11:23"}]},{"nativeSrc":"9153:21:23","nodeType":"YulAssignment","src":"9153:21:23","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:23","nodeType":"YulIdentifier","src":"9164:3:23"},{"name":"twos","nativeSrc":"9169:4:23","nodeType":"YulIdentifier","src":"9169:4:23"}],"functionName":{"name":"div","nativeSrc":"9160:3:23","nodeType":"YulIdentifier","src":"9160:3:23"},"nativeSrc":"9160:14:23","nodeType":"YulFunctionCall","src":"9160:14:23"},"variableNames":[{"name":"low","nativeSrc":"9153:3:23","nodeType":"YulIdentifier","src":"9153:3:23"}]},{"nativeSrc":"9293:39:23","nodeType":"YulAssignment","src":"9293:39:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:23","nodeType":"YulLiteral","src":"9313:1:23","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:23","nodeType":"YulIdentifier","src":"9316:4:23"}],"functionName":{"name":"sub","nativeSrc":"9309:3:23","nodeType":"YulIdentifier","src":"9309:3:23"},"nativeSrc":"9309:12:23","nodeType":"YulFunctionCall","src":"9309:12:23"},{"name":"twos","nativeSrc":"9323:4:23","nodeType":"YulIdentifier","src":"9323:4:23"}],"functionName":{"name":"div","nativeSrc":"9305:3:23","nodeType":"YulIdentifier","src":"9305:3:23"},"nativeSrc":"9305:23:23","nodeType":"YulFunctionCall","src":"9305:23:23"},{"kind":"number","nativeSrc":"9330:1:23","nodeType":"YulLiteral","src":"9330:1:23","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:23","nodeType":"YulIdentifier","src":"9301:3:23"},"nativeSrc":"9301:31:23","nodeType":"YulFunctionCall","src":"9301:31:23"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:23","nodeType":"YulIdentifier","src":"9293:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4526,"isOffset":false,"isSlot":false,"src":"9052:11:23","valueSize":1},{"declaration":4526,"isOffset":false,"isSlot":false,"src":"9071:11:23","valueSize":1},{"declaration":4534,"isOffset":false,"isSlot":false,"src":"9153:3:23","valueSize":1},{"declaration":4534,"isOffset":false,"isSlot":false,"src":"9164:3:23","valueSize":1},{"declaration":4573,"isOffset":false,"isSlot":false,"src":"9084:4:23","valueSize":1},{"declaration":4573,"isOffset":false,"isSlot":false,"src":"9169:4:23","valueSize":1},{"declaration":4573,"isOffset":false,"isSlot":false,"src":"9293:4:23","valueSize":1},{"declaration":4573,"isOffset":false,"isSlot":false,"src":"9316:4:23","valueSize":1},{"declaration":4573,"isOffset":false,"isSlot":false,"src":"9323:4:23","valueSize":1}],"flags":["memory-safe"],"id":4581,"nodeType":"InlineAssembly","src":"8962:384:23"},{"expression":{"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4582,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"9409:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4583,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"9416:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4584,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"9423:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4587,"nodeType":"ExpressionStatement","src":"9409:18:23"},{"assignments":[4589],"declarations":[{"constant":false,"id":4589,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:23","nodeType":"VariableDeclaration","scope":4653,"src":"9762:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4588,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4596,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4591,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"9785:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:23"},{"expression":{"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4597,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"10018:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4599,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"10033:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4600,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"10047:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4604,"nodeType":"ExpressionStatement","src":"10018:36:23"},{"expression":{"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4605,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"10088:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4607,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"10103:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4608,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"10117:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4612,"nodeType":"ExpressionStatement","src":"10088:36:23"},{"expression":{"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4613,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"10160:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4615,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"10175:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4616,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"10189:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4620,"nodeType":"ExpressionStatement","src":"10160:36:23"},{"expression":{"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4621,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"10231:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4623,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"10246:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4624,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"10260:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4628,"nodeType":"ExpressionStatement","src":"10231:36:23"},{"expression":{"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4629,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"10304:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4631,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"10319:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4632,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"10333:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4636,"nodeType":"ExpressionStatement","src":"10304:36:23"},{"expression":{"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4637,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"10378:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4639,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"10393:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4640,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"10407:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4644,"nodeType":"ExpressionStatement","src":"10378:36:23"},{"expression":{"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"10859:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4646,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"10868:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4647,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"10874:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4650,"nodeType":"ExpressionStatement","src":"10859:22:23"},{"expression":{"id":4651,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"10902:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4530,"id":4652,"nodeType":"Return","src":"10895:13:23"}]}]},"documentation":{"id":4520,"nodeType":"StructuredDocumentation","src":"6925:312:23","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4655,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:23","nodeType":"FunctionDefinition","parameters":{"id":4527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"x","nameLocation":"7266:1:23","nodeType":"VariableDeclaration","scope":4655,"src":"7258:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4521,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4524,"mutability":"mutable","name":"y","nameLocation":"7277:1:23","nodeType":"VariableDeclaration","scope":4655,"src":"7269:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4523,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4526,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:23","nodeType":"VariableDeclaration","scope":4655,"src":"7280:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4525,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:23"},"returnParameters":{"id":4530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4529,"mutability":"mutable","name":"result","nameLocation":"7332:6:23","nodeType":"VariableDeclaration","scope":4655,"src":"7324:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4528,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:23"},"scope":5749,"src":"7242:3683:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4691,"nodeType":"Block","src":"11164:128:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4671,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"11188:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4672,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4660,"src":"11191:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4673,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"11194:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4670,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4655,4692],"referencedDeclaration":4655,"src":"11181:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4678,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"11242:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}],"id":4677,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"11225:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4140_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4681,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"11262:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4682,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4660,"src":"11265:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4683,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"11268:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4680,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:23","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4675,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"11209:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"11209:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4669,"id":4690,"nodeType":"Return","src":"11174:111:23"}]},"documentation":{"id":4656,"nodeType":"StructuredDocumentation","src":"10931:118:23","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4692,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:23","nodeType":"FunctionDefinition","parameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4658,"mutability":"mutable","name":"x","nameLocation":"11078:1:23","nodeType":"VariableDeclaration","scope":4692,"src":"11070:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4657,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4660,"mutability":"mutable","name":"y","nameLocation":"11089:1:23","nodeType":"VariableDeclaration","scope":4692,"src":"11081:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4659,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4662,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:23","nodeType":"VariableDeclaration","scope":4692,"src":"11092:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4661,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4665,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:23","nodeType":"VariableDeclaration","scope":4692,"src":"11113:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"},"typeName":{"id":4664,"nodeType":"UserDefinedTypeName","pathNode":{"id":4663,"name":"Rounding","nameLocations":["11113:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4140,"src":"11113:8:23"},"referencedDeclaration":4140,"src":"11113:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:23"},"returnParameters":{"id":4669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4692,"src":"11155:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4667,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:23"},"scope":5749,"src":"11054:238:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4741,"nodeType":"Block","src":"11500:245:23","statements":[{"id":4740,"nodeType":"UncheckedBlock","src":"11510:229:23","statements":[{"assignments":[4705,4707],"declarations":[{"constant":false,"id":4705,"mutability":"mutable","name":"high","nameLocation":"11543:4:23","nodeType":"VariableDeclaration","scope":4740,"src":"11535:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4707,"mutability":"mutable","name":"low","nameLocation":"11557:3:23","nodeType":"VariableDeclaration","scope":4740,"src":"11549:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4706,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4712,"initialValue":{"arguments":[{"id":4709,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"11571:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4710,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"11574:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4708,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"11564:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4713,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"11594:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4715,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"11607:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4726,"nodeType":"IfStatement","src":"11590:86:23","trueBody":{"id":4725,"nodeType":"Block","src":"11610:66:23","statements":[{"expression":{"arguments":[{"expression":{"id":4721,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"11640:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1580_$","typeString":"type(library Panic)"}},"id":4722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:23","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1543,"src":"11640:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4718,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"11628:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1580_$","typeString":"type(library Panic)"}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1579,"src":"11628:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4724,"nodeType":"ExpressionStatement","src":"11628:33:23"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4727,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"11697:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4729,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"11712:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"11719:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4735,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"11726:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4703,"id":4739,"nodeType":"Return","src":"11689:39:23"}]}]},"documentation":{"id":4693,"nodeType":"StructuredDocumentation","src":"11298:111:23","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4742,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:23","nodeType":"FunctionDefinition","parameters":{"id":4700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4695,"mutability":"mutable","name":"x","nameLocation":"11438:1:23","nodeType":"VariableDeclaration","scope":4742,"src":"11430:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4694,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4697,"mutability":"mutable","name":"y","nameLocation":"11449:1:23","nodeType":"VariableDeclaration","scope":4742,"src":"11441:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4696,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4699,"mutability":"mutable","name":"n","nameLocation":"11458:1:23","nodeType":"VariableDeclaration","scope":4742,"src":"11452:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4698,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:23"},"returnParameters":{"id":4703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4702,"mutability":"mutable","name":"result","nameLocation":"11492:6:23","nodeType":"VariableDeclaration","scope":4742,"src":"11484:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4701,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:23"},"scope":5749,"src":"11414:331:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4780,"nodeType":"Block","src":"11963:113:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4758,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"11987:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4759,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"11990:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4760,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"11993:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4757,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4742,4781],"referencedDeclaration":4742,"src":"11980:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4765,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"12031:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}],"id":4764,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"12014:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4140_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4768,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"12051:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4769,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"12054:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4771,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"12062:1:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4767,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:23","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4762,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"11998:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"11998:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4756,"id":4779,"nodeType":"Return","src":"11973:96:23"}]},"documentation":{"id":4743,"nodeType":"StructuredDocumentation","src":"11751:109:23","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4781,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:23","nodeType":"FunctionDefinition","parameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4745,"mutability":"mutable","name":"x","nameLocation":"11889:1:23","nodeType":"VariableDeclaration","scope":4781,"src":"11881:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4744,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4747,"mutability":"mutable","name":"y","nameLocation":"11900:1:23","nodeType":"VariableDeclaration","scope":4781,"src":"11892:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4746,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4749,"mutability":"mutable","name":"n","nameLocation":"11909:1:23","nodeType":"VariableDeclaration","scope":4781,"src":"11903:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4748,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4752,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:23","nodeType":"VariableDeclaration","scope":4781,"src":"11912:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"},"typeName":{"id":4751,"nodeType":"UserDefinedTypeName","pathNode":{"id":4750,"name":"Rounding","nameLocations":["11912:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4140,"src":"11912:8:23"},"referencedDeclaration":4140,"src":"11912:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:23"},"returnParameters":{"id":4756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4781,"src":"11954:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4754,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:23"},"scope":5749,"src":"11865:211:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4877,"nodeType":"Block","src":"12710:1849:23","statements":[{"id":4876,"nodeType":"UncheckedBlock","src":"12720:1833:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4791,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"12748:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4796,"nodeType":"IfStatement","src":"12744:20:23","trueBody":{"expression":{"hexValue":"30","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4790,"id":4795,"nodeType":"Return","src":"12756:8:23"}},{"assignments":[4798],"declarations":[{"constant":false,"id":4798,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:23","nodeType":"VariableDeclaration","scope":4876,"src":"13235:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4797,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4802,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4799,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"13255:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4800,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"13259:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:23"},{"assignments":[4804],"declarations":[{"constant":false,"id":4804,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:23","nodeType":"VariableDeclaration","scope":4876,"src":"13274:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4803,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4806,"initialValue":{"id":4805,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"13288:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:23"},{"assignments":[4808],"declarations":[{"constant":false,"id":4808,"mutability":"mutable","name":"x","nameLocation":"13432:1:23","nodeType":"VariableDeclaration","scope":4876,"src":"13425:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4807,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4810,"initialValue":{"hexValue":"30","id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:23"},{"assignments":[4812],"declarations":[{"constant":false,"id":4812,"mutability":"mutable","name":"y","nameLocation":"13458:1:23","nodeType":"VariableDeclaration","scope":4876,"src":"13451:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4811,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4814,"initialValue":{"hexValue":"31","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:23"},{"body":{"id":4851,"nodeType":"Block","src":"13501:882:23","statements":[{"assignments":[4819],"declarations":[{"constant":false,"id":4819,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:23","nodeType":"VariableDeclaration","scope":4851,"src":"13519:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4818,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4823,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4820,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"13538:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4821,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"13544:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:23"},{"expression":{"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4824,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"13573:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4825,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"13578:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4826,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4827,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"13678:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4828,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"13923:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4829,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"13929:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4830,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"13941:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4835,"nodeType":"ExpressionStatement","src":"13572:395:23"},{"expression":{"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4836,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"13987:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4837,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"13990:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4838,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4839,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"14072:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4840,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"14326:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4841,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"14330:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4844,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"14341:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4842,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:23","typeDescriptions":{}}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4848,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4850,"nodeType":"ExpressionStatement","src":"13986:382:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4815,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"13485:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4852,"nodeType":"WhileStatement","src":"13478:905:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4853,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"14401:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4858,"nodeType":"IfStatement","src":"14397:22:23","trueBody":{"expression":{"hexValue":"30","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4790,"id":4857,"nodeType":"Return","src":"14411:8:23"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4860,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"14470:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4863,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"14477:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:23","subExpression":{"id":4866,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"14490:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:23","typeDescriptions":{}}},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4872,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"14502:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4870,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:23","typeDescriptions":{}}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4859,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"14462:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4790,"id":4875,"nodeType":"Return","src":"14455:50:23"}]}]},"documentation":{"id":4782,"nodeType":"StructuredDocumentation","src":"12082:553:23","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4878,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:23","nodeType":"FunctionDefinition","parameters":{"id":4787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4784,"mutability":"mutable","name":"a","nameLocation":"12664:1:23","nodeType":"VariableDeclaration","scope":4878,"src":"12656:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4783,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4786,"mutability":"mutable","name":"n","nameLocation":"12675:1:23","nodeType":"VariableDeclaration","scope":4878,"src":"12667:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4785,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:23"},"returnParameters":{"id":4790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4878,"src":"12701:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4788,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:23"},"scope":5749,"src":"12640:1919:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4898,"nodeType":"Block","src":"15159:82:23","statements":[{"id":4897,"nodeType":"UncheckedBlock","src":"15169:66:23","statements":[{"expression":{"arguments":[{"id":4890,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"15212:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4891,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"15215:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4894,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"15222:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4888,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"15200:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5749_$","typeString":"type(library Math)"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:23","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4935,"src":"15200:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4887,"id":4896,"nodeType":"Return","src":"15193:31:23"}]}]},"documentation":{"id":4879,"nodeType":"StructuredDocumentation","src":"14565:514:23","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4899,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:23","nodeType":"FunctionDefinition","parameters":{"id":4884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4881,"mutability":"mutable","name":"a","nameLocation":"15113:1:23","nodeType":"VariableDeclaration","scope":4899,"src":"15105:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4880,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4883,"mutability":"mutable","name":"p","nameLocation":"15124:1:23","nodeType":"VariableDeclaration","scope":4899,"src":"15116:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4882,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:23"},"returnParameters":{"id":4887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4899,"src":"15150:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4885,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:23"},"scope":5749,"src":"15084:157:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4934,"nodeType":"Block","src":"16011:174:23","statements":[{"assignments":[4912,4914],"declarations":[{"constant":false,"id":4912,"mutability":"mutable","name":"success","nameLocation":"16027:7:23","nodeType":"VariableDeclaration","scope":4934,"src":"16022:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4911,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4914,"mutability":"mutable","name":"result","nameLocation":"16044:6:23","nodeType":"VariableDeclaration","scope":4934,"src":"16036:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4913,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4920,"initialValue":{"arguments":[{"id":4916,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"16064:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4917,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"16067:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4918,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"16070:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4915,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4959,5041],"referencedDeclaration":4959,"src":"16054:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:23"},{"condition":{"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:23","subExpression":{"id":4921,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"16087:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4931,"nodeType":"IfStatement","src":"16082:74:23","trueBody":{"id":4930,"nodeType":"Block","src":"16096:60:23","statements":[{"expression":{"arguments":[{"expression":{"id":4926,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"16122:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1580_$","typeString":"type(library Panic)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1547,"src":"16122:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4923,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"16110:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1580_$","typeString":"type(library Panic)"}},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1579,"src":"16110:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4929,"nodeType":"ExpressionStatement","src":"16110:35:23"}]}},{"expression":{"id":4932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"16172:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4910,"id":4933,"nodeType":"Return","src":"16165:13:23"}]},"documentation":{"id":4900,"nodeType":"StructuredDocumentation","src":"15247:678:23","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4935,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:23","nodeType":"FunctionDefinition","parameters":{"id":4907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4902,"mutability":"mutable","name":"b","nameLocation":"15954:1:23","nodeType":"VariableDeclaration","scope":4935,"src":"15946:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4901,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4904,"mutability":"mutable","name":"e","nameLocation":"15965:1:23","nodeType":"VariableDeclaration","scope":4935,"src":"15957:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4903,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4906,"mutability":"mutable","name":"m","nameLocation":"15976:1:23","nodeType":"VariableDeclaration","scope":4935,"src":"15968:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4905,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:23"},"returnParameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4935,"src":"16002:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4908,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:23"},"scope":5749,"src":"15930:255:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4958,"nodeType":"Block","src":"17039:1493:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4949,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"17053:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4956,"nodeType":"IfStatement","src":"17049:29:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4948,"id":4955,"nodeType":"Return","src":"17061:17:23"}},{"AST":{"nativeSrc":"17113:1413:23","nodeType":"YulBlock","src":"17113:1413:23","statements":[{"nativeSrc":"17127:22:23","nodeType":"YulVariableDeclaration","src":"17127:22:23","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:23","nodeType":"YulLiteral","src":"17144:4:23","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:23","nodeType":"YulIdentifier","src":"17138:5:23"},"nativeSrc":"17138:11:23","nodeType":"YulFunctionCall","src":"17138:11:23"},"variables":[{"name":"ptr","nativeSrc":"17131:3:23","nodeType":"YulTypedName","src":"17131:3:23","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:23","nodeType":"YulIdentifier","src":"18057:3:23"},{"kind":"number","nativeSrc":"18062:4:23","nodeType":"YulLiteral","src":"18062:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:23","nodeType":"YulIdentifier","src":"18050:6:23"},"nativeSrc":"18050:17:23","nodeType":"YulFunctionCall","src":"18050:17:23"},"nativeSrc":"18050:17:23","nodeType":"YulExpressionStatement","src":"18050:17:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:23","nodeType":"YulIdentifier","src":"18091:3:23"},{"kind":"number","nativeSrc":"18096:4:23","nodeType":"YulLiteral","src":"18096:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:23","nodeType":"YulIdentifier","src":"18087:3:23"},"nativeSrc":"18087:14:23","nodeType":"YulFunctionCall","src":"18087:14:23"},{"kind":"number","nativeSrc":"18103:4:23","nodeType":"YulLiteral","src":"18103:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:23","nodeType":"YulIdentifier","src":"18080:6:23"},"nativeSrc":"18080:28:23","nodeType":"YulFunctionCall","src":"18080:28:23"},"nativeSrc":"18080:28:23","nodeType":"YulExpressionStatement","src":"18080:28:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:23","nodeType":"YulIdentifier","src":"18132:3:23"},{"kind":"number","nativeSrc":"18137:4:23","nodeType":"YulLiteral","src":"18137:4:23","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:23","nodeType":"YulIdentifier","src":"18128:3:23"},"nativeSrc":"18128:14:23","nodeType":"YulFunctionCall","src":"18128:14:23"},{"kind":"number","nativeSrc":"18144:4:23","nodeType":"YulLiteral","src":"18144:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:23","nodeType":"YulIdentifier","src":"18121:6:23"},"nativeSrc":"18121:28:23","nodeType":"YulFunctionCall","src":"18121:28:23"},"nativeSrc":"18121:28:23","nodeType":"YulExpressionStatement","src":"18121:28:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:23","nodeType":"YulIdentifier","src":"18173:3:23"},{"kind":"number","nativeSrc":"18178:4:23","nodeType":"YulLiteral","src":"18178:4:23","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:23","nodeType":"YulIdentifier","src":"18169:3:23"},"nativeSrc":"18169:14:23","nodeType":"YulFunctionCall","src":"18169:14:23"},{"name":"b","nativeSrc":"18185:1:23","nodeType":"YulIdentifier","src":"18185:1:23"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:23","nodeType":"YulIdentifier","src":"18162:6:23"},"nativeSrc":"18162:25:23","nodeType":"YulFunctionCall","src":"18162:25:23"},"nativeSrc":"18162:25:23","nodeType":"YulExpressionStatement","src":"18162:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:23","nodeType":"YulIdentifier","src":"18211:3:23"},{"kind":"number","nativeSrc":"18216:4:23","nodeType":"YulLiteral","src":"18216:4:23","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:23","nodeType":"YulIdentifier","src":"18207:3:23"},"nativeSrc":"18207:14:23","nodeType":"YulFunctionCall","src":"18207:14:23"},{"name":"e","nativeSrc":"18223:1:23","nodeType":"YulIdentifier","src":"18223:1:23"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:23","nodeType":"YulIdentifier","src":"18200:6:23"},"nativeSrc":"18200:25:23","nodeType":"YulFunctionCall","src":"18200:25:23"},"nativeSrc":"18200:25:23","nodeType":"YulExpressionStatement","src":"18200:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:23","nodeType":"YulIdentifier","src":"18249:3:23"},{"kind":"number","nativeSrc":"18254:4:23","nodeType":"YulLiteral","src":"18254:4:23","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:23","nodeType":"YulIdentifier","src":"18245:3:23"},"nativeSrc":"18245:14:23","nodeType":"YulFunctionCall","src":"18245:14:23"},{"name":"m","nativeSrc":"18261:1:23","nodeType":"YulIdentifier","src":"18261:1:23"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:23","nodeType":"YulIdentifier","src":"18238:6:23"},"nativeSrc":"18238:25:23","nodeType":"YulFunctionCall","src":"18238:25:23"},"nativeSrc":"18238:25:23","nodeType":"YulExpressionStatement","src":"18238:25:23"},{"nativeSrc":"18425:57:23","nodeType":"YulAssignment","src":"18425:57:23","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:23","nodeType":"YulIdentifier","src":"18447:3:23"},"nativeSrc":"18447:5:23","nodeType":"YulFunctionCall","src":"18447:5:23"},{"kind":"number","nativeSrc":"18454:4:23","nodeType":"YulLiteral","src":"18454:4:23","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:23","nodeType":"YulIdentifier","src":"18460:3:23"},{"kind":"number","nativeSrc":"18465:4:23","nodeType":"YulLiteral","src":"18465:4:23","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:23","nodeType":"YulLiteral","src":"18471:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:23","nodeType":"YulLiteral","src":"18477:4:23","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:23","nodeType":"YulIdentifier","src":"18436:10:23"},"nativeSrc":"18436:46:23","nodeType":"YulFunctionCall","src":"18436:46:23"},"variableNames":[{"name":"success","nativeSrc":"18425:7:23","nodeType":"YulIdentifier","src":"18425:7:23"}]},{"nativeSrc":"18495:21:23","nodeType":"YulAssignment","src":"18495:21:23","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:23","nodeType":"YulLiteral","src":"18511:4:23","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:23","nodeType":"YulIdentifier","src":"18505:5:23"},"nativeSrc":"18505:11:23","nodeType":"YulFunctionCall","src":"18505:11:23"},"variableNames":[{"name":"result","nativeSrc":"18495:6:23","nodeType":"YulIdentifier","src":"18495:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4938,"isOffset":false,"isSlot":false,"src":"18185:1:23","valueSize":1},{"declaration":4940,"isOffset":false,"isSlot":false,"src":"18223:1:23","valueSize":1},{"declaration":4942,"isOffset":false,"isSlot":false,"src":"18261:1:23","valueSize":1},{"declaration":4947,"isOffset":false,"isSlot":false,"src":"18495:6:23","valueSize":1},{"declaration":4945,"isOffset":false,"isSlot":false,"src":"18425:7:23","valueSize":1}],"flags":["memory-safe"],"id":4957,"nodeType":"InlineAssembly","src":"17088:1438:23"}]},"documentation":{"id":4936,"nodeType":"StructuredDocumentation","src":"16191:738:23","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4959,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:23","nodeType":"FunctionDefinition","parameters":{"id":4943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4938,"mutability":"mutable","name":"b","nameLocation":"16961:1:23","nodeType":"VariableDeclaration","scope":4959,"src":"16953:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4937,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4940,"mutability":"mutable","name":"e","nameLocation":"16972:1:23","nodeType":"VariableDeclaration","scope":4959,"src":"16964:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4939,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4942,"mutability":"mutable","name":"m","nameLocation":"16983:1:23","nodeType":"VariableDeclaration","scope":4959,"src":"16975:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4941,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:23"},"returnParameters":{"id":4948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"success","nameLocation":"17014:7:23","nodeType":"VariableDeclaration","scope":4959,"src":"17009:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4944,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4947,"mutability":"mutable","name":"result","nameLocation":"17031:6:23","nodeType":"VariableDeclaration","scope":4959,"src":"17023:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4946,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:23"},"scope":5749,"src":"16934:1598:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4994,"nodeType":"Block","src":"18729:179:23","statements":[{"assignments":[4972,4974],"declarations":[{"constant":false,"id":4972,"mutability":"mutable","name":"success","nameLocation":"18745:7:23","nodeType":"VariableDeclaration","scope":4994,"src":"18740:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4971,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4974,"mutability":"mutable","name":"result","nameLocation":"18767:6:23","nodeType":"VariableDeclaration","scope":4994,"src":"18754:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4973,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4980,"initialValue":{"arguments":[{"id":4976,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"18787:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4977,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"18790:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4978,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"18793:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4975,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4959,5041],"referencedDeclaration":5041,"src":"18777:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:23"},{"condition":{"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:23","subExpression":{"id":4981,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"18810:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4991,"nodeType":"IfStatement","src":"18805:74:23","trueBody":{"id":4990,"nodeType":"Block","src":"18819:60:23","statements":[{"expression":{"arguments":[{"expression":{"id":4986,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"18845:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1580_$","typeString":"type(library Panic)"}},"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1547,"src":"18845:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4983,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"18833:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1580_$","typeString":"type(library Panic)"}},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1579,"src":"18833:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4989,"nodeType":"ExpressionStatement","src":"18833:35:23"}]}},{"expression":{"id":4992,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"18895:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4970,"id":4993,"nodeType":"Return","src":"18888:13:23"}]},"documentation":{"id":4960,"nodeType":"StructuredDocumentation","src":"18538:85:23","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4995,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:23","nodeType":"FunctionDefinition","parameters":{"id":4967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4962,"mutability":"mutable","name":"b","nameLocation":"18657:1:23","nodeType":"VariableDeclaration","scope":4995,"src":"18644:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4961,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4964,"mutability":"mutable","name":"e","nameLocation":"18673:1:23","nodeType":"VariableDeclaration","scope":4995,"src":"18660:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4963,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4966,"mutability":"mutable","name":"m","nameLocation":"18689:1:23","nodeType":"VariableDeclaration","scope":4995,"src":"18676:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4965,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:23"},"returnParameters":{"id":4970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4995,"src":"18715:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4968,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:23"},"scope":5749,"src":"18628:280:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5040,"nodeType":"Block","src":"19162:771:23","statements":[{"condition":{"arguments":[{"id":5010,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"19187:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5009,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"19176:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5019,"nodeType":"IfStatement","src":"19172:47:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5013,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5008,"id":5018,"nodeType":"Return","src":"19191:28:23"}},{"assignments":[5021],"declarations":[{"constant":false,"id":5021,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:23","nodeType":"VariableDeclaration","scope":5040,"src":"19230:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5020,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5024,"initialValue":{"expression":{"id":5022,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"19245:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:23","memberName":"length","nodeType":"MemberAccess","src":"19245:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:23"},{"expression":{"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5025,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"19335:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5028,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"19361:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:23","memberName":"length","nodeType":"MemberAccess","src":"19361:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5030,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"19371:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:23","memberName":"length","nodeType":"MemberAccess","src":"19371:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5032,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"19381:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5033,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"19387:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5034,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"19390:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5035,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"19393:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5026,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:23","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5038,"nodeType":"ExpressionStatement","src":"19335:60:23"},{"AST":{"nativeSrc":"19431:496:23","nodeType":"YulBlock","src":"19431:496:23","statements":[{"nativeSrc":"19445:32:23","nodeType":"YulVariableDeclaration","src":"19445:32:23","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:23","nodeType":"YulIdentifier","src":"19464:6:23"},{"kind":"number","nativeSrc":"19472:4:23","nodeType":"YulLiteral","src":"19472:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:23","nodeType":"YulIdentifier","src":"19460:3:23"},"nativeSrc":"19460:17:23","nodeType":"YulFunctionCall","src":"19460:17:23"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:23","nodeType":"YulTypedName","src":"19449:7:23","type":""}]},{"nativeSrc":"19567:73:23","nodeType":"YulAssignment","src":"19567:73:23","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:23","nodeType":"YulIdentifier","src":"19589:3:23"},"nativeSrc":"19589:5:23","nodeType":"YulFunctionCall","src":"19589:5:23"},{"kind":"number","nativeSrc":"19596:4:23","nodeType":"YulLiteral","src":"19596:4:23","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:23","nodeType":"YulIdentifier","src":"19602:7:23"},{"arguments":[{"name":"result","nativeSrc":"19617:6:23","nodeType":"YulIdentifier","src":"19617:6:23"}],"functionName":{"name":"mload","nativeSrc":"19611:5:23","nodeType":"YulIdentifier","src":"19611:5:23"},"nativeSrc":"19611:13:23","nodeType":"YulFunctionCall","src":"19611:13:23"},{"name":"dataPtr","nativeSrc":"19626:7:23","nodeType":"YulIdentifier","src":"19626:7:23"},{"name":"mLen","nativeSrc":"19635:4:23","nodeType":"YulIdentifier","src":"19635:4:23"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:23","nodeType":"YulIdentifier","src":"19578:10:23"},"nativeSrc":"19578:62:23","nodeType":"YulFunctionCall","src":"19578:62:23"},"variableNames":[{"name":"success","nativeSrc":"19567:7:23","nodeType":"YulIdentifier","src":"19567:7:23"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:23","nodeType":"YulIdentifier","src":"19796:6:23"},{"name":"mLen","nativeSrc":"19804:4:23","nodeType":"YulIdentifier","src":"19804:4:23"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:23","nodeType":"YulIdentifier","src":"19789:6:23"},"nativeSrc":"19789:20:23","nodeType":"YulFunctionCall","src":"19789:20:23"},"nativeSrc":"19789:20:23","nodeType":"YulExpressionStatement","src":"19789:20:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:23","nodeType":"YulLiteral","src":"19892:4:23","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:23","nodeType":"YulIdentifier","src":"19902:7:23"},{"name":"mLen","nativeSrc":"19911:4:23","nodeType":"YulIdentifier","src":"19911:4:23"}],"functionName":{"name":"add","nativeSrc":"19898:3:23","nodeType":"YulIdentifier","src":"19898:3:23"},"nativeSrc":"19898:18:23","nodeType":"YulFunctionCall","src":"19898:18:23"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:23","nodeType":"YulIdentifier","src":"19885:6:23"},"nativeSrc":"19885:32:23","nodeType":"YulFunctionCall","src":"19885:32:23"},"nativeSrc":"19885:32:23","nodeType":"YulExpressionStatement","src":"19885:32:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":5021,"isOffset":false,"isSlot":false,"src":"19635:4:23","valueSize":1},{"declaration":5021,"isOffset":false,"isSlot":false,"src":"19804:4:23","valueSize":1},{"declaration":5021,"isOffset":false,"isSlot":false,"src":"19911:4:23","valueSize":1},{"declaration":5007,"isOffset":false,"isSlot":false,"src":"19464:6:23","valueSize":1},{"declaration":5007,"isOffset":false,"isSlot":false,"src":"19617:6:23","valueSize":1},{"declaration":5007,"isOffset":false,"isSlot":false,"src":"19796:6:23","valueSize":1},{"declaration":5005,"isOffset":false,"isSlot":false,"src":"19567:7:23","valueSize":1}],"flags":["memory-safe"],"id":5039,"nodeType":"InlineAssembly","src":"19406:521:23"}]},"documentation":{"id":4996,"nodeType":"StructuredDocumentation","src":"18914:88:23","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5041,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:23","nodeType":"FunctionDefinition","parameters":{"id":5003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"b","nameLocation":"19048:1:23","nodeType":"VariableDeclaration","scope":5041,"src":"19035:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4997,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5000,"mutability":"mutable","name":"e","nameLocation":"19072:1:23","nodeType":"VariableDeclaration","scope":5041,"src":"19059:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4999,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5002,"mutability":"mutable","name":"m","nameLocation":"19096:1:23","nodeType":"VariableDeclaration","scope":5041,"src":"19083:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5001,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:23"},"returnParameters":{"id":5008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5005,"mutability":"mutable","name":"success","nameLocation":"19132:7:23","nodeType":"VariableDeclaration","scope":5041,"src":"19127:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5004,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5007,"mutability":"mutable","name":"result","nameLocation":"19154:6:23","nodeType":"VariableDeclaration","scope":5041,"src":"19141:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5006,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:23"},"scope":5749,"src":"19007:926:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5073,"nodeType":"Block","src":"20088:176:23","statements":[{"body":{"id":5069,"nodeType":"Block","src":"20145:92:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5060,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"20163:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5062,"indexExpression":{"id":5061,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"20173:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5068,"nodeType":"IfStatement","src":"20159:68:23","trueBody":{"id":5067,"nodeType":"Block","src":"20182:45:23","statements":[{"expression":{"hexValue":"66616c7365","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5048,"id":5066,"nodeType":"Return","src":"20200:12:23"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5053,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"20118:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5054,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"20122:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:23","memberName":"length","nodeType":"MemberAccess","src":"20122:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5070,"initializationExpression":{"assignments":[5050],"declarations":[{"constant":false,"id":5050,"mutability":"mutable","name":"i","nameLocation":"20111:1:23","nodeType":"VariableDeclaration","scope":5070,"src":"20103:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5049,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5052,"initialValue":{"hexValue":"30","id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:23","subExpression":{"id":5057,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"20142:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5059,"nodeType":"ExpressionStatement","src":"20140:3:23"},"nodeType":"ForStatement","src":"20098:139:23"},{"expression":{"hexValue":"74727565","id":5071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5048,"id":5072,"nodeType":"Return","src":"20246:11:23"}]},"documentation":{"id":5042,"nodeType":"StructuredDocumentation","src":"19939:72:23","text":" @dev Returns whether the provided byte array is zero."},"id":5074,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:23","nodeType":"FunctionDefinition","parameters":{"id":5045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5044,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:23","nodeType":"VariableDeclaration","scope":5074,"src":"20036:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5043,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:23"},"returnParameters":{"id":5048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5074,"src":"20082:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5046,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:23"},"scope":5749,"src":"20016:248:23","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5292,"nodeType":"Block","src":"20624:5124:23","statements":[{"id":5291,"nodeType":"UncheckedBlock","src":"20634:5108:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5082,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"20728:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5088,"nodeType":"IfStatement","src":"20724:53:23","trueBody":{"id":5087,"nodeType":"Block","src":"20736:41:23","statements":[{"expression":{"id":5085,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"20761:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5081,"id":5086,"nodeType":"Return","src":"20754:8:23"}]}},{"assignments":[5090],"declarations":[{"constant":false,"id":5090,"mutability":"mutable","name":"aa","nameLocation":"21712:2:23","nodeType":"VariableDeclaration","scope":5291,"src":"21704:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5089,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5092,"initialValue":{"id":5091,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"21717:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:23"},{"assignments":[5094],"declarations":[{"constant":false,"id":5094,"mutability":"mutable","name":"xn","nameLocation":"21740:2:23","nodeType":"VariableDeclaration","scope":5291,"src":"21732:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5096,"initialValue":{"hexValue":"31","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5097,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"21765:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5112,"nodeType":"IfStatement","src":"21761:92:23","trueBody":{"id":5111,"nodeType":"Block","src":"21783:70:23","statements":[{"expression":{"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5103,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"21801:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5106,"nodeType":"ExpressionStatement","src":"21801:10:23"},{"expression":{"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5107,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"21829:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5110,"nodeType":"ExpressionStatement","src":"21829:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5113,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"21870:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5128,"nodeType":"IfStatement","src":"21866:90:23","trueBody":{"id":5127,"nodeType":"Block","src":"21887:69:23","statements":[{"expression":{"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5119,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"21905:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5122,"nodeType":"ExpressionStatement","src":"21905:9:23"},{"expression":{"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5123,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"21932:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5126,"nodeType":"ExpressionStatement","src":"21932:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5129,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"21973:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5144,"nodeType":"IfStatement","src":"21969:90:23","trueBody":{"id":5143,"nodeType":"Block","src":"21990:69:23","statements":[{"expression":{"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5135,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"22008:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5138,"nodeType":"ExpressionStatement","src":"22008:9:23"},{"expression":{"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5139,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"22035:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5142,"nodeType":"ExpressionStatement","src":"22035:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5145,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"22076:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5160,"nodeType":"IfStatement","src":"22072:89:23","trueBody":{"id":5159,"nodeType":"Block","src":"22093:68:23","statements":[{"expression":{"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5151,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"22111:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5154,"nodeType":"ExpressionStatement","src":"22111:9:23"},{"expression":{"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5155,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"22138:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5158,"nodeType":"ExpressionStatement","src":"22138:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5161,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"22178:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5176,"nodeType":"IfStatement","src":"22174:87:23","trueBody":{"id":5175,"nodeType":"Block","src":"22194:67:23","statements":[{"expression":{"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5167,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"22212:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5170,"nodeType":"ExpressionStatement","src":"22212:8:23"},{"expression":{"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5171,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"22238:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5174,"nodeType":"ExpressionStatement","src":"22238:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5177,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"22278:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5192,"nodeType":"IfStatement","src":"22274:87:23","trueBody":{"id":5191,"nodeType":"Block","src":"22294:67:23","statements":[{"expression":{"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5183,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"22312:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5186,"nodeType":"ExpressionStatement","src":"22312:8:23"},{"expression":{"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5187,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"22338:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5190,"nodeType":"ExpressionStatement","src":"22338:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5193,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"22378:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5204,"nodeType":"IfStatement","src":"22374:61:23","trueBody":{"id":5203,"nodeType":"Block","src":"22394:41:23","statements":[{"expression":{"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5199,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"22412:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5202,"nodeType":"ExpressionStatement","src":"22412:8:23"}]}},{"expression":{"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5205,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"22855:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5207,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"22865:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5213,"nodeType":"ExpressionStatement","src":"22855:18:23"},{"expression":{"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5214,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"24760:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5215,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"24766:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5216,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"24771:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5217,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"24775:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5224,"nodeType":"ExpressionStatement","src":"24760:23:23"},{"expression":{"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5225,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"24869:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5226,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"24875:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5227,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"24880:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5228,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"24884:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5235,"nodeType":"ExpressionStatement","src":"24869:23:23"},{"expression":{"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5236,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"24980:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5237,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"24986:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5238,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"24991:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5239,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"24995:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5246,"nodeType":"ExpressionStatement","src":"24980:23:23"},{"expression":{"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5247,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"25089:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5248,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"25095:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5249,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"25100:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5250,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"25104:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5253,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5257,"nodeType":"ExpressionStatement","src":"25089:23:23"},{"expression":{"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5258,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"25199:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5259,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"25205:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5260,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"25210:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5261,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"25214:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5268,"nodeType":"ExpressionStatement","src":"25199:23:23"},{"expression":{"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5269,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"25309:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5270,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"25315:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5271,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"25320:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5272,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"25324:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5275,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5279,"nodeType":"ExpressionStatement","src":"25309:23:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5280,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"25698:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5283,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"25719:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5284,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"25724:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5285,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"25728:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5281,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"25703:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"25703:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5081,"id":5290,"nodeType":"Return","src":"25691:40:23"}]}]},"documentation":{"id":5075,"nodeType":"StructuredDocumentation","src":"20270:292:23","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5293,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:23","nodeType":"FunctionDefinition","parameters":{"id":5078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"a","nameLocation":"20589:1:23","nodeType":"VariableDeclaration","scope":5293,"src":"20581:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5076,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:23"},"returnParameters":{"id":5081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5293,"src":"20615:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5079,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:23"},"scope":5749,"src":"20567:5181:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5326,"nodeType":"Block","src":"25921:171:23","statements":[{"id":5325,"nodeType":"UncheckedBlock","src":"25931:155:23","statements":[{"assignments":[5305],"declarations":[{"constant":false,"id":5305,"mutability":"mutable","name":"result","nameLocation":"25963:6:23","nodeType":"VariableDeclaration","scope":5325,"src":"25955:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5304,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5309,"initialValue":{"arguments":[{"id":5307,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"25977:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5306,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5293,5327],"referencedDeclaration":5293,"src":"25972:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"26000:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5314,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"26042:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}],"id":5313,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"26025:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4140_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5316,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"26055:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"26064:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5319,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"26073:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5311,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"26009:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"26009:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5303,"id":5324,"nodeType":"Return","src":"25993:82:23"}]}]},"documentation":{"id":5294,"nodeType":"StructuredDocumentation","src":"25754:86:23","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5327,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:23","nodeType":"FunctionDefinition","parameters":{"id":5300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5296,"mutability":"mutable","name":"a","nameLocation":"25867:1:23","nodeType":"VariableDeclaration","scope":5327,"src":"25859:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5295,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5299,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:23","nodeType":"VariableDeclaration","scope":5327,"src":"25870:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"},"typeName":{"id":5298,"nodeType":"UserDefinedTypeName","pathNode":{"id":5297,"name":"Rounding","nameLocations":["25870:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4140,"src":"25870:8:23"},"referencedDeclaration":4140,"src":"25870:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:23"},"returnParameters":{"id":5303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5327,"src":"25912:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5301,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:23"},"scope":5749,"src":"25845:247:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5417,"nodeType":"Block","src":"26281:2334:23","statements":[{"expression":{"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5335,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"26363:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5338,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"26383:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5336,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"26367:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"26367:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:23","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5345,"nodeType":"ExpressionStatement","src":"26363:64:23"},{"expression":{"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5346,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"26503:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5349,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"26525:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5350,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"26530:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5347,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"26508:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"26508:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:23","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5359,"nodeType":"ExpressionStatement","src":"26503:56:23"},{"expression":{"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5360,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"26634:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5363,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"26656:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5364,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"26661:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5361,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"26639:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"26639:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:23","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5373,"nodeType":"ExpressionStatement","src":"26634:48:23"},{"expression":{"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5374,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"26757:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5377,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"26779:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5378,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"26784:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:23","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5375,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"26762:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"26762:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5387,"nodeType":"ExpressionStatement","src":"26757:44:23"},{"expression":{"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5388,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"26874:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5391,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"26896:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5392,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"26901:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5389,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"26879:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"26879:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5401,"nodeType":"ExpressionStatement","src":"26874:42:23"},{"expression":{"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5402,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"26988:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5405,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"27010:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5406,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"27015:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5403,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"26993:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"26993:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5415,"nodeType":"ExpressionStatement","src":"26988:41:23"},{"AST":{"nativeSrc":"28490:119:23","nodeType":"YulBlock","src":"28490:119:23","statements":[{"nativeSrc":"28504:95:23","nodeType":"YulAssignment","src":"28504:95:23","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:23","nodeType":"YulIdentifier","src":"28512:1:23"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:23","nodeType":"YulIdentifier","src":"28524:1:23"},{"name":"x","nativeSrc":"28527:1:23","nodeType":"YulIdentifier","src":"28527:1:23"}],"functionName":{"name":"shr","nativeSrc":"28520:3:23","nodeType":"YulIdentifier","src":"28520:3:23"},"nativeSrc":"28520:9:23","nodeType":"YulFunctionCall","src":"28520:9:23"},{"kind":"number","nativeSrc":"28531:66:23","nodeType":"YulLiteral","src":"28531:66:23","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:23","nodeType":"YulIdentifier","src":"28515:4:23"},"nativeSrc":"28515:83:23","nodeType":"YulFunctionCall","src":"28515:83:23"}],"functionName":{"name":"or","nativeSrc":"28509:2:23","nodeType":"YulIdentifier","src":"28509:2:23"},"nativeSrc":"28509:90:23","nodeType":"YulFunctionCall","src":"28509:90:23"},"variableNames":[{"name":"r","nativeSrc":"28504:1:23","nodeType":"YulIdentifier","src":"28504:1:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5333,"isOffset":false,"isSlot":false,"src":"28504:1:23","valueSize":1},{"declaration":5333,"isOffset":false,"isSlot":false,"src":"28512:1:23","valueSize":1},{"declaration":5333,"isOffset":false,"isSlot":false,"src":"28524:1:23","valueSize":1},{"declaration":5330,"isOffset":false,"isSlot":false,"src":"28527:1:23","valueSize":1}],"flags":["memory-safe"],"id":5416,"nodeType":"InlineAssembly","src":"28465:144:23"}]},"documentation":{"id":5328,"nodeType":"StructuredDocumentation","src":"26098:119:23","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5418,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:23","nodeType":"FunctionDefinition","parameters":{"id":5331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5330,"mutability":"mutable","name":"x","nameLocation":"26244:1:23","nodeType":"VariableDeclaration","scope":5418,"src":"26236:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5329,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:23"},"returnParameters":{"id":5334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5333,"mutability":"mutable","name":"r","nameLocation":"26278:1:23","nodeType":"VariableDeclaration","scope":5418,"src":"26270:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5332,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:23"},"scope":5749,"src":"26222:2393:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5451,"nodeType":"Block","src":"28848:175:23","statements":[{"id":5450,"nodeType":"UncheckedBlock","src":"28858:159:23","statements":[{"assignments":[5430],"declarations":[{"constant":false,"id":5430,"mutability":"mutable","name":"result","nameLocation":"28890:6:23","nodeType":"VariableDeclaration","scope":5450,"src":"28882:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5429,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5434,"initialValue":{"arguments":[{"id":5432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"28904:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5431,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5418,5452],"referencedDeclaration":5418,"src":"28899:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"28931:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5439,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"28973:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}],"id":5438,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"28956:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4140_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5442,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"28991:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"29000:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5436,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"28940:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"28940:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5428,"id":5449,"nodeType":"Return","src":"28924:82:23"}]}]},"documentation":{"id":5419,"nodeType":"StructuredDocumentation","src":"28621:142:23","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5452,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:23","nodeType":"FunctionDefinition","parameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"value","nameLocation":"28790:5:23","nodeType":"VariableDeclaration","scope":5452,"src":"28782:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5420,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5424,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:23","nodeType":"VariableDeclaration","scope":5452,"src":"28797:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"},"typeName":{"id":5423,"nodeType":"UserDefinedTypeName","pathNode":{"id":5422,"name":"Rounding","nameLocations":["28797:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4140,"src":"28797:8:23"},"referencedDeclaration":4140,"src":"28797:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:23"},"returnParameters":{"id":5428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5452,"src":"28839:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:23"},"scope":5749,"src":"28768:255:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5580,"nodeType":"Block","src":"29216:854:23","statements":[{"assignments":[5461],"declarations":[{"constant":false,"id":5461,"mutability":"mutable","name":"result","nameLocation":"29234:6:23","nodeType":"VariableDeclaration","scope":5580,"src":"29226:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5460,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5463,"initialValue":{"hexValue":"30","id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:23"},{"id":5577,"nodeType":"UncheckedBlock","src":"29254:787:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"29282:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5480,"nodeType":"IfStatement","src":"29278:103:23","trueBody":{"id":5479,"nodeType":"Block","src":"29301:80:23","statements":[{"expression":{"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"29319:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5474,"nodeType":"ExpressionStatement","src":"29319:17:23"},{"expression":{"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5475,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"29354:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5478,"nodeType":"ExpressionStatement","src":"29354:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"29398:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5497,"nodeType":"IfStatement","src":"29394:103:23","trueBody":{"id":5496,"nodeType":"Block","src":"29417:80:23","statements":[{"expression":{"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"29435:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5491,"nodeType":"ExpressionStatement","src":"29435:17:23"},{"expression":{"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5492,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"29470:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5495,"nodeType":"ExpressionStatement","src":"29470:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"29514:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5514,"nodeType":"IfStatement","src":"29510:103:23","trueBody":{"id":5513,"nodeType":"Block","src":"29533:80:23","statements":[{"expression":{"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"29551:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5508,"nodeType":"ExpressionStatement","src":"29551:17:23"},{"expression":{"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"29586:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5512,"nodeType":"ExpressionStatement","src":"29586:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"29630:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5531,"nodeType":"IfStatement","src":"29626:100:23","trueBody":{"id":5530,"nodeType":"Block","src":"29648:78:23","statements":[{"expression":{"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"29666:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5525,"nodeType":"ExpressionStatement","src":"29666:16:23"},{"expression":{"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"29700:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5529,"nodeType":"ExpressionStatement","src":"29700:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"29743:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5548,"nodeType":"IfStatement","src":"29739:100:23","trueBody":{"id":5547,"nodeType":"Block","src":"29761:78:23","statements":[{"expression":{"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"29779:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5542,"nodeType":"ExpressionStatement","src":"29779:16:23"},{"expression":{"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5543,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"29813:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5546,"nodeType":"ExpressionStatement","src":"29813:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"29856:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5565,"nodeType":"IfStatement","src":"29852:100:23","trueBody":{"id":5564,"nodeType":"Block","src":"29874:78:23","statements":[{"expression":{"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"29892:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5559,"nodeType":"ExpressionStatement","src":"29892:16:23"},{"expression":{"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5560,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"29926:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5563,"nodeType":"ExpressionStatement","src":"29926:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"29969:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5576,"nodeType":"IfStatement","src":"29965:66:23","trueBody":{"id":5575,"nodeType":"Block","src":"29987:44:23","statements":[{"expression":{"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5571,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"30005:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5574,"nodeType":"ExpressionStatement","src":"30005:11:23"}]}}]},{"expression":{"id":5578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"30057:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5459,"id":5579,"nodeType":"Return","src":"30050:13:23"}]},"documentation":{"id":5453,"nodeType":"StructuredDocumentation","src":"29029:120:23","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5581,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:23","nodeType":"FunctionDefinition","parameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"value","nameLocation":"29177:5:23","nodeType":"VariableDeclaration","scope":5581,"src":"29169:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5454,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:23"},"returnParameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5581,"src":"29207:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5457,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:23"},"scope":5749,"src":"29154:916:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5614,"nodeType":"Block","src":"30305:177:23","statements":[{"id":5613,"nodeType":"UncheckedBlock","src":"30315:161:23","statements":[{"assignments":[5593],"declarations":[{"constant":false,"id":5593,"mutability":"mutable","name":"result","nameLocation":"30347:6:23","nodeType":"VariableDeclaration","scope":5613,"src":"30339:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5592,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5597,"initialValue":{"arguments":[{"id":5595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"30362:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5594,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5581,5615],"referencedDeclaration":5581,"src":"30356:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"30389:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5602,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5587,"src":"30431:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}],"id":5601,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"30414:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4140_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"30450:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"30459:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5599,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"30398:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"30398:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5591,"id":5612,"nodeType":"Return","src":"30382:83:23"}]}]},"documentation":{"id":5582,"nodeType":"StructuredDocumentation","src":"30076:143:23","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5615,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:23","nodeType":"FunctionDefinition","parameters":{"id":5588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5584,"mutability":"mutable","name":"value","nameLocation":"30247:5:23","nodeType":"VariableDeclaration","scope":5615,"src":"30239:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5583,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5587,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:23","nodeType":"VariableDeclaration","scope":5615,"src":"30254:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"},"typeName":{"id":5586,"nodeType":"UserDefinedTypeName","pathNode":{"id":5585,"name":"Rounding","nameLocations":["30254:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4140,"src":"30254:8:23"},"referencedDeclaration":4140,"src":"30254:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:23"},"returnParameters":{"id":5591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5615,"src":"30296:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5589,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:23"},"scope":5749,"src":"30224:258:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5691,"nodeType":"Block","src":"30800:675:23","statements":[{"expression":{"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5623,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"30882:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5626,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"30902:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5624,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"30886:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"30886:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:23","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5633,"nodeType":"ExpressionStatement","src":"30882:64:23"},{"expression":{"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5634,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"31022:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5637,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"31044:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5638,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"31049:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5635,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"31027:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"31027:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:23","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5647,"nodeType":"ExpressionStatement","src":"31022:56:23"},{"expression":{"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5648,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"31153:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5651,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"31175:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5652,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"31180:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5649,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"31158:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"31158:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:23","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5661,"nodeType":"ExpressionStatement","src":"31153:48:23"},{"expression":{"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5662,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"31276:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5665,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"31298:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5666,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"31303:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:23","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5663,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"31281:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"31281:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5675,"nodeType":"ExpressionStatement","src":"31276:44:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5676,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"31426:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5682,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"31453:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5683,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"31458:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5680,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"31436:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"31436:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5622,"id":5690,"nodeType":"Return","src":"31418:50:23"}]},"documentation":{"id":5616,"nodeType":"StructuredDocumentation","src":"30488:246:23","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5692,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:23","nodeType":"FunctionDefinition","parameters":{"id":5619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5618,"mutability":"mutable","name":"x","nameLocation":"30763:1:23","nodeType":"VariableDeclaration","scope":5692,"src":"30755:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5617,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:23"},"returnParameters":{"id":5622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5621,"mutability":"mutable","name":"r","nameLocation":"30797:1:23","nodeType":"VariableDeclaration","scope":5692,"src":"30789:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5620,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:23"},"scope":5749,"src":"30739:736:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5728,"nodeType":"Block","src":"31712:184:23","statements":[{"id":5727,"nodeType":"UncheckedBlock","src":"31722:168:23","statements":[{"assignments":[5704],"declarations":[{"constant":false,"id":5704,"mutability":"mutable","name":"result","nameLocation":"31754:6:23","nodeType":"VariableDeclaration","scope":5727,"src":"31746:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5703,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5708,"initialValue":{"arguments":[{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"31770:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5705,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5692,5729],"referencedDeclaration":5692,"src":"31763:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"31797:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5713,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"31839:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}],"id":5712,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"31822:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4140_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"31858:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"31873:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5710,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"31806:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"31806:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5702,"id":5726,"nodeType":"Return","src":"31790:89:23"}]}]},"documentation":{"id":5693,"nodeType":"StructuredDocumentation","src":"31481:144:23","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5729,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:23","nodeType":"FunctionDefinition","parameters":{"id":5699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5695,"mutability":"mutable","name":"value","nameLocation":"31654:5:23","nodeType":"VariableDeclaration","scope":5729,"src":"31646:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5694,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5698,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:23","nodeType":"VariableDeclaration","scope":5729,"src":"31661:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"},"typeName":{"id":5697,"nodeType":"UserDefinedTypeName","pathNode":{"id":5696,"name":"Rounding","nameLocations":["31661:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4140,"src":"31661:8:23"},"referencedDeclaration":4140,"src":"31661:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:23"},"returnParameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5729,"src":"31703:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5700,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:23"},"scope":5749,"src":"31630:266:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5747,"nodeType":"Block","src":"32094:48:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5740,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"32117:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}],"id":5739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5738,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:23","typeDescriptions":{}}},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5737,"id":5746,"nodeType":"Return","src":"32104:31:23"}]},"documentation":{"id":5730,"nodeType":"StructuredDocumentation","src":"31902:113:23","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5748,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:23","nodeType":"FunctionDefinition","parameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:23","nodeType":"VariableDeclaration","scope":5748,"src":"32046:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"},"typeName":{"id":5732,"nodeType":"UserDefinedTypeName","pathNode":{"id":5731,"name":"Rounding","nameLocations":["32046:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4140,"src":"32046:8:23"},"referencedDeclaration":4140,"src":"32046:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4140","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:23"},"returnParameters":{"id":5737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5748,"src":"32088:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5735,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:23"},"scope":5749,"src":"32020:122:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5750,"src":"281:31863:23","usedErrors":[],"usedEvents":[]}],"src":"103:32042:23"},"id":23},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7514]},"id":7515,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5751,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5752,"nodeType":"StructuredDocumentation","src":"218:550:24","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7514,"linearizedBaseContracts":[7514],"name":"SafeCast","nameLocation":"777:8:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5753,"nodeType":"StructuredDocumentation","src":"792:68:24","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5759,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:24","nodeType":"ErrorDefinition","parameters":{"id":5758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5755,"mutability":"mutable","name":"bits","nameLocation":"908:4:24","nodeType":"VariableDeclaration","scope":5759,"src":"902:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5754,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5757,"mutability":"mutable","name":"value","nameLocation":"922:5:24","nodeType":"VariableDeclaration","scope":5759,"src":"914:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5756,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:24"},"src":"865:64:24"},{"documentation":{"id":5760,"nodeType":"StructuredDocumentation","src":"935:75:24","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5764,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:24","nodeType":"ErrorDefinition","parameters":{"id":5763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5762,"mutability":"mutable","name":"value","nameLocation":"1056:5:24","nodeType":"VariableDeclaration","scope":5764,"src":"1049:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5761,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:24"},"src":"1015:48:24"},{"documentation":{"id":5765,"nodeType":"StructuredDocumentation","src":"1069:67:24","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5771,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:24","nodeType":"ErrorDefinition","parameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5767,"mutability":"mutable","name":"bits","nameLocation":"1183:4:24","nodeType":"VariableDeclaration","scope":5771,"src":"1177:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5766,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5769,"mutability":"mutable","name":"value","nameLocation":"1196:5:24","nodeType":"VariableDeclaration","scope":5771,"src":"1189:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5768,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:24"},"src":"1141:62:24"},{"documentation":{"id":5772,"nodeType":"StructuredDocumentation","src":"1209:75:24","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5776,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:24","nodeType":"ErrorDefinition","parameters":{"id":5775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5774,"mutability":"mutable","name":"value","nameLocation":"1331:5:24","nodeType":"VariableDeclaration","scope":5776,"src":"1323:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:24"},"src":"1289:49:24"},{"body":{"id":5803,"nodeType":"Block","src":"1695:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5779,"src":"1709:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5786,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5785,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:24","memberName":"max","nodeType":"MemberAccess","src":"1717:17:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5797,"nodeType":"IfStatement","src":"1705:105:24","trueBody":{"id":5796,"nodeType":"Block","src":"1736:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:24","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5779,"src":"1793:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5791,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"1757:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5795,"nodeType":"RevertStatement","src":"1750:49:24"}]}},{"expression":{"arguments":[{"id":5800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5779,"src":"1834:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5798,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:24","typeDescriptions":{}}},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5783,"id":5802,"nodeType":"Return","src":"1819:21:24"}]},"documentation":{"id":5777,"nodeType":"StructuredDocumentation","src":"1344:280:24","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5804,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:24","nodeType":"FunctionDefinition","parameters":{"id":5780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5779,"mutability":"mutable","name":"value","nameLocation":"1656:5:24","nodeType":"VariableDeclaration","scope":5804,"src":"1648:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5778,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:24"},"returnParameters":{"id":5783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5804,"src":"1686:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5781,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:24"},"scope":7514,"src":"1629:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5831,"nodeType":"Block","src":"2204:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5807,"src":"2218:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5814,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5813,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:24","memberName":"max","nodeType":"MemberAccess","src":"2226:17:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5825,"nodeType":"IfStatement","src":"2214:105:24","trueBody":{"id":5824,"nodeType":"Block","src":"2245:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:24","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5807,"src":"2302:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5819,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"2266:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5823,"nodeType":"RevertStatement","src":"2259:49:24"}]}},{"expression":{"arguments":[{"id":5828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5807,"src":"2343:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5826,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:24","typeDescriptions":{}}},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5811,"id":5830,"nodeType":"Return","src":"2328:21:24"}]},"documentation":{"id":5805,"nodeType":"StructuredDocumentation","src":"1853:280:24","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5832,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:24","nodeType":"FunctionDefinition","parameters":{"id":5808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5807,"mutability":"mutable","name":"value","nameLocation":"2165:5:24","nodeType":"VariableDeclaration","scope":5832,"src":"2157:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5806,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:24"},"returnParameters":{"id":5811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5832,"src":"2195:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5809,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:24"},"scope":7514,"src":"2138:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5859,"nodeType":"Block","src":"2713:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"2727:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5842,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5841,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:24","memberName":"max","nodeType":"MemberAccess","src":"2735:17:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5853,"nodeType":"IfStatement","src":"2723:105:24","trueBody":{"id":5852,"nodeType":"Block","src":"2754:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:24","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"2811:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5847,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"2775:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5851,"nodeType":"RevertStatement","src":"2768:49:24"}]}},{"expression":{"arguments":[{"id":5856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"2852:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5854,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:24","typeDescriptions":{}}},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5839,"id":5858,"nodeType":"Return","src":"2837:21:24"}]},"documentation":{"id":5833,"nodeType":"StructuredDocumentation","src":"2362:280:24","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5860,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:24","nodeType":"FunctionDefinition","parameters":{"id":5836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5835,"mutability":"mutable","name":"value","nameLocation":"2674:5:24","nodeType":"VariableDeclaration","scope":5860,"src":"2666:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5834,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:24"},"returnParameters":{"id":5839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5860,"src":"2704:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5837,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:24"},"scope":7514,"src":"2647:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5887,"nodeType":"Block","src":"3222:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"3236:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5870,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5869,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:24","memberName":"max","nodeType":"MemberAccess","src":"3244:17:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5881,"nodeType":"IfStatement","src":"3232:105:24","trueBody":{"id":5880,"nodeType":"Block","src":"3263:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:24","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"3320:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5875,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"3284:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5879,"nodeType":"RevertStatement","src":"3277:49:24"}]}},{"expression":{"arguments":[{"id":5884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"3361:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5882,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:24","typeDescriptions":{}}},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5867,"id":5886,"nodeType":"Return","src":"3346:21:24"}]},"documentation":{"id":5861,"nodeType":"StructuredDocumentation","src":"2871:280:24","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5888,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:24","nodeType":"FunctionDefinition","parameters":{"id":5864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5863,"mutability":"mutable","name":"value","nameLocation":"3183:5:24","nodeType":"VariableDeclaration","scope":5888,"src":"3175:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5862,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:24"},"returnParameters":{"id":5867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5888,"src":"3213:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5865,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:24"},"scope":7514,"src":"3156:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5915,"nodeType":"Block","src":"3731:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"3745:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5898,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5897,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:24","memberName":"max","nodeType":"MemberAccess","src":"3753:17:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5909,"nodeType":"IfStatement","src":"3741:105:24","trueBody":{"id":5908,"nodeType":"Block","src":"3772:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:24","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"3829:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5903,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"3793:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5907,"nodeType":"RevertStatement","src":"3786:49:24"}]}},{"expression":{"arguments":[{"id":5912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"3870:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5910,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:24","typeDescriptions":{}}},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5895,"id":5914,"nodeType":"Return","src":"3855:21:24"}]},"documentation":{"id":5889,"nodeType":"StructuredDocumentation","src":"3380:280:24","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5916,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:24","nodeType":"FunctionDefinition","parameters":{"id":5892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5891,"mutability":"mutable","name":"value","nameLocation":"3692:5:24","nodeType":"VariableDeclaration","scope":5916,"src":"3684:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5890,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:24"},"returnParameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5916,"src":"3722:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5893,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:24"},"scope":7514,"src":"3665:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5943,"nodeType":"Block","src":"4240:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"4254:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5926,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5925,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:24","memberName":"max","nodeType":"MemberAccess","src":"4262:17:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5937,"nodeType":"IfStatement","src":"4250:105:24","trueBody":{"id":5936,"nodeType":"Block","src":"4281:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:24","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"4338:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5931,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"4302:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5935,"nodeType":"RevertStatement","src":"4295:49:24"}]}},{"expression":{"arguments":[{"id":5940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"4379:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5938,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:24","typeDescriptions":{}}},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5923,"id":5942,"nodeType":"Return","src":"4364:21:24"}]},"documentation":{"id":5917,"nodeType":"StructuredDocumentation","src":"3889:280:24","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5944,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:24","nodeType":"FunctionDefinition","parameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5919,"mutability":"mutable","name":"value","nameLocation":"4201:5:24","nodeType":"VariableDeclaration","scope":5944,"src":"4193:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5918,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:24"},"returnParameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5944,"src":"4231:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5921,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:24"},"scope":7514,"src":"4174:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5971,"nodeType":"Block","src":"4749:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"4763:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5954,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5953,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:24","memberName":"max","nodeType":"MemberAccess","src":"4771:17:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5965,"nodeType":"IfStatement","src":"4759:105:24","trueBody":{"id":5964,"nodeType":"Block","src":"4790:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:24","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"4847:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5959,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"4811:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5963,"nodeType":"RevertStatement","src":"4804:49:24"}]}},{"expression":{"arguments":[{"id":5968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"4888:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5966,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:24","typeDescriptions":{}}},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5951,"id":5970,"nodeType":"Return","src":"4873:21:24"}]},"documentation":{"id":5945,"nodeType":"StructuredDocumentation","src":"4398:280:24","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5972,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:24","nodeType":"FunctionDefinition","parameters":{"id":5948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5947,"mutability":"mutable","name":"value","nameLocation":"4710:5:24","nodeType":"VariableDeclaration","scope":5972,"src":"4702:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5946,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:24"},"returnParameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5972,"src":"4740:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5949,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:24"},"scope":7514,"src":"4683:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5999,"nodeType":"Block","src":"5258:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"5272:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5982,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5981,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:24","memberName":"max","nodeType":"MemberAccess","src":"5280:17:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5993,"nodeType":"IfStatement","src":"5268:105:24","trueBody":{"id":5992,"nodeType":"Block","src":"5299:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:24","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"5356:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5987,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"5320:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5991,"nodeType":"RevertStatement","src":"5313:49:24"}]}},{"expression":{"arguments":[{"id":5996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"5397:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5994,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:24","typeDescriptions":{}}},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5979,"id":5998,"nodeType":"Return","src":"5382:21:24"}]},"documentation":{"id":5973,"nodeType":"StructuredDocumentation","src":"4907:280:24","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6000,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:24","nodeType":"FunctionDefinition","parameters":{"id":5976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5975,"mutability":"mutable","name":"value","nameLocation":"5219:5:24","nodeType":"VariableDeclaration","scope":6000,"src":"5211:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5974,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:24"},"returnParameters":{"id":5979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6000,"src":"5249:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5977,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:24"},"scope":7514,"src":"5192:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6027,"nodeType":"Block","src":"5767:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"5781:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6010,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6009,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:24","memberName":"max","nodeType":"MemberAccess","src":"5789:17:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6021,"nodeType":"IfStatement","src":"5777:105:24","trueBody":{"id":6020,"nodeType":"Block","src":"5808:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:24","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"5865:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6015,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"5829:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6019,"nodeType":"RevertStatement","src":"5822:49:24"}]}},{"expression":{"arguments":[{"id":6024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"5906:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6022,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:24","typeDescriptions":{}}},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6007,"id":6026,"nodeType":"Return","src":"5891:21:24"}]},"documentation":{"id":6001,"nodeType":"StructuredDocumentation","src":"5416:280:24","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6028,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:24","nodeType":"FunctionDefinition","parameters":{"id":6004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6003,"mutability":"mutable","name":"value","nameLocation":"5728:5:24","nodeType":"VariableDeclaration","scope":6028,"src":"5720:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6002,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:24"},"returnParameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6028,"src":"5758:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6005,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:24"},"scope":7514,"src":"5701:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6055,"nodeType":"Block","src":"6276:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"6290:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6038,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6037,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:24","memberName":"max","nodeType":"MemberAccess","src":"6298:17:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6049,"nodeType":"IfStatement","src":"6286:105:24","trueBody":{"id":6048,"nodeType":"Block","src":"6317:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:24","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"6374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6043,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"6338:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6047,"nodeType":"RevertStatement","src":"6331:49:24"}]}},{"expression":{"arguments":[{"id":6052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"6415:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6050,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:24","typeDescriptions":{}}},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6035,"id":6054,"nodeType":"Return","src":"6400:21:24"}]},"documentation":{"id":6029,"nodeType":"StructuredDocumentation","src":"5925:280:24","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6056,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:24","nodeType":"FunctionDefinition","parameters":{"id":6032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6031,"mutability":"mutable","name":"value","nameLocation":"6237:5:24","nodeType":"VariableDeclaration","scope":6056,"src":"6229:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6030,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:24"},"returnParameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6056,"src":"6267:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6033,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:24"},"scope":7514,"src":"6210:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6083,"nodeType":"Block","src":"6785:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"6799:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6066,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6065,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:24","memberName":"max","nodeType":"MemberAccess","src":"6807:17:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6077,"nodeType":"IfStatement","src":"6795:105:24","trueBody":{"id":6076,"nodeType":"Block","src":"6826:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:24","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"6883:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6071,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"6847:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6075,"nodeType":"RevertStatement","src":"6840:49:24"}]}},{"expression":{"arguments":[{"id":6080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"6924:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6078,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:24","typeDescriptions":{}}},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6063,"id":6082,"nodeType":"Return","src":"6909:21:24"}]},"documentation":{"id":6057,"nodeType":"StructuredDocumentation","src":"6434:280:24","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6084,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:24","nodeType":"FunctionDefinition","parameters":{"id":6060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6059,"mutability":"mutable","name":"value","nameLocation":"6746:5:24","nodeType":"VariableDeclaration","scope":6084,"src":"6738:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6058,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:24"},"returnParameters":{"id":6063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6084,"src":"6776:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6061,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:24"},"scope":7514,"src":"6719:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6111,"nodeType":"Block","src":"7294:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"7308:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6094,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6093,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:24","memberName":"max","nodeType":"MemberAccess","src":"7316:17:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6105,"nodeType":"IfStatement","src":"7304:105:24","trueBody":{"id":6104,"nodeType":"Block","src":"7335:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:24","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"7392:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6099,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"7356:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6103,"nodeType":"RevertStatement","src":"7349:49:24"}]}},{"expression":{"arguments":[{"id":6108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"7433:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6106,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:24","typeDescriptions":{}}},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6091,"id":6110,"nodeType":"Return","src":"7418:21:24"}]},"documentation":{"id":6085,"nodeType":"StructuredDocumentation","src":"6943:280:24","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6112,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:24","nodeType":"FunctionDefinition","parameters":{"id":6088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"mutability":"mutable","name":"value","nameLocation":"7255:5:24","nodeType":"VariableDeclaration","scope":6112,"src":"7247:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6086,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:24"},"returnParameters":{"id":6091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6112,"src":"7285:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6089,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:24"},"scope":7514,"src":"7228:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6139,"nodeType":"Block","src":"7803:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"7817:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6122,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6121,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:24","memberName":"max","nodeType":"MemberAccess","src":"7825:17:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6133,"nodeType":"IfStatement","src":"7813:105:24","trueBody":{"id":6132,"nodeType":"Block","src":"7844:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:24","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"7901:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6127,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"7865:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6131,"nodeType":"RevertStatement","src":"7858:49:24"}]}},{"expression":{"arguments":[{"id":6136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"7942:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6134,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:24","typeDescriptions":{}}},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6119,"id":6138,"nodeType":"Return","src":"7927:21:24"}]},"documentation":{"id":6113,"nodeType":"StructuredDocumentation","src":"7452:280:24","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6140,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:24","nodeType":"FunctionDefinition","parameters":{"id":6116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6115,"mutability":"mutable","name":"value","nameLocation":"7764:5:24","nodeType":"VariableDeclaration","scope":6140,"src":"7756:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6114,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:24"},"returnParameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6140,"src":"7794:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6117,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:24"},"scope":7514,"src":"7737:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6167,"nodeType":"Block","src":"8312:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"8326:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6150,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6149,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:24","memberName":"max","nodeType":"MemberAccess","src":"8334:17:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6161,"nodeType":"IfStatement","src":"8322:105:24","trueBody":{"id":6160,"nodeType":"Block","src":"8353:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:24","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"8410:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6155,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"8374:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6159,"nodeType":"RevertStatement","src":"8367:49:24"}]}},{"expression":{"arguments":[{"id":6164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"8451:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6162,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:24","typeDescriptions":{}}},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6147,"id":6166,"nodeType":"Return","src":"8436:21:24"}]},"documentation":{"id":6141,"nodeType":"StructuredDocumentation","src":"7961:280:24","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6168,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:24","nodeType":"FunctionDefinition","parameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"value","nameLocation":"8273:5:24","nodeType":"VariableDeclaration","scope":6168,"src":"8265:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6142,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:24"},"returnParameters":{"id":6147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6168,"src":"8303:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6145,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:24"},"scope":7514,"src":"8246:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6195,"nodeType":"Block","src":"8821:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"8835:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6178,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6177,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:24","memberName":"max","nodeType":"MemberAccess","src":"8843:17:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6189,"nodeType":"IfStatement","src":"8831:105:24","trueBody":{"id":6188,"nodeType":"Block","src":"8862:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:24","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"8919:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6183,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"8883:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6187,"nodeType":"RevertStatement","src":"8876:49:24"}]}},{"expression":{"arguments":[{"id":6192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"8960:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6190,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:24","typeDescriptions":{}}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6175,"id":6194,"nodeType":"Return","src":"8945:21:24"}]},"documentation":{"id":6169,"nodeType":"StructuredDocumentation","src":"8470:280:24","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6196,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:24","nodeType":"FunctionDefinition","parameters":{"id":6172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6171,"mutability":"mutable","name":"value","nameLocation":"8782:5:24","nodeType":"VariableDeclaration","scope":6196,"src":"8774:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6170,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:24"},"returnParameters":{"id":6175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6196,"src":"8812:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6173,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:24"},"scope":7514,"src":"8755:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6223,"nodeType":"Block","src":"9330:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"9344:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6206,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6205,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:24","memberName":"max","nodeType":"MemberAccess","src":"9352:17:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6217,"nodeType":"IfStatement","src":"9340:105:24","trueBody":{"id":6216,"nodeType":"Block","src":"9371:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"9428:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6211,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"9392:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6215,"nodeType":"RevertStatement","src":"9385:49:24"}]}},{"expression":{"arguments":[{"id":6220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"9469:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6218,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:24","typeDescriptions":{}}},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6203,"id":6222,"nodeType":"Return","src":"9454:21:24"}]},"documentation":{"id":6197,"nodeType":"StructuredDocumentation","src":"8979:280:24","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6224,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:24","nodeType":"FunctionDefinition","parameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6199,"mutability":"mutable","name":"value","nameLocation":"9291:5:24","nodeType":"VariableDeclaration","scope":6224,"src":"9283:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6198,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:24"},"returnParameters":{"id":6203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6224,"src":"9321:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6201,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:24"},"scope":7514,"src":"9264:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6251,"nodeType":"Block","src":"9839:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"9853:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6234,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6233,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:24","memberName":"max","nodeType":"MemberAccess","src":"9861:17:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6245,"nodeType":"IfStatement","src":"9849:105:24","trueBody":{"id":6244,"nodeType":"Block","src":"9880:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:24","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"9937:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6239,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"9901:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6243,"nodeType":"RevertStatement","src":"9894:49:24"}]}},{"expression":{"arguments":[{"id":6248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"9978:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6246,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:24","typeDescriptions":{}}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6231,"id":6250,"nodeType":"Return","src":"9963:21:24"}]},"documentation":{"id":6225,"nodeType":"StructuredDocumentation","src":"9488:280:24","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6252,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:24","nodeType":"FunctionDefinition","parameters":{"id":6228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6227,"mutability":"mutable","name":"value","nameLocation":"9800:5:24","nodeType":"VariableDeclaration","scope":6252,"src":"9792:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6226,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:24"},"returnParameters":{"id":6231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6252,"src":"9830:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6229,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:24"},"scope":7514,"src":"9773:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6279,"nodeType":"Block","src":"10348:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"10362:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6262,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6261,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:24","memberName":"max","nodeType":"MemberAccess","src":"10370:17:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6273,"nodeType":"IfStatement","src":"10358:105:24","trueBody":{"id":6272,"nodeType":"Block","src":"10389:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:24","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"10446:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6267,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"10410:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6271,"nodeType":"RevertStatement","src":"10403:49:24"}]}},{"expression":{"arguments":[{"id":6276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"10487:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6274,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:24","typeDescriptions":{}}},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6259,"id":6278,"nodeType":"Return","src":"10472:21:24"}]},"documentation":{"id":6253,"nodeType":"StructuredDocumentation","src":"9997:280:24","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6280,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:24","nodeType":"FunctionDefinition","parameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6255,"mutability":"mutable","name":"value","nameLocation":"10309:5:24","nodeType":"VariableDeclaration","scope":6280,"src":"10301:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6254,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:24"},"returnParameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6280,"src":"10339:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6257,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:24"},"scope":7514,"src":"10282:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6307,"nodeType":"Block","src":"10857:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"10871:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6290,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6289,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:24","memberName":"max","nodeType":"MemberAccess","src":"10879:17:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6301,"nodeType":"IfStatement","src":"10867:105:24","trueBody":{"id":6300,"nodeType":"Block","src":"10898:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:24","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"10955:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6295,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"10919:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6299,"nodeType":"RevertStatement","src":"10912:49:24"}]}},{"expression":{"arguments":[{"id":6304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"10996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6302,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:24","typeDescriptions":{}}},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6287,"id":6306,"nodeType":"Return","src":"10981:21:24"}]},"documentation":{"id":6281,"nodeType":"StructuredDocumentation","src":"10506:280:24","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6308,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:24","nodeType":"FunctionDefinition","parameters":{"id":6284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6283,"mutability":"mutable","name":"value","nameLocation":"10818:5:24","nodeType":"VariableDeclaration","scope":6308,"src":"10810:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6282,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:24"},"returnParameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6308,"src":"10848:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6285,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:24"},"scope":7514,"src":"10791:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6335,"nodeType":"Block","src":"11360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"11374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6318,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6317,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:24","memberName":"max","nodeType":"MemberAccess","src":"11382:16:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6329,"nodeType":"IfStatement","src":"11370:103:24","trueBody":{"id":6328,"nodeType":"Block","src":"11400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"11456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6323,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"11421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6327,"nodeType":"RevertStatement","src":"11414:48:24"}]}},{"expression":{"arguments":[{"id":6332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"11496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6330,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:24","typeDescriptions":{}}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6315,"id":6334,"nodeType":"Return","src":"11482:20:24"}]},"documentation":{"id":6309,"nodeType":"StructuredDocumentation","src":"11015:276:24","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6336,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6311,"mutability":"mutable","name":"value","nameLocation":"11322:5:24","nodeType":"VariableDeclaration","scope":6336,"src":"11314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6310,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:24"},"returnParameters":{"id":6315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6336,"src":"11352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6313,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:24"},"scope":7514,"src":"11296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6363,"nodeType":"Block","src":"11860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"11874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6346,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6345,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:24","memberName":"max","nodeType":"MemberAccess","src":"11882:16:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6357,"nodeType":"IfStatement","src":"11870:103:24","trueBody":{"id":6356,"nodeType":"Block","src":"11900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"11956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6351,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"11921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6355,"nodeType":"RevertStatement","src":"11914:48:24"}]}},{"expression":{"arguments":[{"id":6360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"11996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6358,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:24","typeDescriptions":{}}},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6343,"id":6362,"nodeType":"Return","src":"11982:20:24"}]},"documentation":{"id":6337,"nodeType":"StructuredDocumentation","src":"11515:276:24","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6364,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6339,"mutability":"mutable","name":"value","nameLocation":"11822:5:24","nodeType":"VariableDeclaration","scope":6364,"src":"11814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6338,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:24"},"returnParameters":{"id":6343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6364,"src":"11852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6341,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:24"},"scope":7514,"src":"11796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6391,"nodeType":"Block","src":"12360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"12374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6374,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6373,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:24","memberName":"max","nodeType":"MemberAccess","src":"12382:16:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6385,"nodeType":"IfStatement","src":"12370:103:24","trueBody":{"id":6384,"nodeType":"Block","src":"12400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"12456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6379,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"12421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6383,"nodeType":"RevertStatement","src":"12414:48:24"}]}},{"expression":{"arguments":[{"id":6388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"12496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6386,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:24","typeDescriptions":{}}},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6371,"id":6390,"nodeType":"Return","src":"12482:20:24"}]},"documentation":{"id":6365,"nodeType":"StructuredDocumentation","src":"12015:276:24","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6392,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6367,"mutability":"mutable","name":"value","nameLocation":"12322:5:24","nodeType":"VariableDeclaration","scope":6392,"src":"12314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6366,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:24"},"returnParameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6392,"src":"12352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6369,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:24"},"scope":7514,"src":"12296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6419,"nodeType":"Block","src":"12860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"12874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6402,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6401,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:24","memberName":"max","nodeType":"MemberAccess","src":"12882:16:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6413,"nodeType":"IfStatement","src":"12870:103:24","trueBody":{"id":6412,"nodeType":"Block","src":"12900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"12956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6407,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"12921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6411,"nodeType":"RevertStatement","src":"12914:48:24"}]}},{"expression":{"arguments":[{"id":6416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"12996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6414,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:24","typeDescriptions":{}}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6399,"id":6418,"nodeType":"Return","src":"12982:20:24"}]},"documentation":{"id":6393,"nodeType":"StructuredDocumentation","src":"12515:276:24","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6420,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6395,"mutability":"mutable","name":"value","nameLocation":"12822:5:24","nodeType":"VariableDeclaration","scope":6420,"src":"12814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6394,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:24"},"returnParameters":{"id":6399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6420,"src":"12852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6397,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:24"},"scope":7514,"src":"12796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6447,"nodeType":"Block","src":"13360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"13374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6430,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6429,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:24","memberName":"max","nodeType":"MemberAccess","src":"13382:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6441,"nodeType":"IfStatement","src":"13370:103:24","trueBody":{"id":6440,"nodeType":"Block","src":"13400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"13456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6435,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"13421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6439,"nodeType":"RevertStatement","src":"13414:48:24"}]}},{"expression":{"arguments":[{"id":6444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"13496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6442,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:24","typeDescriptions":{}}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6427,"id":6446,"nodeType":"Return","src":"13482:20:24"}]},"documentation":{"id":6421,"nodeType":"StructuredDocumentation","src":"13015:276:24","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6448,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6423,"mutability":"mutable","name":"value","nameLocation":"13322:5:24","nodeType":"VariableDeclaration","scope":6448,"src":"13314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6422,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:24"},"returnParameters":{"id":6427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6448,"src":"13352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6425,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:24"},"scope":7514,"src":"13296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6475,"nodeType":"Block","src":"13860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6451,"src":"13874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6458,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6457,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:24","memberName":"max","nodeType":"MemberAccess","src":"13882:16:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6469,"nodeType":"IfStatement","src":"13870:103:24","trueBody":{"id":6468,"nodeType":"Block","src":"13900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6451,"src":"13956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6463,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"13921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6467,"nodeType":"RevertStatement","src":"13914:48:24"}]}},{"expression":{"arguments":[{"id":6472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6451,"src":"13996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6470,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:24","typeDescriptions":{}}},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6455,"id":6474,"nodeType":"Return","src":"13982:20:24"}]},"documentation":{"id":6449,"nodeType":"StructuredDocumentation","src":"13515:276:24","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6476,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6451,"mutability":"mutable","name":"value","nameLocation":"13822:5:24","nodeType":"VariableDeclaration","scope":6476,"src":"13814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6450,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:24"},"returnParameters":{"id":6455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6476,"src":"13852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6453,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:24"},"scope":7514,"src":"13796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6503,"nodeType":"Block","src":"14360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"14374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6486,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6485,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:24","memberName":"max","nodeType":"MemberAccess","src":"14382:16:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6497,"nodeType":"IfStatement","src":"14370:103:24","trueBody":{"id":6496,"nodeType":"Block","src":"14400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"14456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6491,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"14421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6495,"nodeType":"RevertStatement","src":"14414:48:24"}]}},{"expression":{"arguments":[{"id":6500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"14496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6498,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:24","typeDescriptions":{}}},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6483,"id":6502,"nodeType":"Return","src":"14482:20:24"}]},"documentation":{"id":6477,"nodeType":"StructuredDocumentation","src":"14015:276:24","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6504,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6479,"mutability":"mutable","name":"value","nameLocation":"14322:5:24","nodeType":"VariableDeclaration","scope":6504,"src":"14314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6478,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:24"},"returnParameters":{"id":6483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6504,"src":"14352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6481,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:24"},"scope":7514,"src":"14296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6531,"nodeType":"Block","src":"14860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"14874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6514,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6513,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:24","memberName":"max","nodeType":"MemberAccess","src":"14882:16:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6525,"nodeType":"IfStatement","src":"14870:103:24","trueBody":{"id":6524,"nodeType":"Block","src":"14900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"14956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6519,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"14921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6523,"nodeType":"RevertStatement","src":"14914:48:24"}]}},{"expression":{"arguments":[{"id":6528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"14996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6526,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:24","typeDescriptions":{}}},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6511,"id":6530,"nodeType":"Return","src":"14982:20:24"}]},"documentation":{"id":6505,"nodeType":"StructuredDocumentation","src":"14515:276:24","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6532,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6507,"mutability":"mutable","name":"value","nameLocation":"14822:5:24","nodeType":"VariableDeclaration","scope":6532,"src":"14814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6506,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:24"},"returnParameters":{"id":6511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6532,"src":"14852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6509,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:24"},"scope":7514,"src":"14796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6559,"nodeType":"Block","src":"15360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"15374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6542,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6541,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:24","memberName":"max","nodeType":"MemberAccess","src":"15382:16:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6553,"nodeType":"IfStatement","src":"15370:103:24","trueBody":{"id":6552,"nodeType":"Block","src":"15400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"15456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6547,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"15421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6551,"nodeType":"RevertStatement","src":"15414:48:24"}]}},{"expression":{"arguments":[{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"15496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6554,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:24","typeDescriptions":{}}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6539,"id":6558,"nodeType":"Return","src":"15482:20:24"}]},"documentation":{"id":6533,"nodeType":"StructuredDocumentation","src":"15015:276:24","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6560,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6535,"mutability":"mutable","name":"value","nameLocation":"15322:5:24","nodeType":"VariableDeclaration","scope":6560,"src":"15314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6534,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:24"},"returnParameters":{"id":6539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6560,"src":"15352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6537,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:24"},"scope":7514,"src":"15296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6587,"nodeType":"Block","src":"15860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"15874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6570,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6569,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:24","memberName":"max","nodeType":"MemberAccess","src":"15882:16:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6581,"nodeType":"IfStatement","src":"15870:103:24","trueBody":{"id":6580,"nodeType":"Block","src":"15900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"15956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6575,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"15921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6579,"nodeType":"RevertStatement","src":"15914:48:24"}]}},{"expression":{"arguments":[{"id":6584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"15996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6582,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:24","typeDescriptions":{}}},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6567,"id":6586,"nodeType":"Return","src":"15982:20:24"}]},"documentation":{"id":6561,"nodeType":"StructuredDocumentation","src":"15515:276:24","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6588,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6563,"mutability":"mutable","name":"value","nameLocation":"15822:5:24","nodeType":"VariableDeclaration","scope":6588,"src":"15814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6562,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:24"},"returnParameters":{"id":6567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6588,"src":"15852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6565,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:24"},"scope":7514,"src":"15796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6615,"nodeType":"Block","src":"16360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"16374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6598,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6597,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:24","memberName":"max","nodeType":"MemberAccess","src":"16382:16:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6609,"nodeType":"IfStatement","src":"16370:103:24","trueBody":{"id":6608,"nodeType":"Block","src":"16400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"16456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6603,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"16421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6607,"nodeType":"RevertStatement","src":"16414:48:24"}]}},{"expression":{"arguments":[{"id":6612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"16496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6610,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:24","typeDescriptions":{}}},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6595,"id":6614,"nodeType":"Return","src":"16482:20:24"}]},"documentation":{"id":6589,"nodeType":"StructuredDocumentation","src":"16015:276:24","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6616,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6591,"mutability":"mutable","name":"value","nameLocation":"16322:5:24","nodeType":"VariableDeclaration","scope":6616,"src":"16314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6590,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:24"},"returnParameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6616,"src":"16352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6593,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:24"},"scope":7514,"src":"16296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6643,"nodeType":"Block","src":"16854:146:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"16868:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6626,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6625,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:24","memberName":"max","nodeType":"MemberAccess","src":"16876:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6637,"nodeType":"IfStatement","src":"16864:101:24","trueBody":{"id":6636,"nodeType":"Block","src":"16893:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"16948:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6631,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"16914:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6635,"nodeType":"RevertStatement","src":"16907:47:24"}]}},{"expression":{"arguments":[{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"16987:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6638,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:24","typeDescriptions":{}}},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6623,"id":6642,"nodeType":"Return","src":"16974:19:24"}]},"documentation":{"id":6617,"nodeType":"StructuredDocumentation","src":"16515:272:24","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6644,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:24","nodeType":"FunctionDefinition","parameters":{"id":6620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6619,"mutability":"mutable","name":"value","nameLocation":"16817:5:24","nodeType":"VariableDeclaration","scope":6644,"src":"16809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6618,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:24"},"returnParameters":{"id":6623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6644,"src":"16847:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6621,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:24"},"scope":7514,"src":"16792:208:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6666,"nodeType":"Block","src":"17236:128:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"17250:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6660,"nodeType":"IfStatement","src":"17246:81:24","trueBody":{"id":6659,"nodeType":"Block","src":"17261:66:24","statements":[{"errorCall":{"arguments":[{"id":6656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"17310:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6655,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"17282:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6658,"nodeType":"RevertStatement","src":"17275:41:24"}]}},{"expression":{"arguments":[{"id":6663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"17351:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6661,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:24","typeDescriptions":{}}},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6651,"id":6665,"nodeType":"Return","src":"17336:21:24"}]},"documentation":{"id":6645,"nodeType":"StructuredDocumentation","src":"17006:160:24","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6667,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:24","nodeType":"FunctionDefinition","parameters":{"id":6648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6647,"mutability":"mutable","name":"value","nameLocation":"17197:5:24","nodeType":"VariableDeclaration","scope":6667,"src":"17190:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6646,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:24"},"returnParameters":{"id":6651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6667,"src":"17227:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6649,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:24"},"scope":7514,"src":"17171:193:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6692,"nodeType":"Block","src":"17761:150:24","statements":[{"expression":{"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6675,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"17771:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"17791:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6676,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:24","typeDescriptions":{}}},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6681,"nodeType":"ExpressionStatement","src":"17771:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6682,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"17811:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"17825:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6691,"nodeType":"IfStatement","src":"17807:98:24","trueBody":{"id":6690,"nodeType":"Block","src":"17832:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:24","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"17888:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6685,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"17853:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6689,"nodeType":"RevertStatement","src":"17846:48:24"}]}}]},"documentation":{"id":6668,"nodeType":"StructuredDocumentation","src":"17370:312:24","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6693,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:24","nodeType":"FunctionDefinition","parameters":{"id":6671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6670,"mutability":"mutable","name":"value","nameLocation":"17712:5:24","nodeType":"VariableDeclaration","scope":6693,"src":"17705:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6669,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:24"},"returnParameters":{"id":6674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6673,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:24","nodeType":"VariableDeclaration","scope":6693,"src":"17742:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6672,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:24"},"scope":7514,"src":"17687:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6718,"nodeType":"Block","src":"18308:150:24","statements":[{"expression":{"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6701,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"18318:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"18338:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6702,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:24","typeDescriptions":{}}},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6707,"nodeType":"ExpressionStatement","src":"18318:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6708,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"18358:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"18372:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6717,"nodeType":"IfStatement","src":"18354:98:24","trueBody":{"id":6716,"nodeType":"Block","src":"18379:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:24","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"18435:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6711,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"18400:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6715,"nodeType":"RevertStatement","src":"18393:48:24"}]}}]},"documentation":{"id":6694,"nodeType":"StructuredDocumentation","src":"17917:312:24","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6719,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:24","nodeType":"FunctionDefinition","parameters":{"id":6697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6696,"mutability":"mutable","name":"value","nameLocation":"18259:5:24","nodeType":"VariableDeclaration","scope":6719,"src":"18252:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6695,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:24"},"returnParameters":{"id":6700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6699,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:24","nodeType":"VariableDeclaration","scope":6719,"src":"18289:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6698,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:24"},"scope":7514,"src":"18234:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6744,"nodeType":"Block","src":"18855:150:24","statements":[{"expression":{"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6727,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"18865:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"18885:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6728,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:24","typeDescriptions":{}}},"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6733,"nodeType":"ExpressionStatement","src":"18865:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6734,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"18905:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"18919:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6743,"nodeType":"IfStatement","src":"18901:98:24","trueBody":{"id":6742,"nodeType":"Block","src":"18926:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:24","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"18982:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6737,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"18947:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6741,"nodeType":"RevertStatement","src":"18940:48:24"}]}}]},"documentation":{"id":6720,"nodeType":"StructuredDocumentation","src":"18464:312:24","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6745,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:24","nodeType":"FunctionDefinition","parameters":{"id":6723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6722,"mutability":"mutable","name":"value","nameLocation":"18806:5:24","nodeType":"VariableDeclaration","scope":6745,"src":"18799:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6721,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:24"},"returnParameters":{"id":6726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6725,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:24","nodeType":"VariableDeclaration","scope":6745,"src":"18836:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6724,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:24"},"scope":7514,"src":"18781:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6770,"nodeType":"Block","src":"19402:150:24","statements":[{"expression":{"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6753,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"19412:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6748,"src":"19432:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6754,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:24","typeDescriptions":{}}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6759,"nodeType":"ExpressionStatement","src":"19412:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6760,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"19452:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6748,"src":"19466:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6769,"nodeType":"IfStatement","src":"19448:98:24","trueBody":{"id":6768,"nodeType":"Block","src":"19473:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:24","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6748,"src":"19529:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6763,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"19494:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6767,"nodeType":"RevertStatement","src":"19487:48:24"}]}}]},"documentation":{"id":6746,"nodeType":"StructuredDocumentation","src":"19011:312:24","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6771,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:24","nodeType":"FunctionDefinition","parameters":{"id":6749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6748,"mutability":"mutable","name":"value","nameLocation":"19353:5:24","nodeType":"VariableDeclaration","scope":6771,"src":"19346:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6747,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:24"},"returnParameters":{"id":6752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6751,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:24","nodeType":"VariableDeclaration","scope":6771,"src":"19383:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6750,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:24"},"scope":7514,"src":"19328:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6796,"nodeType":"Block","src":"19949:150:24","statements":[{"expression":{"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6779,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"19959:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"19979:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6780,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:24","typeDescriptions":{}}},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6785,"nodeType":"ExpressionStatement","src":"19959:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6786,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"19999:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"20013:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6795,"nodeType":"IfStatement","src":"19995:98:24","trueBody":{"id":6794,"nodeType":"Block","src":"20020:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:24","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"20076:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6789,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"20041:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6793,"nodeType":"RevertStatement","src":"20034:48:24"}]}}]},"documentation":{"id":6772,"nodeType":"StructuredDocumentation","src":"19558:312:24","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6797,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:24","nodeType":"FunctionDefinition","parameters":{"id":6775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6774,"mutability":"mutable","name":"value","nameLocation":"19900:5:24","nodeType":"VariableDeclaration","scope":6797,"src":"19893:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6773,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:24"},"returnParameters":{"id":6778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6777,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:24","nodeType":"VariableDeclaration","scope":6797,"src":"19930:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6776,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:24"},"scope":7514,"src":"19875:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6822,"nodeType":"Block","src":"20496:150:24","statements":[{"expression":{"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6805,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"20506:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"20526:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6806,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:24","typeDescriptions":{}}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6811,"nodeType":"ExpressionStatement","src":"20506:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6812,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"20546:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"20560:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6821,"nodeType":"IfStatement","src":"20542:98:24","trueBody":{"id":6820,"nodeType":"Block","src":"20567:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:24","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"20623:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6815,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"20588:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6819,"nodeType":"RevertStatement","src":"20581:48:24"}]}}]},"documentation":{"id":6798,"nodeType":"StructuredDocumentation","src":"20105:312:24","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6823,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:24","nodeType":"FunctionDefinition","parameters":{"id":6801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6800,"mutability":"mutable","name":"value","nameLocation":"20447:5:24","nodeType":"VariableDeclaration","scope":6823,"src":"20440:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6799,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:24"},"returnParameters":{"id":6804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6803,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:24","nodeType":"VariableDeclaration","scope":6823,"src":"20477:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6802,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:24"},"scope":7514,"src":"20422:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6848,"nodeType":"Block","src":"21043:150:24","statements":[{"expression":{"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6831,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"21053:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"21073:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6832,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:24","typeDescriptions":{}}},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6837,"nodeType":"ExpressionStatement","src":"21053:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6838,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"21093:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"21107:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6847,"nodeType":"IfStatement","src":"21089:98:24","trueBody":{"id":6846,"nodeType":"Block","src":"21114:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:24","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"21170:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6841,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"21135:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6845,"nodeType":"RevertStatement","src":"21128:48:24"}]}}]},"documentation":{"id":6824,"nodeType":"StructuredDocumentation","src":"20652:312:24","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6849,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:24","nodeType":"FunctionDefinition","parameters":{"id":6827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6826,"mutability":"mutable","name":"value","nameLocation":"20994:5:24","nodeType":"VariableDeclaration","scope":6849,"src":"20987:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6825,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:24"},"returnParameters":{"id":6830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6829,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:24","nodeType":"VariableDeclaration","scope":6849,"src":"21024:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6828,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:24"},"scope":7514,"src":"20969:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6874,"nodeType":"Block","src":"21590:150:24","statements":[{"expression":{"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6857,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"21600:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"21620:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6858,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:24","typeDescriptions":{}}},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6863,"nodeType":"ExpressionStatement","src":"21600:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6864,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"21640:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"21654:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6873,"nodeType":"IfStatement","src":"21636:98:24","trueBody":{"id":6872,"nodeType":"Block","src":"21661:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:24","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"21717:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6867,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"21682:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6871,"nodeType":"RevertStatement","src":"21675:48:24"}]}}]},"documentation":{"id":6850,"nodeType":"StructuredDocumentation","src":"21199:312:24","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6875,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:24","nodeType":"FunctionDefinition","parameters":{"id":6853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6852,"mutability":"mutable","name":"value","nameLocation":"21541:5:24","nodeType":"VariableDeclaration","scope":6875,"src":"21534:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6851,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:24"},"returnParameters":{"id":6856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6855,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:24","nodeType":"VariableDeclaration","scope":6875,"src":"21571:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6854,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:24"},"scope":7514,"src":"21516:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6900,"nodeType":"Block","src":"22137:150:24","statements":[{"expression":{"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6883,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"22147:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"22167:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6884,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:24","typeDescriptions":{}}},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6889,"nodeType":"ExpressionStatement","src":"22147:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6890,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"22187:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"22201:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6899,"nodeType":"IfStatement","src":"22183:98:24","trueBody":{"id":6898,"nodeType":"Block","src":"22208:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:24","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"22264:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6893,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"22229:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6897,"nodeType":"RevertStatement","src":"22222:48:24"}]}}]},"documentation":{"id":6876,"nodeType":"StructuredDocumentation","src":"21746:312:24","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6901,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:24","nodeType":"FunctionDefinition","parameters":{"id":6879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6878,"mutability":"mutable","name":"value","nameLocation":"22088:5:24","nodeType":"VariableDeclaration","scope":6901,"src":"22081:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6877,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:24"},"returnParameters":{"id":6882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6881,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:24","nodeType":"VariableDeclaration","scope":6901,"src":"22118:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6880,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:24"},"scope":7514,"src":"22063:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6926,"nodeType":"Block","src":"22684:150:24","statements":[{"expression":{"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6909,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"22694:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"22714:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6910,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:24","typeDescriptions":{}}},"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6915,"nodeType":"ExpressionStatement","src":"22694:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6916,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"22734:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"22748:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6925,"nodeType":"IfStatement","src":"22730:98:24","trueBody":{"id":6924,"nodeType":"Block","src":"22755:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:24","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"22811:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6919,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"22776:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6923,"nodeType":"RevertStatement","src":"22769:48:24"}]}}]},"documentation":{"id":6902,"nodeType":"StructuredDocumentation","src":"22293:312:24","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6927,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:24","nodeType":"FunctionDefinition","parameters":{"id":6905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6904,"mutability":"mutable","name":"value","nameLocation":"22635:5:24","nodeType":"VariableDeclaration","scope":6927,"src":"22628:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6903,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:24"},"returnParameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6907,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:24","nodeType":"VariableDeclaration","scope":6927,"src":"22665:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6906,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:24"},"scope":7514,"src":"22610:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6952,"nodeType":"Block","src":"23231:150:24","statements":[{"expression":{"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6935,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"23241:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"23261:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6936,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:24","typeDescriptions":{}}},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6941,"nodeType":"ExpressionStatement","src":"23241:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6942,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"23281:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"23295:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6951,"nodeType":"IfStatement","src":"23277:98:24","trueBody":{"id":6950,"nodeType":"Block","src":"23302:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:24","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"23358:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6945,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"23323:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6949,"nodeType":"RevertStatement","src":"23316:48:24"}]}}]},"documentation":{"id":6928,"nodeType":"StructuredDocumentation","src":"22840:312:24","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6953,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:24","nodeType":"FunctionDefinition","parameters":{"id":6931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6930,"mutability":"mutable","name":"value","nameLocation":"23182:5:24","nodeType":"VariableDeclaration","scope":6953,"src":"23175:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6929,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:24"},"returnParameters":{"id":6934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6933,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:24","nodeType":"VariableDeclaration","scope":6953,"src":"23212:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6932,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:24"},"scope":7514,"src":"23157:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6978,"nodeType":"Block","src":"23778:150:24","statements":[{"expression":{"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6961,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"23788:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"23808:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6962,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:24","typeDescriptions":{}}},"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6967,"nodeType":"ExpressionStatement","src":"23788:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6968,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"23828:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"23842:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6977,"nodeType":"IfStatement","src":"23824:98:24","trueBody":{"id":6976,"nodeType":"Block","src":"23849:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:24","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"23905:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6971,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"23870:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6975,"nodeType":"RevertStatement","src":"23863:48:24"}]}}]},"documentation":{"id":6954,"nodeType":"StructuredDocumentation","src":"23387:312:24","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6979,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:24","nodeType":"FunctionDefinition","parameters":{"id":6957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6956,"mutability":"mutable","name":"value","nameLocation":"23729:5:24","nodeType":"VariableDeclaration","scope":6979,"src":"23722:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6955,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:24"},"returnParameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6959,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:24","nodeType":"VariableDeclaration","scope":6979,"src":"23759:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6958,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:24"},"scope":7514,"src":"23704:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7004,"nodeType":"Block","src":"24325:150:24","statements":[{"expression":{"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6987,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"24335:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"24355:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6988,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:24","typeDescriptions":{}}},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6993,"nodeType":"ExpressionStatement","src":"24335:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6994,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"24375:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"24389:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7003,"nodeType":"IfStatement","src":"24371:98:24","trueBody":{"id":7002,"nodeType":"Block","src":"24396:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:24","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"24452:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6997,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"24417:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7001,"nodeType":"RevertStatement","src":"24410:48:24"}]}}]},"documentation":{"id":6980,"nodeType":"StructuredDocumentation","src":"23934:312:24","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7005,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:24","nodeType":"FunctionDefinition","parameters":{"id":6983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6982,"mutability":"mutable","name":"value","nameLocation":"24276:5:24","nodeType":"VariableDeclaration","scope":7005,"src":"24269:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6981,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:24"},"returnParameters":{"id":6986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6985,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:24","nodeType":"VariableDeclaration","scope":7005,"src":"24306:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6984,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:24"},"scope":7514,"src":"24251:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7030,"nodeType":"Block","src":"24872:150:24","statements":[{"expression":{"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7013,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"24882:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"24902:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7014,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:24","typeDescriptions":{}}},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7019,"nodeType":"ExpressionStatement","src":"24882:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7020,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"24922:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"24936:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7029,"nodeType":"IfStatement","src":"24918:98:24","trueBody":{"id":7028,"nodeType":"Block","src":"24943:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:24","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"24999:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7023,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"24964:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7027,"nodeType":"RevertStatement","src":"24957:48:24"}]}}]},"documentation":{"id":7006,"nodeType":"StructuredDocumentation","src":"24481:312:24","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7031,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:24","nodeType":"FunctionDefinition","parameters":{"id":7009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"mutability":"mutable","name":"value","nameLocation":"24823:5:24","nodeType":"VariableDeclaration","scope":7031,"src":"24816:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7007,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:24"},"returnParameters":{"id":7012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7011,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:24","nodeType":"VariableDeclaration","scope":7031,"src":"24853:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7010,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:24"},"scope":7514,"src":"24798:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7056,"nodeType":"Block","src":"25419:150:24","statements":[{"expression":{"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7039,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"25429:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"25449:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7040,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:24","typeDescriptions":{}}},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7045,"nodeType":"ExpressionStatement","src":"25429:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7046,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"25469:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"25483:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7055,"nodeType":"IfStatement","src":"25465:98:24","trueBody":{"id":7054,"nodeType":"Block","src":"25490:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:24","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"25546:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7049,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"25511:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7053,"nodeType":"RevertStatement","src":"25504:48:24"}]}}]},"documentation":{"id":7032,"nodeType":"StructuredDocumentation","src":"25028:312:24","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7057,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:24","nodeType":"FunctionDefinition","parameters":{"id":7035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7034,"mutability":"mutable","name":"value","nameLocation":"25370:5:24","nodeType":"VariableDeclaration","scope":7057,"src":"25363:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7033,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:24"},"returnParameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7037,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:24","nodeType":"VariableDeclaration","scope":7057,"src":"25400:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7036,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:24"},"scope":7514,"src":"25345:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7082,"nodeType":"Block","src":"25966:150:24","statements":[{"expression":{"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7065,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"25976:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"25996:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7066,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:24","typeDescriptions":{}}},"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7071,"nodeType":"ExpressionStatement","src":"25976:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7072,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"26016:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"26030:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7081,"nodeType":"IfStatement","src":"26012:98:24","trueBody":{"id":7080,"nodeType":"Block","src":"26037:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"26093:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7075,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"26058:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7079,"nodeType":"RevertStatement","src":"26051:48:24"}]}}]},"documentation":{"id":7058,"nodeType":"StructuredDocumentation","src":"25575:312:24","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7083,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:24","nodeType":"FunctionDefinition","parameters":{"id":7061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7060,"mutability":"mutable","name":"value","nameLocation":"25917:5:24","nodeType":"VariableDeclaration","scope":7083,"src":"25910:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7059,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:24"},"returnParameters":{"id":7064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7063,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:24","nodeType":"VariableDeclaration","scope":7083,"src":"25947:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7062,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:24"},"scope":7514,"src":"25892:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7108,"nodeType":"Block","src":"26513:150:24","statements":[{"expression":{"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7091,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"26523:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"26543:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7092,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:24","typeDescriptions":{}}},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7097,"nodeType":"ExpressionStatement","src":"26523:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7098,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"26563:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"26577:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7107,"nodeType":"IfStatement","src":"26559:98:24","trueBody":{"id":7106,"nodeType":"Block","src":"26584:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:24","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"26640:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7101,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"26605:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7105,"nodeType":"RevertStatement","src":"26598:48:24"}]}}]},"documentation":{"id":7084,"nodeType":"StructuredDocumentation","src":"26122:312:24","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7109,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:24","nodeType":"FunctionDefinition","parameters":{"id":7087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7086,"mutability":"mutable","name":"value","nameLocation":"26464:5:24","nodeType":"VariableDeclaration","scope":7109,"src":"26457:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7085,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:24"},"returnParameters":{"id":7090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7089,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:24","nodeType":"VariableDeclaration","scope":7109,"src":"26494:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7088,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:24"},"scope":7514,"src":"26439:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7134,"nodeType":"Block","src":"27060:150:24","statements":[{"expression":{"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7117,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"27070:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"27090:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7118,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:24","typeDescriptions":{}}},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7123,"nodeType":"ExpressionStatement","src":"27070:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7124,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"27110:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"27124:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7133,"nodeType":"IfStatement","src":"27106:98:24","trueBody":{"id":7132,"nodeType":"Block","src":"27131:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:24","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"27187:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7127,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"27152:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7131,"nodeType":"RevertStatement","src":"27145:48:24"}]}}]},"documentation":{"id":7110,"nodeType":"StructuredDocumentation","src":"26669:312:24","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7135,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:24","nodeType":"FunctionDefinition","parameters":{"id":7113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7112,"mutability":"mutable","name":"value","nameLocation":"27011:5:24","nodeType":"VariableDeclaration","scope":7135,"src":"27004:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7111,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:24"},"returnParameters":{"id":7116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7115,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:24","nodeType":"VariableDeclaration","scope":7135,"src":"27041:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7114,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:24"},"scope":7514,"src":"26986:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7160,"nodeType":"Block","src":"27607:150:24","statements":[{"expression":{"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7143,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"27617:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"27637:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7144,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:24","typeDescriptions":{}}},"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7149,"nodeType":"ExpressionStatement","src":"27617:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7150,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"27657:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"27671:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7159,"nodeType":"IfStatement","src":"27653:98:24","trueBody":{"id":7158,"nodeType":"Block","src":"27678:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:24","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"27734:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7153,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"27699:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7157,"nodeType":"RevertStatement","src":"27692:48:24"}]}}]},"documentation":{"id":7136,"nodeType":"StructuredDocumentation","src":"27216:312:24","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7161,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:24","nodeType":"FunctionDefinition","parameters":{"id":7139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7138,"mutability":"mutable","name":"value","nameLocation":"27558:5:24","nodeType":"VariableDeclaration","scope":7161,"src":"27551:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7137,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:24"},"returnParameters":{"id":7142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7141,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:24","nodeType":"VariableDeclaration","scope":7161,"src":"27588:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7140,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:24"},"scope":7514,"src":"27533:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7186,"nodeType":"Block","src":"28147:148:24","statements":[{"expression":{"id":7174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7169,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"28157:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"28176:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7170,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:24","typeDescriptions":{}}},"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7175,"nodeType":"ExpressionStatement","src":"28157:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7176,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"28196:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"28210:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7185,"nodeType":"IfStatement","src":"28192:97:24","trueBody":{"id":7184,"nodeType":"Block","src":"28217:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"28272:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7179,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"28238:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7183,"nodeType":"RevertStatement","src":"28231:47:24"}]}}]},"documentation":{"id":7162,"nodeType":"StructuredDocumentation","src":"27763:307:24","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7187,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:24","nodeType":"FunctionDefinition","parameters":{"id":7165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7164,"mutability":"mutable","name":"value","nameLocation":"28099:5:24","nodeType":"VariableDeclaration","scope":7187,"src":"28092:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7163,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:24"},"returnParameters":{"id":7168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7167,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:24","nodeType":"VariableDeclaration","scope":7187,"src":"28129:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7166,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:24"},"scope":7514,"src":"28075:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7212,"nodeType":"Block","src":"28685:148:24","statements":[{"expression":{"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7195,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"28695:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"28714:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7196,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:24","typeDescriptions":{}}},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7201,"nodeType":"ExpressionStatement","src":"28695:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7202,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"28734:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"28748:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7211,"nodeType":"IfStatement","src":"28730:97:24","trueBody":{"id":7210,"nodeType":"Block","src":"28755:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:24","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"28810:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7205,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"28776:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7209,"nodeType":"RevertStatement","src":"28769:47:24"}]}}]},"documentation":{"id":7188,"nodeType":"StructuredDocumentation","src":"28301:307:24","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7213,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:24","nodeType":"FunctionDefinition","parameters":{"id":7191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7190,"mutability":"mutable","name":"value","nameLocation":"28637:5:24","nodeType":"VariableDeclaration","scope":7213,"src":"28630:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7189,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:24"},"returnParameters":{"id":7194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7193,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:24","nodeType":"VariableDeclaration","scope":7213,"src":"28667:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7192,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:24"},"scope":7514,"src":"28613:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7238,"nodeType":"Block","src":"29223:148:24","statements":[{"expression":{"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7221,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"29233:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"29252:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7222,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:24","typeDescriptions":{}}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7227,"nodeType":"ExpressionStatement","src":"29233:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7228,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"29272:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"29286:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7237,"nodeType":"IfStatement","src":"29268:97:24","trueBody":{"id":7236,"nodeType":"Block","src":"29293:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"29348:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7231,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"29314:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7235,"nodeType":"RevertStatement","src":"29307:47:24"}]}}]},"documentation":{"id":7214,"nodeType":"StructuredDocumentation","src":"28839:307:24","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7239,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:24","nodeType":"FunctionDefinition","parameters":{"id":7217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7216,"mutability":"mutable","name":"value","nameLocation":"29175:5:24","nodeType":"VariableDeclaration","scope":7239,"src":"29168:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7215,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:24"},"returnParameters":{"id":7220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7219,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:24","nodeType":"VariableDeclaration","scope":7239,"src":"29205:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7218,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:24"},"scope":7514,"src":"29151:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7264,"nodeType":"Block","src":"29761:148:24","statements":[{"expression":{"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7247,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"29771:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"29790:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7248,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:24","typeDescriptions":{}}},"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7253,"nodeType":"ExpressionStatement","src":"29771:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7254,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"29810:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"29824:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7263,"nodeType":"IfStatement","src":"29806:97:24","trueBody":{"id":7262,"nodeType":"Block","src":"29831:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:24","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"29886:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7257,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"29852:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7261,"nodeType":"RevertStatement","src":"29845:47:24"}]}}]},"documentation":{"id":7240,"nodeType":"StructuredDocumentation","src":"29377:307:24","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7265,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:24","nodeType":"FunctionDefinition","parameters":{"id":7243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7242,"mutability":"mutable","name":"value","nameLocation":"29713:5:24","nodeType":"VariableDeclaration","scope":7265,"src":"29706:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7241,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:24"},"returnParameters":{"id":7246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7245,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:24","nodeType":"VariableDeclaration","scope":7265,"src":"29743:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7244,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:24"},"scope":7514,"src":"29689:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7290,"nodeType":"Block","src":"30299:148:24","statements":[{"expression":{"id":7278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7273,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"30309:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"30328:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7274,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:24","typeDescriptions":{}}},"id":7277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7279,"nodeType":"ExpressionStatement","src":"30309:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7280,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"30348:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"30362:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7289,"nodeType":"IfStatement","src":"30344:97:24","trueBody":{"id":7288,"nodeType":"Block","src":"30369:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"30424:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7283,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"30390:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7287,"nodeType":"RevertStatement","src":"30383:47:24"}]}}]},"documentation":{"id":7266,"nodeType":"StructuredDocumentation","src":"29915:307:24","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7291,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:24","nodeType":"FunctionDefinition","parameters":{"id":7269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7268,"mutability":"mutable","name":"value","nameLocation":"30251:5:24","nodeType":"VariableDeclaration","scope":7291,"src":"30244:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7267,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:24"},"returnParameters":{"id":7272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7271,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:24","nodeType":"VariableDeclaration","scope":7291,"src":"30281:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7270,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:24"},"scope":7514,"src":"30227:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7316,"nodeType":"Block","src":"30837:148:24","statements":[{"expression":{"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7299,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"30847:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"30866:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7300,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:24","typeDescriptions":{}}},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7305,"nodeType":"ExpressionStatement","src":"30847:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7306,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"30886:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"30900:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7315,"nodeType":"IfStatement","src":"30882:97:24","trueBody":{"id":7314,"nodeType":"Block","src":"30907:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:24","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"30962:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7309,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"30928:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7313,"nodeType":"RevertStatement","src":"30921:47:24"}]}}]},"documentation":{"id":7292,"nodeType":"StructuredDocumentation","src":"30453:307:24","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7317,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:24","nodeType":"FunctionDefinition","parameters":{"id":7295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7294,"mutability":"mutable","name":"value","nameLocation":"30789:5:24","nodeType":"VariableDeclaration","scope":7317,"src":"30782:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7293,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:24"},"returnParameters":{"id":7298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7297,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:24","nodeType":"VariableDeclaration","scope":7317,"src":"30819:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7296,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:24"},"scope":7514,"src":"30765:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7342,"nodeType":"Block","src":"31375:148:24","statements":[{"expression":{"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7325,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"31385:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"31404:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7326,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:24","typeDescriptions":{}}},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7331,"nodeType":"ExpressionStatement","src":"31385:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7332,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"31424:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"31438:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7341,"nodeType":"IfStatement","src":"31420:97:24","trueBody":{"id":7340,"nodeType":"Block","src":"31445:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"31500:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7335,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"31466:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7339,"nodeType":"RevertStatement","src":"31459:47:24"}]}}]},"documentation":{"id":7318,"nodeType":"StructuredDocumentation","src":"30991:307:24","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7343,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:24","nodeType":"FunctionDefinition","parameters":{"id":7321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7320,"mutability":"mutable","name":"value","nameLocation":"31327:5:24","nodeType":"VariableDeclaration","scope":7343,"src":"31320:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7319,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:24"},"returnParameters":{"id":7324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7323,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:24","nodeType":"VariableDeclaration","scope":7343,"src":"31357:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7322,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:24"},"scope":7514,"src":"31303:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7368,"nodeType":"Block","src":"31913:148:24","statements":[{"expression":{"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7351,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"31923:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"31942:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7352,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:24","typeDescriptions":{}}},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7357,"nodeType":"ExpressionStatement","src":"31923:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7358,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"31962:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"31976:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7367,"nodeType":"IfStatement","src":"31958:97:24","trueBody":{"id":7366,"nodeType":"Block","src":"31983:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"32038:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7361,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"32004:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7365,"nodeType":"RevertStatement","src":"31997:47:24"}]}}]},"documentation":{"id":7344,"nodeType":"StructuredDocumentation","src":"31529:307:24","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7369,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:24","nodeType":"FunctionDefinition","parameters":{"id":7347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7346,"mutability":"mutable","name":"value","nameLocation":"31865:5:24","nodeType":"VariableDeclaration","scope":7369,"src":"31858:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7345,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:24"},"returnParameters":{"id":7350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7349,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:24","nodeType":"VariableDeclaration","scope":7369,"src":"31895:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7348,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:24"},"scope":7514,"src":"31841:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7394,"nodeType":"Block","src":"32451:148:24","statements":[{"expression":{"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7377,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"32461:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"32480:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7378,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:24","typeDescriptions":{}}},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7383,"nodeType":"ExpressionStatement","src":"32461:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7384,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"32500:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"32514:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7393,"nodeType":"IfStatement","src":"32496:97:24","trueBody":{"id":7392,"nodeType":"Block","src":"32521:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"32576:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7387,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"32542:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7391,"nodeType":"RevertStatement","src":"32535:47:24"}]}}]},"documentation":{"id":7370,"nodeType":"StructuredDocumentation","src":"32067:307:24","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7395,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:24","nodeType":"FunctionDefinition","parameters":{"id":7373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7372,"mutability":"mutable","name":"value","nameLocation":"32403:5:24","nodeType":"VariableDeclaration","scope":7395,"src":"32396:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7371,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:24"},"returnParameters":{"id":7376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7375,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:24","nodeType":"VariableDeclaration","scope":7395,"src":"32433:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7374,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:24"},"scope":7514,"src":"32379:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7420,"nodeType":"Block","src":"32989:148:24","statements":[{"expression":{"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7403,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"32999:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"33018:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7404,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:24","typeDescriptions":{}}},"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7409,"nodeType":"ExpressionStatement","src":"32999:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7410,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"33038:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"33052:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7419,"nodeType":"IfStatement","src":"33034:97:24","trueBody":{"id":7418,"nodeType":"Block","src":"33059:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:24","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"33114:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7413,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"33080:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7417,"nodeType":"RevertStatement","src":"33073:47:24"}]}}]},"documentation":{"id":7396,"nodeType":"StructuredDocumentation","src":"32605:307:24","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7421,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:24","nodeType":"FunctionDefinition","parameters":{"id":7399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7398,"mutability":"mutable","name":"value","nameLocation":"32941:5:24","nodeType":"VariableDeclaration","scope":7421,"src":"32934:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7397,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:24"},"returnParameters":{"id":7402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7401,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:24","nodeType":"VariableDeclaration","scope":7421,"src":"32971:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7400,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:24"},"scope":7514,"src":"32917:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7446,"nodeType":"Block","src":"33527:148:24","statements":[{"expression":{"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7429,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"33537:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"33556:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7430,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:24","typeDescriptions":{}}},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7435,"nodeType":"ExpressionStatement","src":"33537:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7436,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"33576:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"33590:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7445,"nodeType":"IfStatement","src":"33572:97:24","trueBody":{"id":7444,"nodeType":"Block","src":"33597:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"33652:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7439,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"33618:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7443,"nodeType":"RevertStatement","src":"33611:47:24"}]}}]},"documentation":{"id":7422,"nodeType":"StructuredDocumentation","src":"33143:307:24","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7447,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:24","nodeType":"FunctionDefinition","parameters":{"id":7425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7424,"mutability":"mutable","name":"value","nameLocation":"33479:5:24","nodeType":"VariableDeclaration","scope":7447,"src":"33472:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7423,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:24"},"returnParameters":{"id":7428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7427,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:24","nodeType":"VariableDeclaration","scope":7447,"src":"33509:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7426,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:24"},"scope":7514,"src":"33455:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7472,"nodeType":"Block","src":"34058:146:24","statements":[{"expression":{"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7455,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"34068:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"34086:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7456,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:24","typeDescriptions":{}}},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7461,"nodeType":"ExpressionStatement","src":"34068:24:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7462,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"34106:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"34120:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7471,"nodeType":"IfStatement","src":"34102:96:24","trueBody":{"id":7470,"nodeType":"Block","src":"34127:71:24","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"34181:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7465,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"34148:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7469,"nodeType":"RevertStatement","src":"34141:46:24"}]}}]},"documentation":{"id":7448,"nodeType":"StructuredDocumentation","src":"33681:302:24","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7473,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:24","nodeType":"FunctionDefinition","parameters":{"id":7451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7450,"mutability":"mutable","name":"value","nameLocation":"34011:5:24","nodeType":"VariableDeclaration","scope":7473,"src":"34004:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7449,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:24"},"returnParameters":{"id":7454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7453,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:24","nodeType":"VariableDeclaration","scope":7473,"src":"34041:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7452,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:24"},"scope":7514,"src":"33988:216:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7502,"nodeType":"Block","src":"34444:250:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"34557:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7485,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7484,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:24","memberName":"max","nodeType":"MemberAccess","src":"34573:16:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7482,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:24","typeDescriptions":{}}},"id":7489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7496,"nodeType":"IfStatement","src":"34553:105:24","trueBody":{"id":7495,"nodeType":"Block","src":"34592:66:24","statements":[{"errorCall":{"arguments":[{"id":7492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"34641:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7491,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"34613:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7494,"nodeType":"RevertStatement","src":"34606:41:24"}]}},{"expression":{"arguments":[{"id":7499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"34681:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7497,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:24","typeDescriptions":{}}},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7480,"id":7501,"nodeType":"Return","src":"34667:20:24"}]},"documentation":{"id":7474,"nodeType":"StructuredDocumentation","src":"34210:165:24","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7503,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:24","nodeType":"FunctionDefinition","parameters":{"id":7477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7476,"mutability":"mutable","name":"value","nameLocation":"34406:5:24","nodeType":"VariableDeclaration","scope":7503,"src":"34398:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7475,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:24"},"returnParameters":{"id":7480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7503,"src":"34436:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7478,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:24"},"scope":7514,"src":"34380:314:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7512,"nodeType":"Block","src":"34853:87:24","statements":[{"AST":{"nativeSrc":"34888:46:24","nodeType":"YulBlock","src":"34888:46:24","statements":[{"nativeSrc":"34902:22:24","nodeType":"YulAssignment","src":"34902:22:24","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:24","nodeType":"YulIdentifier","src":"34921:1:24"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:24","nodeType":"YulIdentifier","src":"34914:6:24"},"nativeSrc":"34914:9:24","nodeType":"YulFunctionCall","src":"34914:9:24"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:24","nodeType":"YulIdentifier","src":"34907:6:24"},"nativeSrc":"34907:17:24","nodeType":"YulFunctionCall","src":"34907:17:24"},"variableNames":[{"name":"u","nativeSrc":"34902:1:24","nodeType":"YulIdentifier","src":"34902:1:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7506,"isOffset":false,"isSlot":false,"src":"34921:1:24","valueSize":1},{"declaration":7509,"isOffset":false,"isSlot":false,"src":"34902:1:24","valueSize":1}],"flags":["memory-safe"],"id":7511,"nodeType":"InlineAssembly","src":"34863:71:24"}]},"documentation":{"id":7504,"nodeType":"StructuredDocumentation","src":"34700:90:24","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7513,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:24","nodeType":"FunctionDefinition","parameters":{"id":7507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7506,"mutability":"mutable","name":"b","nameLocation":"34816:1:24","nodeType":"VariableDeclaration","scope":7513,"src":"34811:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7505,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:24"},"returnParameters":{"id":7510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7509,"mutability":"mutable","name":"u","nameLocation":"34850:1:24","nodeType":"VariableDeclaration","scope":7513,"src":"34842:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7508,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:24"},"scope":7514,"src":"34795:145:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7515,"src":"769:34173:24","usedErrors":[5759,5764,5771,5776],"usedEvents":[]}],"src":"192:34751:24"},"id":24},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7514],"SignedMath":[7658]},"id":7659,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7516,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7518,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7659,"sourceUnit":7515,"src":"135:40:25","symbolAliases":[{"foreign":{"id":7517,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"143:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7519,"nodeType":"StructuredDocumentation","src":"177:80:25","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7658,"linearizedBaseContracts":[7658],"name":"SignedMath","nameLocation":"266:10:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":7548,"nodeType":"Block","src":"746:215:25","statements":[{"id":7547,"nodeType":"UncheckedBlock","src":"756:199:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7531,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"894:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"900:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7533,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"904:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7540,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7522,"src":"932:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7538,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"916:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7514_$","typeString":"type(library SafeCast)"}},"id":7539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7513,"src":"916:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7536,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:25","typeDescriptions":{}}},"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7544,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7530,"id":7546,"nodeType":"Return","src":"887:57:25"}]}]},"documentation":{"id":7520,"nodeType":"StructuredDocumentation","src":"283:374:25","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7549,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:25","nodeType":"FunctionDefinition","parameters":{"id":7527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7522,"mutability":"mutable","name":"condition","nameLocation":"684:9:25","nodeType":"VariableDeclaration","scope":7549,"src":"679:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7521,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7524,"mutability":"mutable","name":"a","nameLocation":"702:1:25","nodeType":"VariableDeclaration","scope":7549,"src":"695:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7523,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7526,"mutability":"mutable","name":"b","nameLocation":"712:1:25","nodeType":"VariableDeclaration","scope":7549,"src":"705:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7525,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:25"},"returnParameters":{"id":7530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7549,"src":"738:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7528,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:25"},"scope":7658,"src":"662:299:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7567,"nodeType":"Block","src":"1102:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7560,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"1127:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7561,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"1131:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7563,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"1134:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7564,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"1137:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7559,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"1119:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7558,"id":7566,"nodeType":"Return","src":"1112:27:25"}]},"documentation":{"id":7550,"nodeType":"StructuredDocumentation","src":"967:66:25","text":" @dev Returns the largest of two signed numbers."},"id":7568,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:25","nodeType":"FunctionDefinition","parameters":{"id":7555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7552,"mutability":"mutable","name":"a","nameLocation":"1058:1:25","nodeType":"VariableDeclaration","scope":7568,"src":"1051:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7551,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7554,"mutability":"mutable","name":"b","nameLocation":"1068:1:25","nodeType":"VariableDeclaration","scope":7568,"src":"1061:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7553,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:25"},"returnParameters":{"id":7558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7568,"src":"1094:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7556,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:25"},"scope":7658,"src":"1038:108:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7586,"nodeType":"Block","src":"1288:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7579,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"1313:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7580,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"1317:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7582,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"1320:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7583,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"1323:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7578,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"1305:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7577,"id":7585,"nodeType":"Return","src":"1298:27:25"}]},"documentation":{"id":7569,"nodeType":"StructuredDocumentation","src":"1152:67:25","text":" @dev Returns the smallest of two signed numbers."},"id":7587,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:25","nodeType":"FunctionDefinition","parameters":{"id":7574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7571,"mutability":"mutable","name":"a","nameLocation":"1244:1:25","nodeType":"VariableDeclaration","scope":7587,"src":"1237:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7570,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7573,"mutability":"mutable","name":"b","nameLocation":"1254:1:25","nodeType":"VariableDeclaration","scope":7587,"src":"1247:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7572,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:25"},"returnParameters":{"id":7577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7587,"src":"1280:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7575,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:25"},"scope":7658,"src":"1224:108:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7630,"nodeType":"Block","src":"1537:162:25","statements":[{"assignments":[7598],"declarations":[{"constant":false,"id":7598,"mutability":"mutable","name":"x","nameLocation":"1606:1:25","nodeType":"VariableDeclaration","scope":7630,"src":"1599:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7597,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7611,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7599,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"1611:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7600,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"1615:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7602,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7603,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"1622:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7604,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"1626:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7606,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:25"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7612,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"1651:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7617,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"1671:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7615,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:25","typeDescriptions":{}}},"id":7618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7613,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:25","typeDescriptions":{}}},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7622,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"1685:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7623,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"1689:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7596,"id":7629,"nodeType":"Return","src":"1644:48:25"}]},"documentation":{"id":7588,"nodeType":"StructuredDocumentation","src":"1338:126:25","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7631,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:25","nodeType":"FunctionDefinition","parameters":{"id":7593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"mutability":"mutable","name":"a","nameLocation":"1493:1:25","nodeType":"VariableDeclaration","scope":7631,"src":"1486:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7589,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7592,"mutability":"mutable","name":"b","nameLocation":"1503:1:25","nodeType":"VariableDeclaration","scope":7631,"src":"1496:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7591,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:25"},"returnParameters":{"id":7596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7631,"src":"1529:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7594,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:25"},"scope":7658,"src":"1469:230:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7656,"nodeType":"Block","src":"1843:767:25","statements":[{"id":7655,"nodeType":"UncheckedBlock","src":"1853:751:25","statements":[{"assignments":[7640],"declarations":[{"constant":false,"id":7640,"mutability":"mutable","name":"mask","nameLocation":"2424:4:25","nodeType":"VariableDeclaration","scope":7655,"src":"2417:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7639,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7644,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7641,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7634,"src":"2431:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7647,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7634,"src":"2576:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7648,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"2580:4:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7651,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"2588:4:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:25","typeDescriptions":{}}},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7638,"id":7654,"nodeType":"Return","src":"2560:33:25"}]}]},"documentation":{"id":7632,"nodeType":"StructuredDocumentation","src":"1705:78:25","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7657,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:25","nodeType":"FunctionDefinition","parameters":{"id":7635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7634,"mutability":"mutable","name":"n","nameLocation":"1808:1:25","nodeType":"VariableDeclaration","scope":7657,"src":"1801:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7633,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:25"},"returnParameters":{"id":7638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7657,"src":"1834:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:25"},"scope":7658,"src":"1788:822:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7659,"src":"258:2354:25","usedErrors":[],"usedEvents":[]}],"src":"109:2504:25"},"id":25},"contracts/GreenHydrogenCredit.sol":{"ast":{"absolutePath":"contracts/GreenHydrogenCredit.sol","exportedSymbols":{"AccessControl":[296],"ERC20":[1056],"ERC20Burnable":[1180],"ERC20Pausable":[1214],"ERC20Permit":[1368],"GreenHydrogenCredit":[7781]},"id":7782,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7660,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"81:24:26"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":7662,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7782,"sourceUnit":297,"src":"107:79:26","symbolAliases":[{"foreign":{"id":7661,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"115:13:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":7664,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7782,"sourceUnit":1057,"src":"187:68:26","symbolAliases":[{"foreign":{"id":7663,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"195:5:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":7666,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7782,"sourceUnit":1181,"src":"256:95:26","symbolAliases":[{"foreign":{"id":7665,"name":"ERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"264:13:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","id":7668,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7782,"sourceUnit":1215,"src":"352:95:26","symbolAliases":[{"foreign":{"id":7667,"name":"ERC20Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"360:13:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":7670,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7782,"sourceUnit":1369,"src":"448:91:26","symbolAliases":[{"foreign":{"id":7669,"name":"ERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"456:11:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7672,"name":"ERC20","nameLocations":["625:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"625:5:26"},"id":7673,"nodeType":"InheritanceSpecifier","src":"625:5:26"},{"baseName":{"id":7674,"name":"ERC20Burnable","nameLocations":["632:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":1180,"src":"632:13:26"},"id":7675,"nodeType":"InheritanceSpecifier","src":"632:13:26"},{"baseName":{"id":7676,"name":"ERC20Pausable","nameLocations":["647:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"647:13:26"},"id":7677,"nodeType":"InheritanceSpecifier","src":"647:13:26"},{"baseName":{"id":7678,"name":"AccessControl","nameLocations":["662:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"662:13:26"},"id":7679,"nodeType":"InheritanceSpecifier","src":"662:13:26"},{"baseName":{"id":7680,"name":"ERC20Permit","nameLocations":["677:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":1368,"src":"677:11:26"},"id":7681,"nodeType":"InheritanceSpecifier","src":"677:11:26"}],"canonicalName":"GreenHydrogenCredit","contractDependencies":[],"contractKind":"contract","documentation":{"id":7671,"nodeType":"StructuredDocumentation","src":"541:52:26","text":"@custom:security-contact veeramehta09@gmail.com"},"fullyImplemented":true,"id":7781,"linearizedBaseContracts":[7781,1368,1528,4006,404,1430,296,4116,4128,379,1214,1688,1180,1056,446,1394,1134,1460],"name":"GreenHydrogenCredit","nameLocation":"602:19:26","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"e63ab1e9","id":7686,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"719:11:26","nodeType":"VariableDeclaration","scope":7781,"src":"695:62:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"695:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":7684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"743:13:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":7683,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"733:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"733:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"d5391393","id":7691,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"787:11:26","nodeType":"VariableDeclaration","scope":7781,"src":"763:62:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":7689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"811:13:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":7688,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"801:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"801:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":7722,"nodeType":"Block","src":"989:143:26","statements":[{"expression":{"arguments":[{"id":7708,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"1010:18:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7709,"name":"defaultAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"1030:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7707,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"999:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"999:44:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7711,"nodeType":"ExpressionStatement","src":"999:44:26"},{"expression":{"arguments":[{"id":7713,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7686,"src":"1064:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7714,"name":"pauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7695,"src":"1077:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7712,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1053:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1053:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7716,"nodeType":"ExpressionStatement","src":"1053:31:26"},{"expression":{"arguments":[{"id":7718,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"1105:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7719,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"1118:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7717,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1094:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7721,"nodeType":"ExpressionStatement","src":"1094:31:26"}]},"id":7723,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"477265656e487964726f67656e437265646974","id":7700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"912:21:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_b8c10c41fb0fa4bb077ec2f98da382c087c7c5e78109df549e7c0abf2c47c272","typeString":"literal_string \"GreenHydrogenCredit\""},"value":"GreenHydrogenCredit"},{"hexValue":"474843","id":7701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"935:5:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b163b01bd7c7164b58667f97ccd5f2d9eec241085efaf8553efc34224ff1326","typeString":"literal_string \"GHC\""},"value":"GHC"}],"id":7702,"kind":"baseConstructorSpecifier","modifierName":{"id":7699,"name":"ERC20","nameLocations":["906:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"906:5:26"},"nodeType":"ModifierInvocation","src":"906:35:26"},{"arguments":[{"hexValue":"477265656e487964726f67656e437265646974","id":7704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"962:21:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_b8c10c41fb0fa4bb077ec2f98da382c087c7c5e78109df549e7c0abf2c47c272","typeString":"literal_string \"GreenHydrogenCredit\""},"value":"GreenHydrogenCredit"}],"id":7705,"kind":"baseConstructorSpecifier","modifierName":{"id":7703,"name":"ERC20Permit","nameLocations":["950:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":1368,"src":"950:11:26"},"nodeType":"ModifierInvocation","src":"950:34:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7693,"mutability":"mutable","name":"defaultAdmin","nameLocation":"852:12:26","nodeType":"VariableDeclaration","scope":7723,"src":"844:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7692,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7695,"mutability":"mutable","name":"pauser","nameLocation":"874:6:26","nodeType":"VariableDeclaration","scope":7723,"src":"866:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7694,"name":"address","nodeType":"ElementaryTypeName","src":"866:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7697,"mutability":"mutable","name":"minter","nameLocation":"890:6:26","nodeType":"VariableDeclaration","scope":7723,"src":"882:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7696,"name":"address","nodeType":"ElementaryTypeName","src":"882:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:54:26"},"returnParameters":{"id":7706,"nodeType":"ParameterList","parameters":[],"src":"989:0:26"},"scope":7781,"src":"832:300:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7732,"nodeType":"Block","src":"1184:25:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7729,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"1194:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1194:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7731,"nodeType":"ExpressionStatement","src":"1194:8:26"}]},"functionSelector":"8456cb59","id":7733,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7726,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7686,"src":"1171:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7727,"kind":"modifierInvocation","modifierName":{"id":7725,"name":"onlyRole","nameLocations":["1162:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1162:8:26"},"nodeType":"ModifierInvocation","src":"1162:21:26"}],"name":"pause","nameLocation":"1147:5:26","nodeType":"FunctionDefinition","parameters":{"id":7724,"nodeType":"ParameterList","parameters":[],"src":"1152:2:26"},"returnParameters":{"id":7728,"nodeType":"ParameterList","parameters":[],"src":"1184:0:26"},"scope":7781,"src":"1138:71:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7742,"nodeType":"Block","src":"1263:27:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7739,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"1273:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1273:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7741,"nodeType":"ExpressionStatement","src":"1273:10:26"}]},"functionSelector":"3f4ba83a","id":7743,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7736,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7686,"src":"1250:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7737,"kind":"modifierInvocation","modifierName":{"id":7735,"name":"onlyRole","nameLocations":["1241:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1241:8:26"},"nodeType":"ModifierInvocation","src":"1241:21:26"}],"name":"unpause","nameLocation":"1224:7:26","nodeType":"FunctionDefinition","parameters":{"id":7734,"nodeType":"ParameterList","parameters":[],"src":"1231:2:26"},"returnParameters":{"id":7738,"nodeType":"ParameterList","parameters":[],"src":"1263:0:26"},"scope":7781,"src":"1215:75:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7758,"nodeType":"Block","src":"1367:34:26","statements":[{"expression":{"arguments":[{"id":7754,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"1383:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7755,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"1387:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7753,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"1377:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1377:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7757,"nodeType":"ExpressionStatement","src":"1377:17:26"}]},"functionSelector":"40c10f19","id":7759,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7750,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"1354:11:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7751,"kind":"modifierInvocation","modifierName":{"id":7749,"name":"onlyRole","nameLocations":["1345:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1345:8:26"},"nodeType":"ModifierInvocation","src":"1345:21:26"}],"name":"mint","nameLocation":"1305:4:26","nodeType":"FunctionDefinition","parameters":{"id":7748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7745,"mutability":"mutable","name":"to","nameLocation":"1318:2:26","nodeType":"VariableDeclaration","scope":7759,"src":"1310:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7744,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7747,"mutability":"mutable","name":"amount","nameLocation":"1330:6:26","nodeType":"VariableDeclaration","scope":7759,"src":"1322:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1309:28:26"},"returnParameters":{"id":7752,"nodeType":"ParameterList","parameters":[],"src":"1367:0:26"},"scope":7781,"src":"1296:105:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[863,1213],"body":{"id":7779,"nodeType":"Block","src":"1593:47:26","statements":[{"expression":{"arguments":[{"id":7774,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"1617:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7775,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"1623:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7765,"src":"1627:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7771,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1603:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_GreenHydrogenCredit_$7781_$","typeString":"type(contract super GreenHydrogenCredit)"}},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1609:7:26","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1213,"src":"1603:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1603:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7778,"nodeType":"ExpressionStatement","src":"1603:30:26"}]},"id":7780,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1484:7:26","nodeType":"FunctionDefinition","overrides":{"id":7769,"nodeType":"OverrideSpecifier","overrides":[{"id":7767,"name":"ERC20","nameLocations":["1567:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"1567:5:26"},{"id":7768,"name":"ERC20Pausable","nameLocations":["1574:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"1574:13:26"}],"src":"1558:30:26"},"parameters":{"id":7766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7761,"mutability":"mutable","name":"from","nameLocation":"1500:4:26","nodeType":"VariableDeclaration","scope":7780,"src":"1492:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7760,"name":"address","nodeType":"ElementaryTypeName","src":"1492:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7763,"mutability":"mutable","name":"to","nameLocation":"1514:2:26","nodeType":"VariableDeclaration","scope":7780,"src":"1506:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7762,"name":"address","nodeType":"ElementaryTypeName","src":"1506:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7765,"mutability":"mutable","name":"value","nameLocation":"1526:5:26","nodeType":"VariableDeclaration","scope":7780,"src":"1518:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7764,"name":"uint256","nodeType":"ElementaryTypeName","src":"1518:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1491:41:26"},"returnParameters":{"id":7770,"nodeType":"ParameterList","parameters":[],"src":"1593:0:26"},"scope":7781,"src":"1475:165:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7782,"src":"593:1049:26","usedErrors":[306,309,416,421,426,435,440,445,1245,1252,1470,1602,1605,1702,1704,3442,3447,3452],"usedEvents":[318,327,336,384,1068,1077,1594,1599]}],"src":"81:1562:26"},"id":26}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cebe40d49468f4eea75f3ed3b43bd0a1573e3acdb9858c097754b7173807b75364736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xBE BLOCKHASH 0xD4 SWAP5 PUSH9 0xF4EEA75F3ED3B43BD0 LOG1 JUMPI RETURNDATACOPY GASPRICE 0xCD 0xB9 DUP6 DUP13 MULMOD PUSH24 0x54B7173807B75364736F6C634300081B0033000000000000 ","sourceMap":"657:1315:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cebe40d49468f4eea75f3ed3b43bd0a1573e3acdb9858c097754b7173807b75364736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xBE BLOCKHASH 0xD4 SWAP5 PUSH9 0xF4EEA75F3ED3B43BD0 LOG1 JUMPI RETURNDATACOPY GASPRICE 0xCD 0xB9 DUP6 DUP13 MULMOD PUSH24 0x54B7173807B75364736F6C634300081B0033000000000000 ","sourceMap":"657:1315:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209fe03bdde9e457de1e4189de8fb4cc629579f58be192d7178e052f0a4910e28e64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xE0 EXTCODESIZE 0xDD 0xE9 0xE4 JUMPI 0xDE 0x1E COINBASE DUP10 0xDE DUP16 0xB4 0xCC PUSH3 0x9579F5 DUP12 0xE1 SWAP3 0xD7 OR DUP15 SDIV 0x2F EXP BLOBHASH LT 0xE2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1255:3046:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1255:3046:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209fe03bdde9e457de1e4189de8fb4cc629579f58be192d7178e052f0a4910e28e64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xE0 EXTCODESIZE 0xDD 0xE9 0xE4 JUMPI 0xDE 0x1E COINBASE DUP10 0xDE DUP16 0xB4 0xCC PUSH3 0x9579F5 DUP12 0xE1 SWAP3 0xD7 OR DUP15 SDIV 0x2F EXP BLOBHASH LT 0xE2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1255:3046:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220368110306dfd3194be728c797e3185da226c927b9abd70c13127604e8065fd3c64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE DUP2 LT ADDRESS PUSH14 0xFD3194BE728C797E3185DA226C92 PUSH28 0x9ABD70C13127604E8065FD3C64736F6C634300081B00330000000000 ","sourceMap":"1407:2774:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220368110306dfd3194be728c797e3185da226c927b9abd70c13127604e8065fd3c64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE DUP2 LT ADDRESS PUSH14 0xFD3194BE728C797E3185DA226C92 PUSH28 0x9ABD70C13127604E8065FD3C64736F6C634300081B00330000000000 ","sourceMap":"1407:2774:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6924cb8578af92f994c43a26745a5ffd6f645cae2d22555981e8af80b8ced8a64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 SWAP3 0x4C 0xB8 JUMPI DUP11 0xF9 0x2F SWAP10 0x4C NUMBER LOG2 PUSH8 0x45A5FFD6F645CAE2 0xD2 0x25 SSTORE SWAP9 0x1E DUP11 0xF8 SIGNEXTEND DUP13 0xED DUP11 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"297:18982:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18982:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c6924cb8578af92f994c43a26745a5ffd6f645cae2d22555981e8af80b8ced8a64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 SWAP3 0x4C 0xB8 JUMPI DUP11 0xF9 0x2F SWAP10 0x4C NUMBER LOG2 PUSH8 0x45A5FFD6F645CAE2 0xD2 0x25 SSTORE SWAP9 0x1E DUP11 0xF8 SIGNEXTEND DUP13 0xED DUP11 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"297:18982:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fa5d213308be9170a2a5c03b099eb0a230297de5999b9e398f39b758f8f9c44b64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL TSTORE 0x21 CALLER ADDMOD 0xBE SWAP2 PUSH17 0xA2A5C03B099EB0A230297DE5999B9E398F CODECOPY 0xB7 PC 0xF8 0xF9 0xC4 0x4B PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"344:7470:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fa5d213308be9170a2a5c03b099eb0a230297de5999b9e398f39b758f8f9c44b64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL TSTORE 0x21 CALLER ADDMOD 0xBE SWAP2 PUSH17 0xA2A5C03B099EB0A230297DE5999B9E398F CODECOPY 0xB7 PC 0xF8 0xF9 0xC4 0x4B PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"344:7470:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c3bfe21f830dbf0efa84c440035520d935c667429cbc87c04ae86db7e0d04f664736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x3BFE21F830DBF0EFA84C440035520D935C667429CBC87C04AE86DB7E0D DIV 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"521:3729:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3729:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c3bfe21f830dbf0efa84c440035520d935c667429cbc87c04ae86db7e0d04f664736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x3BFE21F830DBF0EFA84C440035520D935C667429CBC87C04AE86DB7E0D DIV 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"521:3729:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e4a9e200f58e462698b794f3c614815691b6fe64de894b7ac9135e20f137282064736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xA9 0xE2 STOP CREATE2 DUP15 CHAINID 0x26 SWAP9 0xB7 SWAP5 RETURN 0xC6 EQ DUP2 JUMP SWAP2 0xB6 INVALID PUSH5 0xDE894B7AC9 SGT MCOPY KECCAK256 CALL CALLDATACOPY 0x28 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"281:31863:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e4a9e200f58e462698b794f3c614815691b6fe64de894b7ac9135e20f137282064736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xA9 0xE2 STOP CREATE2 DUP15 CHAINID 0x26 SWAP9 0xB7 SWAP5 RETURN 0xC6 EQ DUP2 JUMP SWAP2 0xB6 INVALID PUSH5 0xDE894B7AC9 SGT MCOPY KECCAK256 CALL CALLDATACOPY 0x28 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"281:31863:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cb9a6abeec825f6bbc58223d0da4f96cdc91cab8b22351cb03cad252044b50f64736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xB9 0xA6 0xAB 0xEE 0xC8 0x25 0xF6 0xBB 0xC5 DUP3 0x23 0xD0 0xDA 0x4F SWAP7 0xCD 0xC9 SHR 0xAB DUP12 0x22 CALLDATALOAD SHR 0xB0 EXTCODECOPY 0xAD 0x25 KECCAK256 PREVRANDAO 0xB5 0xF PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209cb9a6abeec825f6bbc58223d0da4f96cdc91cab8b22351cb03cad252044b50f64736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xB9 0xA6 0xAB 0xEE 0xC8 0x25 0xF6 0xBB 0xC5 DUP3 0x23 0xD0 0xDA 0x4F SWAP7 0xCD 0xC9 SHR 0xAB DUP12 0x22 CALLDATALOAD SHR 0xB0 EXTCODECOPY 0xAD 0x25 KECCAK256 PREVRANDAO 0xB5 0xF PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220952ef2c9829c2ccbd088b94ccd73a4e7b142eb2845f109198feb363ea8df4f5564736f6c634300081b0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0x2E CALLCODE 0xC9 DUP3 SWAP13 0x2C 0xCB 0xD0 DUP9 0xB9 0x4C 0xCD PUSH20 0xA4E7B142EB2845F109198FEB363EA8DF4F556473 PUSH16 0x6C634300081B00330000000000000000 ","sourceMap":"258:2354:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220952ef2c9829c2ccbd088b94ccd73a4e7b142eb2845f109198feb363ea8df4f5564736f6c634300081b0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0x2E CALLCODE 0xC9 DUP3 SWAP13 0x2C 0xCB 0xD0 DUP9 0xB9 0x4C 0xCD PUSH20 0xA4E7B142EB2845F109198FEB363EA8DF4F556473 PUSH16 0x6C634300081B00330000000000000000 ","sourceMap":"258:2354:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/GreenHydrogenCredit.sol":{"GreenHydrogenCredit":{"abi":[{"inputs":[{"internalType":"address","name":"defaultAdmin","type":"address"},{"internalType":"address","name":"pauser","type":"address"},{"internalType":"address","name":"minter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1263":{"entryPoint":null,"id":1263,"parameterSlots":1,"returnSlots":0},"@_3876":{"entryPoint":null,"id":3876,"parameterSlots":2,"returnSlots":0},"@_593":{"entryPoint":null,"id":593,"parameterSlots":2,"returnSlots":0},"@_7723":{"entryPoint":null,"id":7723,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3923":{"entryPoint":null,"id":3923,"parameterSlots":0,"returnSlots":1},"@_grantRole_257":{"entryPoint":558,"id":257,"parameterSlots":2,"returnSlots":1},"@_msgSender_1442":{"entryPoint":null,"id":1442,"parameterSlots":0,"returnSlots":1},"@getStringSlot_2006":{"entryPoint":null,"id":2006,"parameterSlots":1,"returnSlots":1},"@hasRole_81":{"entryPoint":null,"id":81,"parameterSlots":2,"returnSlots":1},"@toShortStringWithFallback_1846":{"entryPoint":507,"id":1846,"parameterSlots":2,"returnSlots":1},"@toShortString_1748":{"entryPoint":732,"id":1748,"parameterSlots":1,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":803,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":831,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1247,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":978,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1325,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1057,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":920,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":898,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:4545:27","nodeType":"YulBlock","src":"0:4545:27","statements":[{"nativeSrc":"6:3:27","nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nativeSrc":"74:117:27","nodeType":"YulBlock","src":"74:117:27","statements":[{"nativeSrc":"84:22:27","nodeType":"YulAssignment","src":"84:22:27","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:27","nodeType":"YulIdentifier","src":"99:6:27"}],"functionName":{"name":"mload","nativeSrc":"93:5:27","nodeType":"YulIdentifier","src":"93:5:27"},"nativeSrc":"93:13:27","nodeType":"YulFunctionCall","src":"93:13:27"},"variableNames":[{"name":"value","nativeSrc":"84:5:27","nodeType":"YulIdentifier","src":"84:5:27"}]},{"body":{"nativeSrc":"169:16:27","nodeType":"YulBlock","src":"169:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:27","nodeType":"YulLiteral","src":"178:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:27","nodeType":"YulLiteral","src":"181:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:27","nodeType":"YulIdentifier","src":"171:6:27"},"nativeSrc":"171:12:27","nodeType":"YulFunctionCall","src":"171:12:27"},"nativeSrc":"171:12:27","nodeType":"YulExpressionStatement","src":"171:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:27","nodeType":"YulIdentifier","src":"128:5:27"},{"arguments":[{"name":"value","nativeSrc":"139:5:27","nodeType":"YulIdentifier","src":"139:5:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:27","nodeType":"YulLiteral","src":"154:3:27","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:27","nodeType":"YulLiteral","src":"159:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:27","nodeType":"YulIdentifier","src":"150:3:27"},"nativeSrc":"150:11:27","nodeType":"YulFunctionCall","src":"150:11:27"},{"kind":"number","nativeSrc":"163:1:27","nodeType":"YulLiteral","src":"163:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:27","nodeType":"YulIdentifier","src":"146:3:27"},"nativeSrc":"146:19:27","nodeType":"YulFunctionCall","src":"146:19:27"}],"functionName":{"name":"and","nativeSrc":"135:3:27","nodeType":"YulIdentifier","src":"135:3:27"},"nativeSrc":"135:31:27","nodeType":"YulFunctionCall","src":"135:31:27"}],"functionName":{"name":"eq","nativeSrc":"125:2:27","nodeType":"YulIdentifier","src":"125:2:27"},"nativeSrc":"125:42:27","nodeType":"YulFunctionCall","src":"125:42:27"}],"functionName":{"name":"iszero","nativeSrc":"118:6:27","nodeType":"YulIdentifier","src":"118:6:27"},"nativeSrc":"118:50:27","nodeType":"YulFunctionCall","src":"118:50:27"},"nativeSrc":"115:70:27","nodeType":"YulIf","src":"115:70:27"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:27","nodeType":"YulTypedName","src":"53:6:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:27","nodeType":"YulTypedName","src":"64:5:27","type":""}],"src":"14:177:27"},{"body":{"nativeSrc":"311:263:27","nodeType":"YulBlock","src":"311:263:27","statements":[{"body":{"nativeSrc":"357:16:27","nodeType":"YulBlock","src":"357:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"366:1:27","nodeType":"YulLiteral","src":"366:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"369:1:27","nodeType":"YulLiteral","src":"369:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"359:6:27","nodeType":"YulIdentifier","src":"359:6:27"},"nativeSrc":"359:12:27","nodeType":"YulFunctionCall","src":"359:12:27"},"nativeSrc":"359:12:27","nodeType":"YulExpressionStatement","src":"359:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"332:7:27","nodeType":"YulIdentifier","src":"332:7:27"},{"name":"headStart","nativeSrc":"341:9:27","nodeType":"YulIdentifier","src":"341:9:27"}],"functionName":{"name":"sub","nativeSrc":"328:3:27","nodeType":"YulIdentifier","src":"328:3:27"},"nativeSrc":"328:23:27","nodeType":"YulFunctionCall","src":"328:23:27"},{"kind":"number","nativeSrc":"353:2:27","nodeType":"YulLiteral","src":"353:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"324:3:27","nodeType":"YulIdentifier","src":"324:3:27"},"nativeSrc":"324:32:27","nodeType":"YulFunctionCall","src":"324:32:27"},"nativeSrc":"321:52:27","nodeType":"YulIf","src":"321:52:27"},{"nativeSrc":"382:50:27","nodeType":"YulAssignment","src":"382:50:27","value":{"arguments":[{"name":"headStart","nativeSrc":"422:9:27","nodeType":"YulIdentifier","src":"422:9:27"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"392:29:27","nodeType":"YulIdentifier","src":"392:29:27"},"nativeSrc":"392:40:27","nodeType":"YulFunctionCall","src":"392:40:27"},"variableNames":[{"name":"value0","nativeSrc":"382:6:27","nodeType":"YulIdentifier","src":"382:6:27"}]},{"nativeSrc":"441:59:27","nodeType":"YulAssignment","src":"441:59:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"485:9:27","nodeType":"YulIdentifier","src":"485:9:27"},{"kind":"number","nativeSrc":"496:2:27","nodeType":"YulLiteral","src":"496:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:27","nodeType":"YulIdentifier","src":"481:3:27"},"nativeSrc":"481:18:27","nodeType":"YulFunctionCall","src":"481:18:27"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"451:29:27","nodeType":"YulIdentifier","src":"451:29:27"},"nativeSrc":"451:49:27","nodeType":"YulFunctionCall","src":"451:49:27"},"variableNames":[{"name":"value1","nativeSrc":"441:6:27","nodeType":"YulIdentifier","src":"441:6:27"}]},{"nativeSrc":"509:59:27","nodeType":"YulAssignment","src":"509:59:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"553:9:27","nodeType":"YulIdentifier","src":"553:9:27"},{"kind":"number","nativeSrc":"564:2:27","nodeType":"YulLiteral","src":"564:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"549:3:27","nodeType":"YulIdentifier","src":"549:3:27"},"nativeSrc":"549:18:27","nodeType":"YulFunctionCall","src":"549:18:27"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"519:29:27","nodeType":"YulIdentifier","src":"519:29:27"},"nativeSrc":"519:49:27","nodeType":"YulFunctionCall","src":"519:49:27"},"variableNames":[{"name":"value2","nativeSrc":"509:6:27","nodeType":"YulIdentifier","src":"509:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nativeSrc":"196:378:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"261:9:27","nodeType":"YulTypedName","src":"261:9:27","type":""},{"name":"dataEnd","nativeSrc":"272:7:27","nodeType":"YulTypedName","src":"272:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"284:6:27","nodeType":"YulTypedName","src":"284:6:27","type":""},{"name":"value1","nativeSrc":"292:6:27","nodeType":"YulTypedName","src":"292:6:27","type":""},{"name":"value2","nativeSrc":"300:6:27","nodeType":"YulTypedName","src":"300:6:27","type":""}],"src":"196:378:27"},{"body":{"nativeSrc":"611:95:27","nodeType":"YulBlock","src":"611:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"628:1:27","nodeType":"YulLiteral","src":"628:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"635:3:27","nodeType":"YulLiteral","src":"635:3:27","type":"","value":"224"},{"kind":"number","nativeSrc":"640:10:27","nodeType":"YulLiteral","src":"640:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"631:3:27","nodeType":"YulIdentifier","src":"631:3:27"},"nativeSrc":"631:20:27","nodeType":"YulFunctionCall","src":"631:20:27"}],"functionName":{"name":"mstore","nativeSrc":"621:6:27","nodeType":"YulIdentifier","src":"621:6:27"},"nativeSrc":"621:31:27","nodeType":"YulFunctionCall","src":"621:31:27"},"nativeSrc":"621:31:27","nodeType":"YulExpressionStatement","src":"621:31:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"668:1:27","nodeType":"YulLiteral","src":"668:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"671:4:27","nodeType":"YulLiteral","src":"671:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"661:6:27","nodeType":"YulIdentifier","src":"661:6:27"},"nativeSrc":"661:15:27","nodeType":"YulFunctionCall","src":"661:15:27"},"nativeSrc":"661:15:27","nodeType":"YulExpressionStatement","src":"661:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"692:1:27","nodeType":"YulLiteral","src":"692:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"695:4:27","nodeType":"YulLiteral","src":"695:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"685:6:27","nodeType":"YulIdentifier","src":"685:6:27"},"nativeSrc":"685:15:27","nodeType":"YulFunctionCall","src":"685:15:27"},"nativeSrc":"685:15:27","nodeType":"YulExpressionStatement","src":"685:15:27"}]},"name":"panic_error_0x41","nativeSrc":"579:127:27","nodeType":"YulFunctionDefinition","src":"579:127:27"},{"body":{"nativeSrc":"766:325:27","nodeType":"YulBlock","src":"766:325:27","statements":[{"nativeSrc":"776:22:27","nodeType":"YulAssignment","src":"776:22:27","value":{"arguments":[{"kind":"number","nativeSrc":"790:1:27","nodeType":"YulLiteral","src":"790:1:27","type":"","value":"1"},{"name":"data","nativeSrc":"793:4:27","nodeType":"YulIdentifier","src":"793:4:27"}],"functionName":{"name":"shr","nativeSrc":"786:3:27","nodeType":"YulIdentifier","src":"786:3:27"},"nativeSrc":"786:12:27","nodeType":"YulFunctionCall","src":"786:12:27"},"variableNames":[{"name":"length","nativeSrc":"776:6:27","nodeType":"YulIdentifier","src":"776:6:27"}]},{"nativeSrc":"807:38:27","nodeType":"YulVariableDeclaration","src":"807:38:27","value":{"arguments":[{"name":"data","nativeSrc":"837:4:27","nodeType":"YulIdentifier","src":"837:4:27"},{"kind":"number","nativeSrc":"843:1:27","nodeType":"YulLiteral","src":"843:1:27","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"833:3:27","nodeType":"YulIdentifier","src":"833:3:27"},"nativeSrc":"833:12:27","nodeType":"YulFunctionCall","src":"833:12:27"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"811:18:27","nodeType":"YulTypedName","src":"811:18:27","type":""}]},{"body":{"nativeSrc":"884:31:27","nodeType":"YulBlock","src":"884:31:27","statements":[{"nativeSrc":"886:27:27","nodeType":"YulAssignment","src":"886:27:27","value":{"arguments":[{"name":"length","nativeSrc":"900:6:27","nodeType":"YulIdentifier","src":"900:6:27"},{"kind":"number","nativeSrc":"908:4:27","nodeType":"YulLiteral","src":"908:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"896:3:27","nodeType":"YulIdentifier","src":"896:3:27"},"nativeSrc":"896:17:27","nodeType":"YulFunctionCall","src":"896:17:27"},"variableNames":[{"name":"length","nativeSrc":"886:6:27","nodeType":"YulIdentifier","src":"886:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"864:18:27","nodeType":"YulIdentifier","src":"864:18:27"}],"functionName":{"name":"iszero","nativeSrc":"857:6:27","nodeType":"YulIdentifier","src":"857:6:27"},"nativeSrc":"857:26:27","nodeType":"YulFunctionCall","src":"857:26:27"},"nativeSrc":"854:61:27","nodeType":"YulIf","src":"854:61:27"},{"body":{"nativeSrc":"974:111:27","nodeType":"YulBlock","src":"974:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"995:1:27","nodeType":"YulLiteral","src":"995:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1002:3:27","nodeType":"YulLiteral","src":"1002:3:27","type":"","value":"224"},{"kind":"number","nativeSrc":"1007:10:27","nodeType":"YulLiteral","src":"1007:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"998:3:27","nodeType":"YulIdentifier","src":"998:3:27"},"nativeSrc":"998:20:27","nodeType":"YulFunctionCall","src":"998:20:27"}],"functionName":{"name":"mstore","nativeSrc":"988:6:27","nodeType":"YulIdentifier","src":"988:6:27"},"nativeSrc":"988:31:27","nodeType":"YulFunctionCall","src":"988:31:27"},"nativeSrc":"988:31:27","nodeType":"YulExpressionStatement","src":"988:31:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1039:1:27","nodeType":"YulLiteral","src":"1039:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"1042:4:27","nodeType":"YulLiteral","src":"1042:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1032:6:27","nodeType":"YulIdentifier","src":"1032:6:27"},"nativeSrc":"1032:15:27","nodeType":"YulFunctionCall","src":"1032:15:27"},"nativeSrc":"1032:15:27","nodeType":"YulExpressionStatement","src":"1032:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1067:1:27","nodeType":"YulLiteral","src":"1067:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1070:4:27","nodeType":"YulLiteral","src":"1070:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1060:6:27","nodeType":"YulIdentifier","src":"1060:6:27"},"nativeSrc":"1060:15:27","nodeType":"YulFunctionCall","src":"1060:15:27"},"nativeSrc":"1060:15:27","nodeType":"YulExpressionStatement","src":"1060:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"930:18:27","nodeType":"YulIdentifier","src":"930:18:27"},{"arguments":[{"name":"length","nativeSrc":"953:6:27","nodeType":"YulIdentifier","src":"953:6:27"},{"kind":"number","nativeSrc":"961:2:27","nodeType":"YulLiteral","src":"961:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"950:2:27","nodeType":"YulIdentifier","src":"950:2:27"},"nativeSrc":"950:14:27","nodeType":"YulFunctionCall","src":"950:14:27"}],"functionName":{"name":"eq","nativeSrc":"927:2:27","nodeType":"YulIdentifier","src":"927:2:27"},"nativeSrc":"927:38:27","nodeType":"YulFunctionCall","src":"927:38:27"},"nativeSrc":"924:161:27","nodeType":"YulIf","src":"924:161:27"}]},"name":"extract_byte_array_length","nativeSrc":"711:380:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"746:4:27","nodeType":"YulTypedName","src":"746:4:27","type":""}],"returnVariables":[{"name":"length","nativeSrc":"755:6:27","nodeType":"YulTypedName","src":"755:6:27","type":""}],"src":"711:380:27"},{"body":{"nativeSrc":"1152:65:27","nodeType":"YulBlock","src":"1152:65:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1169:1:27","nodeType":"YulLiteral","src":"1169:1:27","type":"","value":"0"},{"name":"ptr","nativeSrc":"1172:3:27","nodeType":"YulIdentifier","src":"1172:3:27"}],"functionName":{"name":"mstore","nativeSrc":"1162:6:27","nodeType":"YulIdentifier","src":"1162:6:27"},"nativeSrc":"1162:14:27","nodeType":"YulFunctionCall","src":"1162:14:27"},"nativeSrc":"1162:14:27","nodeType":"YulExpressionStatement","src":"1162:14:27"},{"nativeSrc":"1185:26:27","nodeType":"YulAssignment","src":"1185:26:27","value":{"arguments":[{"kind":"number","nativeSrc":"1203:1:27","nodeType":"YulLiteral","src":"1203:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1206:4:27","nodeType":"YulLiteral","src":"1206:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1193:9:27","nodeType":"YulIdentifier","src":"1193:9:27"},"nativeSrc":"1193:18:27","nodeType":"YulFunctionCall","src":"1193:18:27"},"variableNames":[{"name":"data","nativeSrc":"1185:4:27","nodeType":"YulIdentifier","src":"1185:4:27"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"1096:121:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"1135:3:27","nodeType":"YulTypedName","src":"1135:3:27","type":""}],"returnVariables":[{"name":"data","nativeSrc":"1143:4:27","nodeType":"YulTypedName","src":"1143:4:27","type":""}],"src":"1096:121:27"},{"body":{"nativeSrc":"1303:437:27","nodeType":"YulBlock","src":"1303:437:27","statements":[{"body":{"nativeSrc":"1336:398:27","nodeType":"YulBlock","src":"1336:398:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1357:1:27","nodeType":"YulLiteral","src":"1357:1:27","type":"","value":"0"},{"name":"array","nativeSrc":"1360:5:27","nodeType":"YulIdentifier","src":"1360:5:27"}],"functionName":{"name":"mstore","nativeSrc":"1350:6:27","nodeType":"YulIdentifier","src":"1350:6:27"},"nativeSrc":"1350:16:27","nodeType":"YulFunctionCall","src":"1350:16:27"},"nativeSrc":"1350:16:27","nodeType":"YulExpressionStatement","src":"1350:16:27"},{"nativeSrc":"1379:30:27","nodeType":"YulVariableDeclaration","src":"1379:30:27","value":{"arguments":[{"kind":"number","nativeSrc":"1401:1:27","nodeType":"YulLiteral","src":"1401:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1404:4:27","nodeType":"YulLiteral","src":"1404:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1391:9:27","nodeType":"YulIdentifier","src":"1391:9:27"},"nativeSrc":"1391:18:27","nodeType":"YulFunctionCall","src":"1391:18:27"},"variables":[{"name":"data","nativeSrc":"1383:4:27","nodeType":"YulTypedName","src":"1383:4:27","type":""}]},{"nativeSrc":"1422:57:27","nodeType":"YulVariableDeclaration","src":"1422:57:27","value":{"arguments":[{"name":"data","nativeSrc":"1445:4:27","nodeType":"YulIdentifier","src":"1445:4:27"},{"arguments":[{"kind":"number","nativeSrc":"1455:1:27","nodeType":"YulLiteral","src":"1455:1:27","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"1462:10:27","nodeType":"YulIdentifier","src":"1462:10:27"},{"kind":"number","nativeSrc":"1474:2:27","nodeType":"YulLiteral","src":"1474:2:27","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1458:3:27","nodeType":"YulIdentifier","src":"1458:3:27"},"nativeSrc":"1458:19:27","nodeType":"YulFunctionCall","src":"1458:19:27"}],"functionName":{"name":"shr","nativeSrc":"1451:3:27","nodeType":"YulIdentifier","src":"1451:3:27"},"nativeSrc":"1451:27:27","nodeType":"YulFunctionCall","src":"1451:27:27"}],"functionName":{"name":"add","nativeSrc":"1441:3:27","nodeType":"YulIdentifier","src":"1441:3:27"},"nativeSrc":"1441:38:27","nodeType":"YulFunctionCall","src":"1441:38:27"},"variables":[{"name":"deleteStart","nativeSrc":"1426:11:27","nodeType":"YulTypedName","src":"1426:11:27","type":""}]},{"body":{"nativeSrc":"1516:23:27","nodeType":"YulBlock","src":"1516:23:27","statements":[{"nativeSrc":"1518:19:27","nodeType":"YulAssignment","src":"1518:19:27","value":{"name":"data","nativeSrc":"1533:4:27","nodeType":"YulIdentifier","src":"1533:4:27"},"variableNames":[{"name":"deleteStart","nativeSrc":"1518:11:27","nodeType":"YulIdentifier","src":"1518:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"1498:10:27","nodeType":"YulIdentifier","src":"1498:10:27"},{"kind":"number","nativeSrc":"1510:4:27","nodeType":"YulLiteral","src":"1510:4:27","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"1495:2:27","nodeType":"YulIdentifier","src":"1495:2:27"},"nativeSrc":"1495:20:27","nodeType":"YulFunctionCall","src":"1495:20:27"},"nativeSrc":"1492:47:27","nodeType":"YulIf","src":"1492:47:27"},{"nativeSrc":"1552:41:27","nodeType":"YulVariableDeclaration","src":"1552:41:27","value":{"arguments":[{"name":"data","nativeSrc":"1566:4:27","nodeType":"YulIdentifier","src":"1566:4:27"},{"arguments":[{"kind":"number","nativeSrc":"1576:1:27","nodeType":"YulLiteral","src":"1576:1:27","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1583:3:27","nodeType":"YulIdentifier","src":"1583:3:27"},{"kind":"number","nativeSrc":"1588:2:27","nodeType":"YulLiteral","src":"1588:2:27","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1579:3:27","nodeType":"YulIdentifier","src":"1579:3:27"},"nativeSrc":"1579:12:27","nodeType":"YulFunctionCall","src":"1579:12:27"}],"functionName":{"name":"shr","nativeSrc":"1572:3:27","nodeType":"YulIdentifier","src":"1572:3:27"},"nativeSrc":"1572:20:27","nodeType":"YulFunctionCall","src":"1572:20:27"}],"functionName":{"name":"add","nativeSrc":"1562:3:27","nodeType":"YulIdentifier","src":"1562:3:27"},"nativeSrc":"1562:31:27","nodeType":"YulFunctionCall","src":"1562:31:27"},"variables":[{"name":"_1","nativeSrc":"1556:2:27","nodeType":"YulTypedName","src":"1556:2:27","type":""}]},{"nativeSrc":"1606:24:27","nodeType":"YulVariableDeclaration","src":"1606:24:27","value":{"name":"deleteStart","nativeSrc":"1619:11:27","nodeType":"YulIdentifier","src":"1619:11:27"},"variables":[{"name":"start","nativeSrc":"1610:5:27","nodeType":"YulTypedName","src":"1610:5:27","type":""}]},{"body":{"nativeSrc":"1704:20:27","nodeType":"YulBlock","src":"1704:20:27","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1713:5:27","nodeType":"YulIdentifier","src":"1713:5:27"},{"kind":"number","nativeSrc":"1720:1:27","nodeType":"YulLiteral","src":"1720:1:27","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"1706:6:27","nodeType":"YulIdentifier","src":"1706:6:27"},"nativeSrc":"1706:16:27","nodeType":"YulFunctionCall","src":"1706:16:27"},"nativeSrc":"1706:16:27","nodeType":"YulExpressionStatement","src":"1706:16:27"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1654:5:27","nodeType":"YulIdentifier","src":"1654:5:27"},{"name":"_1","nativeSrc":"1661:2:27","nodeType":"YulIdentifier","src":"1661:2:27"}],"functionName":{"name":"lt","nativeSrc":"1651:2:27","nodeType":"YulIdentifier","src":"1651:2:27"},"nativeSrc":"1651:13:27","nodeType":"YulFunctionCall","src":"1651:13:27"},"nativeSrc":"1643:81:27","nodeType":"YulForLoop","post":{"nativeSrc":"1665:26:27","nodeType":"YulBlock","src":"1665:26:27","statements":[{"nativeSrc":"1667:22:27","nodeType":"YulAssignment","src":"1667:22:27","value":{"arguments":[{"name":"start","nativeSrc":"1680:5:27","nodeType":"YulIdentifier","src":"1680:5:27"},{"kind":"number","nativeSrc":"1687:1:27","nodeType":"YulLiteral","src":"1687:1:27","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1676:3:27","nodeType":"YulIdentifier","src":"1676:3:27"},"nativeSrc":"1676:13:27","nodeType":"YulFunctionCall","src":"1676:13:27"},"variableNames":[{"name":"start","nativeSrc":"1667:5:27","nodeType":"YulIdentifier","src":"1667:5:27"}]}]},"pre":{"nativeSrc":"1647:3:27","nodeType":"YulBlock","src":"1647:3:27","statements":[]},"src":"1643:81:27"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"1319:3:27","nodeType":"YulIdentifier","src":"1319:3:27"},{"kind":"number","nativeSrc":"1324:2:27","nodeType":"YulLiteral","src":"1324:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1316:2:27","nodeType":"YulIdentifier","src":"1316:2:27"},"nativeSrc":"1316:11:27","nodeType":"YulFunctionCall","src":"1316:11:27"},"nativeSrc":"1313:421:27","nodeType":"YulIf","src":"1313:421:27"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1222:518:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"1275:5:27","nodeType":"YulTypedName","src":"1275:5:27","type":""},{"name":"len","nativeSrc":"1282:3:27","nodeType":"YulTypedName","src":"1282:3:27","type":""},{"name":"startIndex","nativeSrc":"1287:10:27","nodeType":"YulTypedName","src":"1287:10:27","type":""}],"src":"1222:518:27"},{"body":{"nativeSrc":"1830:81:27","nodeType":"YulBlock","src":"1830:81:27","statements":[{"nativeSrc":"1840:65:27","nodeType":"YulAssignment","src":"1840:65:27","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1855:4:27","nodeType":"YulIdentifier","src":"1855:4:27"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1873:1:27","nodeType":"YulLiteral","src":"1873:1:27","type":"","value":"3"},{"name":"len","nativeSrc":"1876:3:27","nodeType":"YulIdentifier","src":"1876:3:27"}],"functionName":{"name":"shl","nativeSrc":"1869:3:27","nodeType":"YulIdentifier","src":"1869:3:27"},"nativeSrc":"1869:11:27","nodeType":"YulFunctionCall","src":"1869:11:27"},{"arguments":[{"kind":"number","nativeSrc":"1886:1:27","nodeType":"YulLiteral","src":"1886:1:27","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1882:3:27","nodeType":"YulIdentifier","src":"1882:3:27"},"nativeSrc":"1882:6:27","nodeType":"YulFunctionCall","src":"1882:6:27"}],"functionName":{"name":"shr","nativeSrc":"1865:3:27","nodeType":"YulIdentifier","src":"1865:3:27"},"nativeSrc":"1865:24:27","nodeType":"YulFunctionCall","src":"1865:24:27"}],"functionName":{"name":"not","nativeSrc":"1861:3:27","nodeType":"YulIdentifier","src":"1861:3:27"},"nativeSrc":"1861:29:27","nodeType":"YulFunctionCall","src":"1861:29:27"}],"functionName":{"name":"and","nativeSrc":"1851:3:27","nodeType":"YulIdentifier","src":"1851:3:27"},"nativeSrc":"1851:40:27","nodeType":"YulFunctionCall","src":"1851:40:27"},{"arguments":[{"kind":"number","nativeSrc":"1897:1:27","nodeType":"YulLiteral","src":"1897:1:27","type":"","value":"1"},{"name":"len","nativeSrc":"1900:3:27","nodeType":"YulIdentifier","src":"1900:3:27"}],"functionName":{"name":"shl","nativeSrc":"1893:3:27","nodeType":"YulIdentifier","src":"1893:3:27"},"nativeSrc":"1893:11:27","nodeType":"YulFunctionCall","src":"1893:11:27"}],"functionName":{"name":"or","nativeSrc":"1848:2:27","nodeType":"YulIdentifier","src":"1848:2:27"},"nativeSrc":"1848:57:27","nodeType":"YulFunctionCall","src":"1848:57:27"},"variableNames":[{"name":"used","nativeSrc":"1840:4:27","nodeType":"YulIdentifier","src":"1840:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1745:166:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1807:4:27","nodeType":"YulTypedName","src":"1807:4:27","type":""},{"name":"len","nativeSrc":"1813:3:27","nodeType":"YulTypedName","src":"1813:3:27","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1821:4:27","nodeType":"YulTypedName","src":"1821:4:27","type":""}],"src":"1745:166:27"},{"body":{"nativeSrc":"2012:1203:27","nodeType":"YulBlock","src":"2012:1203:27","statements":[{"nativeSrc":"2022:24:27","nodeType":"YulVariableDeclaration","src":"2022:24:27","value":{"arguments":[{"name":"src","nativeSrc":"2042:3:27","nodeType":"YulIdentifier","src":"2042:3:27"}],"functionName":{"name":"mload","nativeSrc":"2036:5:27","nodeType":"YulIdentifier","src":"2036:5:27"},"nativeSrc":"2036:10:27","nodeType":"YulFunctionCall","src":"2036:10:27"},"variables":[{"name":"newLen","nativeSrc":"2026:6:27","nodeType":"YulTypedName","src":"2026:6:27","type":""}]},{"body":{"nativeSrc":"2089:22:27","nodeType":"YulBlock","src":"2089:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2091:16:27","nodeType":"YulIdentifier","src":"2091:16:27"},"nativeSrc":"2091:18:27","nodeType":"YulFunctionCall","src":"2091:18:27"},"nativeSrc":"2091:18:27","nodeType":"YulExpressionStatement","src":"2091:18:27"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"2061:6:27","nodeType":"YulIdentifier","src":"2061:6:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2077:2:27","nodeType":"YulLiteral","src":"2077:2:27","type":"","value":"64"},{"kind":"number","nativeSrc":"2081:1:27","nodeType":"YulLiteral","src":"2081:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2073:3:27","nodeType":"YulIdentifier","src":"2073:3:27"},"nativeSrc":"2073:10:27","nodeType":"YulFunctionCall","src":"2073:10:27"},{"kind":"number","nativeSrc":"2085:1:27","nodeType":"YulLiteral","src":"2085:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2069:3:27","nodeType":"YulIdentifier","src":"2069:3:27"},"nativeSrc":"2069:18:27","nodeType":"YulFunctionCall","src":"2069:18:27"}],"functionName":{"name":"gt","nativeSrc":"2058:2:27","nodeType":"YulIdentifier","src":"2058:2:27"},"nativeSrc":"2058:30:27","nodeType":"YulFunctionCall","src":"2058:30:27"},"nativeSrc":"2055:56:27","nodeType":"YulIf","src":"2055:56:27"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2164:4:27","nodeType":"YulIdentifier","src":"2164:4:27"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2202:4:27","nodeType":"YulIdentifier","src":"2202:4:27"}],"functionName":{"name":"sload","nativeSrc":"2196:5:27","nodeType":"YulIdentifier","src":"2196:5:27"},"nativeSrc":"2196:11:27","nodeType":"YulFunctionCall","src":"2196:11:27"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"2170:25:27","nodeType":"YulIdentifier","src":"2170:25:27"},"nativeSrc":"2170:38:27","nodeType":"YulFunctionCall","src":"2170:38:27"},{"name":"newLen","nativeSrc":"2210:6:27","nodeType":"YulIdentifier","src":"2210:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"2120:43:27","nodeType":"YulIdentifier","src":"2120:43:27"},"nativeSrc":"2120:97:27","nodeType":"YulFunctionCall","src":"2120:97:27"},"nativeSrc":"2120:97:27","nodeType":"YulExpressionStatement","src":"2120:97:27"},{"nativeSrc":"2226:18:27","nodeType":"YulVariableDeclaration","src":"2226:18:27","value":{"kind":"number","nativeSrc":"2243:1:27","nodeType":"YulLiteral","src":"2243:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"2230:9:27","nodeType":"YulTypedName","src":"2230:9:27","type":""}]},{"nativeSrc":"2253:17:27","nodeType":"YulAssignment","src":"2253:17:27","value":{"kind":"number","nativeSrc":"2266:4:27","nodeType":"YulLiteral","src":"2266:4:27","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"2253:9:27","nodeType":"YulIdentifier","src":"2253:9:27"}]},{"cases":[{"body":{"nativeSrc":"2316:642:27","nodeType":"YulBlock","src":"2316:642:27","statements":[{"nativeSrc":"2330:35:27","nodeType":"YulVariableDeclaration","src":"2330:35:27","value":{"arguments":[{"name":"newLen","nativeSrc":"2349:6:27","nodeType":"YulIdentifier","src":"2349:6:27"},{"arguments":[{"kind":"number","nativeSrc":"2361:2:27","nodeType":"YulLiteral","src":"2361:2:27","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2357:3:27","nodeType":"YulIdentifier","src":"2357:3:27"},"nativeSrc":"2357:7:27","nodeType":"YulFunctionCall","src":"2357:7:27"}],"functionName":{"name":"and","nativeSrc":"2345:3:27","nodeType":"YulIdentifier","src":"2345:3:27"},"nativeSrc":"2345:20:27","nodeType":"YulFunctionCall","src":"2345:20:27"},"variables":[{"name":"loopEnd","nativeSrc":"2334:7:27","nodeType":"YulTypedName","src":"2334:7:27","type":""}]},{"nativeSrc":"2378:49:27","nodeType":"YulVariableDeclaration","src":"2378:49:27","value":{"arguments":[{"name":"slot","nativeSrc":"2422:4:27","nodeType":"YulIdentifier","src":"2422:4:27"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"2392:29:27","nodeType":"YulIdentifier","src":"2392:29:27"},"nativeSrc":"2392:35:27","nodeType":"YulFunctionCall","src":"2392:35:27"},"variables":[{"name":"dstPtr","nativeSrc":"2382:6:27","nodeType":"YulTypedName","src":"2382:6:27","type":""}]},{"nativeSrc":"2440:10:27","nodeType":"YulVariableDeclaration","src":"2440:10:27","value":{"kind":"number","nativeSrc":"2449:1:27","nodeType":"YulLiteral","src":"2449:1:27","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2444:1:27","nodeType":"YulTypedName","src":"2444:1:27","type":""}]},{"body":{"nativeSrc":"2520:165:27","nodeType":"YulBlock","src":"2520:165:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2545:6:27","nodeType":"YulIdentifier","src":"2545:6:27"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2563:3:27","nodeType":"YulIdentifier","src":"2563:3:27"},{"name":"srcOffset","nativeSrc":"2568:9:27","nodeType":"YulIdentifier","src":"2568:9:27"}],"functionName":{"name":"add","nativeSrc":"2559:3:27","nodeType":"YulIdentifier","src":"2559:3:27"},"nativeSrc":"2559:19:27","nodeType":"YulFunctionCall","src":"2559:19:27"}],"functionName":{"name":"mload","nativeSrc":"2553:5:27","nodeType":"YulIdentifier","src":"2553:5:27"},"nativeSrc":"2553:26:27","nodeType":"YulFunctionCall","src":"2553:26:27"}],"functionName":{"name":"sstore","nativeSrc":"2538:6:27","nodeType":"YulIdentifier","src":"2538:6:27"},"nativeSrc":"2538:42:27","nodeType":"YulFunctionCall","src":"2538:42:27"},"nativeSrc":"2538:42:27","nodeType":"YulExpressionStatement","src":"2538:42:27"},{"nativeSrc":"2597:24:27","nodeType":"YulAssignment","src":"2597:24:27","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2611:6:27","nodeType":"YulIdentifier","src":"2611:6:27"},{"kind":"number","nativeSrc":"2619:1:27","nodeType":"YulLiteral","src":"2619:1:27","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2607:3:27","nodeType":"YulIdentifier","src":"2607:3:27"},"nativeSrc":"2607:14:27","nodeType":"YulFunctionCall","src":"2607:14:27"},"variableNames":[{"name":"dstPtr","nativeSrc":"2597:6:27","nodeType":"YulIdentifier","src":"2597:6:27"}]},{"nativeSrc":"2638:33:27","nodeType":"YulAssignment","src":"2638:33:27","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2655:9:27","nodeType":"YulIdentifier","src":"2655:9:27"},{"kind":"number","nativeSrc":"2666:4:27","nodeType":"YulLiteral","src":"2666:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2651:3:27","nodeType":"YulIdentifier","src":"2651:3:27"},"nativeSrc":"2651:20:27","nodeType":"YulFunctionCall","src":"2651:20:27"},"variableNames":[{"name":"srcOffset","nativeSrc":"2638:9:27","nodeType":"YulIdentifier","src":"2638:9:27"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2474:1:27","nodeType":"YulIdentifier","src":"2474:1:27"},{"name":"loopEnd","nativeSrc":"2477:7:27","nodeType":"YulIdentifier","src":"2477:7:27"}],"functionName":{"name":"lt","nativeSrc":"2471:2:27","nodeType":"YulIdentifier","src":"2471:2:27"},"nativeSrc":"2471:14:27","nodeType":"YulFunctionCall","src":"2471:14:27"},"nativeSrc":"2463:222:27","nodeType":"YulForLoop","post":{"nativeSrc":"2486:21:27","nodeType":"YulBlock","src":"2486:21:27","statements":[{"nativeSrc":"2488:17:27","nodeType":"YulAssignment","src":"2488:17:27","value":{"arguments":[{"name":"i","nativeSrc":"2497:1:27","nodeType":"YulIdentifier","src":"2497:1:27"},{"kind":"number","nativeSrc":"2500:4:27","nodeType":"YulLiteral","src":"2500:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2493:3:27","nodeType":"YulIdentifier","src":"2493:3:27"},"nativeSrc":"2493:12:27","nodeType":"YulFunctionCall","src":"2493:12:27"},"variableNames":[{"name":"i","nativeSrc":"2488:1:27","nodeType":"YulIdentifier","src":"2488:1:27"}]}]},"pre":{"nativeSrc":"2467:3:27","nodeType":"YulBlock","src":"2467:3:27","statements":[]},"src":"2463:222:27"},{"body":{"nativeSrc":"2733:166:27","nodeType":"YulBlock","src":"2733:166:27","statements":[{"nativeSrc":"2751:43:27","nodeType":"YulVariableDeclaration","src":"2751:43:27","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2778:3:27","nodeType":"YulIdentifier","src":"2778:3:27"},{"name":"srcOffset","nativeSrc":"2783:9:27","nodeType":"YulIdentifier","src":"2783:9:27"}],"functionName":{"name":"add","nativeSrc":"2774:3:27","nodeType":"YulIdentifier","src":"2774:3:27"},"nativeSrc":"2774:19:27","nodeType":"YulFunctionCall","src":"2774:19:27"}],"functionName":{"name":"mload","nativeSrc":"2768:5:27","nodeType":"YulIdentifier","src":"2768:5:27"},"nativeSrc":"2768:26:27","nodeType":"YulFunctionCall","src":"2768:26:27"},"variables":[{"name":"lastValue","nativeSrc":"2755:9:27","nodeType":"YulTypedName","src":"2755:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2818:6:27","nodeType":"YulIdentifier","src":"2818:6:27"},{"arguments":[{"name":"lastValue","nativeSrc":"2830:9:27","nodeType":"YulIdentifier","src":"2830:9:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2857:1:27","nodeType":"YulLiteral","src":"2857:1:27","type":"","value":"3"},{"name":"newLen","nativeSrc":"2860:6:27","nodeType":"YulIdentifier","src":"2860:6:27"}],"functionName":{"name":"shl","nativeSrc":"2853:3:27","nodeType":"YulIdentifier","src":"2853:3:27"},"nativeSrc":"2853:14:27","nodeType":"YulFunctionCall","src":"2853:14:27"},{"kind":"number","nativeSrc":"2869:3:27","nodeType":"YulLiteral","src":"2869:3:27","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2849:3:27","nodeType":"YulIdentifier","src":"2849:3:27"},"nativeSrc":"2849:24:27","nodeType":"YulFunctionCall","src":"2849:24:27"},{"arguments":[{"kind":"number","nativeSrc":"2879:1:27","nodeType":"YulLiteral","src":"2879:1:27","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2875:3:27","nodeType":"YulIdentifier","src":"2875:3:27"},"nativeSrc":"2875:6:27","nodeType":"YulFunctionCall","src":"2875:6:27"}],"functionName":{"name":"shr","nativeSrc":"2845:3:27","nodeType":"YulIdentifier","src":"2845:3:27"},"nativeSrc":"2845:37:27","nodeType":"YulFunctionCall","src":"2845:37:27"}],"functionName":{"name":"not","nativeSrc":"2841:3:27","nodeType":"YulIdentifier","src":"2841:3:27"},"nativeSrc":"2841:42:27","nodeType":"YulFunctionCall","src":"2841:42:27"}],"functionName":{"name":"and","nativeSrc":"2826:3:27","nodeType":"YulIdentifier","src":"2826:3:27"},"nativeSrc":"2826:58:27","nodeType":"YulFunctionCall","src":"2826:58:27"}],"functionName":{"name":"sstore","nativeSrc":"2811:6:27","nodeType":"YulIdentifier","src":"2811:6:27"},"nativeSrc":"2811:74:27","nodeType":"YulFunctionCall","src":"2811:74:27"},"nativeSrc":"2811:74:27","nodeType":"YulExpressionStatement","src":"2811:74:27"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2704:7:27","nodeType":"YulIdentifier","src":"2704:7:27"},{"name":"newLen","nativeSrc":"2713:6:27","nodeType":"YulIdentifier","src":"2713:6:27"}],"functionName":{"name":"lt","nativeSrc":"2701:2:27","nodeType":"YulIdentifier","src":"2701:2:27"},"nativeSrc":"2701:19:27","nodeType":"YulFunctionCall","src":"2701:19:27"},"nativeSrc":"2698:201:27","nodeType":"YulIf","src":"2698:201:27"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2919:4:27","nodeType":"YulIdentifier","src":"2919:4:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2933:1:27","nodeType":"YulLiteral","src":"2933:1:27","type":"","value":"1"},{"name":"newLen","nativeSrc":"2936:6:27","nodeType":"YulIdentifier","src":"2936:6:27"}],"functionName":{"name":"shl","nativeSrc":"2929:3:27","nodeType":"YulIdentifier","src":"2929:3:27"},"nativeSrc":"2929:14:27","nodeType":"YulFunctionCall","src":"2929:14:27"},{"kind":"number","nativeSrc":"2945:1:27","nodeType":"YulLiteral","src":"2945:1:27","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2925:3:27","nodeType":"YulIdentifier","src":"2925:3:27"},"nativeSrc":"2925:22:27","nodeType":"YulFunctionCall","src":"2925:22:27"}],"functionName":{"name":"sstore","nativeSrc":"2912:6:27","nodeType":"YulIdentifier","src":"2912:6:27"},"nativeSrc":"2912:36:27","nodeType":"YulFunctionCall","src":"2912:36:27"},"nativeSrc":"2912:36:27","nodeType":"YulExpressionStatement","src":"2912:36:27"}]},"nativeSrc":"2309:649:27","nodeType":"YulCase","src":"2309:649:27","value":{"kind":"number","nativeSrc":"2314:1:27","nodeType":"YulLiteral","src":"2314:1:27","type":"","value":"1"}},{"body":{"nativeSrc":"2975:234:27","nodeType":"YulBlock","src":"2975:234:27","statements":[{"nativeSrc":"2989:14:27","nodeType":"YulVariableDeclaration","src":"2989:14:27","value":{"kind":"number","nativeSrc":"3002:1:27","nodeType":"YulLiteral","src":"3002:1:27","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2993:5:27","nodeType":"YulTypedName","src":"2993:5:27","type":""}]},{"body":{"nativeSrc":"3038:67:27","nodeType":"YulBlock","src":"3038:67:27","statements":[{"nativeSrc":"3056:35:27","nodeType":"YulAssignment","src":"3056:35:27","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3075:3:27","nodeType":"YulIdentifier","src":"3075:3:27"},{"name":"srcOffset","nativeSrc":"3080:9:27","nodeType":"YulIdentifier","src":"3080:9:27"}],"functionName":{"name":"add","nativeSrc":"3071:3:27","nodeType":"YulIdentifier","src":"3071:3:27"},"nativeSrc":"3071:19:27","nodeType":"YulFunctionCall","src":"3071:19:27"}],"functionName":{"name":"mload","nativeSrc":"3065:5:27","nodeType":"YulIdentifier","src":"3065:5:27"},"nativeSrc":"3065:26:27","nodeType":"YulFunctionCall","src":"3065:26:27"},"variableNames":[{"name":"value","nativeSrc":"3056:5:27","nodeType":"YulIdentifier","src":"3056:5:27"}]}]},"condition":{"name":"newLen","nativeSrc":"3019:6:27","nodeType":"YulIdentifier","src":"3019:6:27"},"nativeSrc":"3016:89:27","nodeType":"YulIf","src":"3016:89:27"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3125:4:27","nodeType":"YulIdentifier","src":"3125:4:27"},{"arguments":[{"name":"value","nativeSrc":"3184:5:27","nodeType":"YulIdentifier","src":"3184:5:27"},{"name":"newLen","nativeSrc":"3191:6:27","nodeType":"YulIdentifier","src":"3191:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3131:52:27","nodeType":"YulIdentifier","src":"3131:52:27"},"nativeSrc":"3131:67:27","nodeType":"YulFunctionCall","src":"3131:67:27"}],"functionName":{"name":"sstore","nativeSrc":"3118:6:27","nodeType":"YulIdentifier","src":"3118:6:27"},"nativeSrc":"3118:81:27","nodeType":"YulFunctionCall","src":"3118:81:27"},"nativeSrc":"3118:81:27","nodeType":"YulExpressionStatement","src":"3118:81:27"}]},"nativeSrc":"2967:242:27","nodeType":"YulCase","src":"2967:242:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"2289:6:27","nodeType":"YulIdentifier","src":"2289:6:27"},{"kind":"number","nativeSrc":"2297:2:27","nodeType":"YulLiteral","src":"2297:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2286:2:27","nodeType":"YulIdentifier","src":"2286:2:27"},"nativeSrc":"2286:14:27","nodeType":"YulFunctionCall","src":"2286:14:27"},"nativeSrc":"2279:930:27","nodeType":"YulSwitch","src":"2279:930:27"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1916:1299:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1997:4:27","nodeType":"YulTypedName","src":"1997:4:27","type":""},{"name":"src","nativeSrc":"2003:3:27","nodeType":"YulTypedName","src":"2003:3:27","type":""}],"src":"1916:1299:27"},{"body":{"nativeSrc":"3433:276:27","nodeType":"YulBlock","src":"3433:276:27","statements":[{"nativeSrc":"3443:27:27","nodeType":"YulAssignment","src":"3443:27:27","value":{"arguments":[{"name":"headStart","nativeSrc":"3455:9:27","nodeType":"YulIdentifier","src":"3455:9:27"},{"kind":"number","nativeSrc":"3466:3:27","nodeType":"YulLiteral","src":"3466:3:27","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"3451:3:27","nodeType":"YulIdentifier","src":"3451:3:27"},"nativeSrc":"3451:19:27","nodeType":"YulFunctionCall","src":"3451:19:27"},"variableNames":[{"name":"tail","nativeSrc":"3443:4:27","nodeType":"YulIdentifier","src":"3443:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3486:9:27","nodeType":"YulIdentifier","src":"3486:9:27"},{"name":"value0","nativeSrc":"3497:6:27","nodeType":"YulIdentifier","src":"3497:6:27"}],"functionName":{"name":"mstore","nativeSrc":"3479:6:27","nodeType":"YulIdentifier","src":"3479:6:27"},"nativeSrc":"3479:25:27","nodeType":"YulFunctionCall","src":"3479:25:27"},"nativeSrc":"3479:25:27","nodeType":"YulExpressionStatement","src":"3479:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3524:9:27","nodeType":"YulIdentifier","src":"3524:9:27"},{"kind":"number","nativeSrc":"3535:2:27","nodeType":"YulLiteral","src":"3535:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3520:3:27","nodeType":"YulIdentifier","src":"3520:3:27"},"nativeSrc":"3520:18:27","nodeType":"YulFunctionCall","src":"3520:18:27"},{"name":"value1","nativeSrc":"3540:6:27","nodeType":"YulIdentifier","src":"3540:6:27"}],"functionName":{"name":"mstore","nativeSrc":"3513:6:27","nodeType":"YulIdentifier","src":"3513:6:27"},"nativeSrc":"3513:34:27","nodeType":"YulFunctionCall","src":"3513:34:27"},"nativeSrc":"3513:34:27","nodeType":"YulExpressionStatement","src":"3513:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3567:9:27","nodeType":"YulIdentifier","src":"3567:9:27"},{"kind":"number","nativeSrc":"3578:2:27","nodeType":"YulLiteral","src":"3578:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3563:3:27","nodeType":"YulIdentifier","src":"3563:3:27"},"nativeSrc":"3563:18:27","nodeType":"YulFunctionCall","src":"3563:18:27"},{"name":"value2","nativeSrc":"3583:6:27","nodeType":"YulIdentifier","src":"3583:6:27"}],"functionName":{"name":"mstore","nativeSrc":"3556:6:27","nodeType":"YulIdentifier","src":"3556:6:27"},"nativeSrc":"3556:34:27","nodeType":"YulFunctionCall","src":"3556:34:27"},"nativeSrc":"3556:34:27","nodeType":"YulExpressionStatement","src":"3556:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3610:9:27","nodeType":"YulIdentifier","src":"3610:9:27"},{"kind":"number","nativeSrc":"3621:2:27","nodeType":"YulLiteral","src":"3621:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3606:3:27","nodeType":"YulIdentifier","src":"3606:3:27"},"nativeSrc":"3606:18:27","nodeType":"YulFunctionCall","src":"3606:18:27"},{"name":"value3","nativeSrc":"3626:6:27","nodeType":"YulIdentifier","src":"3626:6:27"}],"functionName":{"name":"mstore","nativeSrc":"3599:6:27","nodeType":"YulIdentifier","src":"3599:6:27"},"nativeSrc":"3599:34:27","nodeType":"YulFunctionCall","src":"3599:34:27"},"nativeSrc":"3599:34:27","nodeType":"YulExpressionStatement","src":"3599:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3653:9:27","nodeType":"YulIdentifier","src":"3653:9:27"},{"kind":"number","nativeSrc":"3664:3:27","nodeType":"YulLiteral","src":"3664:3:27","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3649:3:27","nodeType":"YulIdentifier","src":"3649:3:27"},"nativeSrc":"3649:19:27","nodeType":"YulFunctionCall","src":"3649:19:27"},{"arguments":[{"name":"value4","nativeSrc":"3674:6:27","nodeType":"YulIdentifier","src":"3674:6:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3690:3:27","nodeType":"YulLiteral","src":"3690:3:27","type":"","value":"160"},{"kind":"number","nativeSrc":"3695:1:27","nodeType":"YulLiteral","src":"3695:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3686:3:27","nodeType":"YulIdentifier","src":"3686:3:27"},"nativeSrc":"3686:11:27","nodeType":"YulFunctionCall","src":"3686:11:27"},{"kind":"number","nativeSrc":"3699:1:27","nodeType":"YulLiteral","src":"3699:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3682:3:27","nodeType":"YulIdentifier","src":"3682:3:27"},"nativeSrc":"3682:19:27","nodeType":"YulFunctionCall","src":"3682:19:27"}],"functionName":{"name":"and","nativeSrc":"3670:3:27","nodeType":"YulIdentifier","src":"3670:3:27"},"nativeSrc":"3670:32:27","nodeType":"YulFunctionCall","src":"3670:32:27"}],"functionName":{"name":"mstore","nativeSrc":"3642:6:27","nodeType":"YulIdentifier","src":"3642:6:27"},"nativeSrc":"3642:61:27","nodeType":"YulFunctionCall","src":"3642:61:27"},"nativeSrc":"3642:61:27","nodeType":"YulExpressionStatement","src":"3642:61:27"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"3220:489:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3370:9:27","nodeType":"YulTypedName","src":"3370:9:27","type":""},{"name":"value4","nativeSrc":"3381:6:27","nodeType":"YulTypedName","src":"3381:6:27","type":""},{"name":"value3","nativeSrc":"3389:6:27","nodeType":"YulTypedName","src":"3389:6:27","type":""},{"name":"value2","nativeSrc":"3397:6:27","nodeType":"YulTypedName","src":"3397:6:27","type":""},{"name":"value1","nativeSrc":"3405:6:27","nodeType":"YulTypedName","src":"3405:6:27","type":""},{"name":"value0","nativeSrc":"3413:6:27","nodeType":"YulTypedName","src":"3413:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3424:4:27","nodeType":"YulTypedName","src":"3424:4:27","type":""}],"src":"3220:489:27"},{"body":{"nativeSrc":"3835:406:27","nodeType":"YulBlock","src":"3835:406:27","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3852:9:27","nodeType":"YulIdentifier","src":"3852:9:27"},{"kind":"number","nativeSrc":"3863:2:27","nodeType":"YulLiteral","src":"3863:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3845:6:27","nodeType":"YulIdentifier","src":"3845:6:27"},"nativeSrc":"3845:21:27","nodeType":"YulFunctionCall","src":"3845:21:27"},"nativeSrc":"3845:21:27","nodeType":"YulExpressionStatement","src":"3845:21:27"},{"nativeSrc":"3875:27:27","nodeType":"YulVariableDeclaration","src":"3875:27:27","value":{"arguments":[{"name":"value0","nativeSrc":"3895:6:27","nodeType":"YulIdentifier","src":"3895:6:27"}],"functionName":{"name":"mload","nativeSrc":"3889:5:27","nodeType":"YulIdentifier","src":"3889:5:27"},"nativeSrc":"3889:13:27","nodeType":"YulFunctionCall","src":"3889:13:27"},"variables":[{"name":"length","nativeSrc":"3879:6:27","nodeType":"YulTypedName","src":"3879:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3922:9:27","nodeType":"YulIdentifier","src":"3922:9:27"},{"kind":"number","nativeSrc":"3933:2:27","nodeType":"YulLiteral","src":"3933:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3918:3:27","nodeType":"YulIdentifier","src":"3918:3:27"},"nativeSrc":"3918:18:27","nodeType":"YulFunctionCall","src":"3918:18:27"},{"name":"length","nativeSrc":"3938:6:27","nodeType":"YulIdentifier","src":"3938:6:27"}],"functionName":{"name":"mstore","nativeSrc":"3911:6:27","nodeType":"YulIdentifier","src":"3911:6:27"},"nativeSrc":"3911:34:27","nodeType":"YulFunctionCall","src":"3911:34:27"},"nativeSrc":"3911:34:27","nodeType":"YulExpressionStatement","src":"3911:34:27"},{"nativeSrc":"3954:10:27","nodeType":"YulVariableDeclaration","src":"3954:10:27","value":{"kind":"number","nativeSrc":"3963:1:27","nodeType":"YulLiteral","src":"3963:1:27","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3958:1:27","nodeType":"YulTypedName","src":"3958:1:27","type":""}]},{"body":{"nativeSrc":"4023:90:27","nodeType":"YulBlock","src":"4023:90:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4052:9:27","nodeType":"YulIdentifier","src":"4052:9:27"},{"name":"i","nativeSrc":"4063:1:27","nodeType":"YulIdentifier","src":"4063:1:27"}],"functionName":{"name":"add","nativeSrc":"4048:3:27","nodeType":"YulIdentifier","src":"4048:3:27"},"nativeSrc":"4048:17:27","nodeType":"YulFunctionCall","src":"4048:17:27"},{"kind":"number","nativeSrc":"4067:2:27","nodeType":"YulLiteral","src":"4067:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4044:3:27","nodeType":"YulIdentifier","src":"4044:3:27"},"nativeSrc":"4044:26:27","nodeType":"YulFunctionCall","src":"4044:26:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"4086:6:27","nodeType":"YulIdentifier","src":"4086:6:27"},{"name":"i","nativeSrc":"4094:1:27","nodeType":"YulIdentifier","src":"4094:1:27"}],"functionName":{"name":"add","nativeSrc":"4082:3:27","nodeType":"YulIdentifier","src":"4082:3:27"},"nativeSrc":"4082:14:27","nodeType":"YulFunctionCall","src":"4082:14:27"},{"kind":"number","nativeSrc":"4098:2:27","nodeType":"YulLiteral","src":"4098:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4078:3:27","nodeType":"YulIdentifier","src":"4078:3:27"},"nativeSrc":"4078:23:27","nodeType":"YulFunctionCall","src":"4078:23:27"}],"functionName":{"name":"mload","nativeSrc":"4072:5:27","nodeType":"YulIdentifier","src":"4072:5:27"},"nativeSrc":"4072:30:27","nodeType":"YulFunctionCall","src":"4072:30:27"}],"functionName":{"name":"mstore","nativeSrc":"4037:6:27","nodeType":"YulIdentifier","src":"4037:6:27"},"nativeSrc":"4037:66:27","nodeType":"YulFunctionCall","src":"4037:66:27"},"nativeSrc":"4037:66:27","nodeType":"YulExpressionStatement","src":"4037:66:27"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3984:1:27","nodeType":"YulIdentifier","src":"3984:1:27"},{"name":"length","nativeSrc":"3987:6:27","nodeType":"YulIdentifier","src":"3987:6:27"}],"functionName":{"name":"lt","nativeSrc":"3981:2:27","nodeType":"YulIdentifier","src":"3981:2:27"},"nativeSrc":"3981:13:27","nodeType":"YulFunctionCall","src":"3981:13:27"},"nativeSrc":"3973:140:27","nodeType":"YulForLoop","post":{"nativeSrc":"3995:19:27","nodeType":"YulBlock","src":"3995:19:27","statements":[{"nativeSrc":"3997:15:27","nodeType":"YulAssignment","src":"3997:15:27","value":{"arguments":[{"name":"i","nativeSrc":"4006:1:27","nodeType":"YulIdentifier","src":"4006:1:27"},{"kind":"number","nativeSrc":"4009:2:27","nodeType":"YulLiteral","src":"4009:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4002:3:27","nodeType":"YulIdentifier","src":"4002:3:27"},"nativeSrc":"4002:10:27","nodeType":"YulFunctionCall","src":"4002:10:27"},"variableNames":[{"name":"i","nativeSrc":"3997:1:27","nodeType":"YulIdentifier","src":"3997:1:27"}]}]},"pre":{"nativeSrc":"3977:3:27","nodeType":"YulBlock","src":"3977:3:27","statements":[]},"src":"3973:140:27"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4137:9:27","nodeType":"YulIdentifier","src":"4137:9:27"},{"name":"length","nativeSrc":"4148:6:27","nodeType":"YulIdentifier","src":"4148:6:27"}],"functionName":{"name":"add","nativeSrc":"4133:3:27","nodeType":"YulIdentifier","src":"4133:3:27"},"nativeSrc":"4133:22:27","nodeType":"YulFunctionCall","src":"4133:22:27"},{"kind":"number","nativeSrc":"4157:2:27","nodeType":"YulLiteral","src":"4157:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4129:3:27","nodeType":"YulIdentifier","src":"4129:3:27"},"nativeSrc":"4129:31:27","nodeType":"YulFunctionCall","src":"4129:31:27"},{"kind":"number","nativeSrc":"4162:1:27","nodeType":"YulLiteral","src":"4162:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4122:6:27","nodeType":"YulIdentifier","src":"4122:6:27"},"nativeSrc":"4122:42:27","nodeType":"YulFunctionCall","src":"4122:42:27"},"nativeSrc":"4122:42:27","nodeType":"YulExpressionStatement","src":"4122:42:27"},{"nativeSrc":"4173:62:27","nodeType":"YulAssignment","src":"4173:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4189:9:27","nodeType":"YulIdentifier","src":"4189:9:27"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4208:6:27","nodeType":"YulIdentifier","src":"4208:6:27"},{"kind":"number","nativeSrc":"4216:2:27","nodeType":"YulLiteral","src":"4216:2:27","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4204:3:27","nodeType":"YulIdentifier","src":"4204:3:27"},"nativeSrc":"4204:15:27","nodeType":"YulFunctionCall","src":"4204:15:27"},{"arguments":[{"kind":"number","nativeSrc":"4225:2:27","nodeType":"YulLiteral","src":"4225:2:27","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4221:3:27","nodeType":"YulIdentifier","src":"4221:3:27"},"nativeSrc":"4221:7:27","nodeType":"YulFunctionCall","src":"4221:7:27"}],"functionName":{"name":"and","nativeSrc":"4200:3:27","nodeType":"YulIdentifier","src":"4200:3:27"},"nativeSrc":"4200:29:27","nodeType":"YulFunctionCall","src":"4200:29:27"}],"functionName":{"name":"add","nativeSrc":"4185:3:27","nodeType":"YulIdentifier","src":"4185:3:27"},"nativeSrc":"4185:45:27","nodeType":"YulFunctionCall","src":"4185:45:27"},{"kind":"number","nativeSrc":"4232:2:27","nodeType":"YulLiteral","src":"4232:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4181:3:27","nodeType":"YulIdentifier","src":"4181:3:27"},"nativeSrc":"4181:54:27","nodeType":"YulFunctionCall","src":"4181:54:27"},"variableNames":[{"name":"tail","nativeSrc":"4173:4:27","nodeType":"YulIdentifier","src":"4173:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3714:527:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3804:9:27","nodeType":"YulTypedName","src":"3804:9:27","type":""},{"name":"value0","nativeSrc":"3815:6:27","nodeType":"YulTypedName","src":"3815:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3826:4:27","nodeType":"YulTypedName","src":"3826:4:27","type":""}],"src":"3714:527:27"},{"body":{"nativeSrc":"4340:203:27","nodeType":"YulBlock","src":"4340:203:27","statements":[{"nativeSrc":"4350:26:27","nodeType":"YulVariableDeclaration","src":"4350:26:27","value":{"arguments":[{"name":"array","nativeSrc":"4370:5:27","nodeType":"YulIdentifier","src":"4370:5:27"}],"functionName":{"name":"mload","nativeSrc":"4364:5:27","nodeType":"YulIdentifier","src":"4364:5:27"},"nativeSrc":"4364:12:27","nodeType":"YulFunctionCall","src":"4364:12:27"},"variables":[{"name":"length","nativeSrc":"4354:6:27","nodeType":"YulTypedName","src":"4354:6:27","type":""}]},{"nativeSrc":"4385:32:27","nodeType":"YulAssignment","src":"4385:32:27","value":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"4404:5:27","nodeType":"YulIdentifier","src":"4404:5:27"},{"kind":"number","nativeSrc":"4411:4:27","nodeType":"YulLiteral","src":"4411:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4400:3:27","nodeType":"YulIdentifier","src":"4400:3:27"},"nativeSrc":"4400:16:27","nodeType":"YulFunctionCall","src":"4400:16:27"}],"functionName":{"name":"mload","nativeSrc":"4394:5:27","nodeType":"YulIdentifier","src":"4394:5:27"},"nativeSrc":"4394:23:27","nodeType":"YulFunctionCall","src":"4394:23:27"},"variableNames":[{"name":"value","nativeSrc":"4385:5:27","nodeType":"YulIdentifier","src":"4385:5:27"}]},{"body":{"nativeSrc":"4454:83:27","nodeType":"YulBlock","src":"4454:83:27","statements":[{"nativeSrc":"4468:59:27","nodeType":"YulAssignment","src":"4468:59:27","value":{"arguments":[{"name":"value","nativeSrc":"4481:5:27","nodeType":"YulIdentifier","src":"4481:5:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4496:1:27","nodeType":"YulLiteral","src":"4496:1:27","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"4503:4:27","nodeType":"YulLiteral","src":"4503:4:27","type":"","value":"0x20"},{"name":"length","nativeSrc":"4509:6:27","nodeType":"YulIdentifier","src":"4509:6:27"}],"functionName":{"name":"sub","nativeSrc":"4499:3:27","nodeType":"YulIdentifier","src":"4499:3:27"},"nativeSrc":"4499:17:27","nodeType":"YulFunctionCall","src":"4499:17:27"}],"functionName":{"name":"shl","nativeSrc":"4492:3:27","nodeType":"YulIdentifier","src":"4492:3:27"},"nativeSrc":"4492:25:27","nodeType":"YulFunctionCall","src":"4492:25:27"},{"arguments":[{"kind":"number","nativeSrc":"4523:1:27","nodeType":"YulLiteral","src":"4523:1:27","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4519:3:27","nodeType":"YulIdentifier","src":"4519:3:27"},"nativeSrc":"4519:6:27","nodeType":"YulFunctionCall","src":"4519:6:27"}],"functionName":{"name":"shl","nativeSrc":"4488:3:27","nodeType":"YulIdentifier","src":"4488:3:27"},"nativeSrc":"4488:38:27","nodeType":"YulFunctionCall","src":"4488:38:27"}],"functionName":{"name":"and","nativeSrc":"4477:3:27","nodeType":"YulIdentifier","src":"4477:3:27"},"nativeSrc":"4477:50:27","nodeType":"YulFunctionCall","src":"4477:50:27"},"variableNames":[{"name":"value","nativeSrc":"4468:5:27","nodeType":"YulIdentifier","src":"4468:5:27"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4432:6:27","nodeType":"YulIdentifier","src":"4432:6:27"},{"kind":"number","nativeSrc":"4440:4:27","nodeType":"YulLiteral","src":"4440:4:27","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"4429:2:27","nodeType":"YulIdentifier","src":"4429:2:27"},"nativeSrc":"4429:16:27","nodeType":"YulFunctionCall","src":"4429:16:27"},"nativeSrc":"4426:111:27","nodeType":"YulIf","src":"4426:111:27"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"4246:297:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4320:5:27","nodeType":"YulTypedName","src":"4320:5:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4330:5:27","nodeType":"YulTypedName","src":"4330:5:27","type":""}],"src":"4246:297:27"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61016060405234801561001157600080fd5b50604051611b6b380380611b6b8339810160408190526100309161033f565b6040518060400160405280601381526020017211dc99595b921e591c9bd9d95b90dc99591a5d606a1b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280601381526020017211dc99595b921e591c9bd9d95b90dc99591a5d606a1b8152506040518060400160405280600381526020016247484360e81b81525081600390816100ce9190610421565b5060046100db8282610421565b506100eb915083905060076101fb565b610120526100fa8160086101fb565b61014052815160208084019190912060e052815190820120610100524660a05261018760e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0525061019c60008461022e565b506101c77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8361022e565b506101f27f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68261022e565b50505050610551565b600060208351101561021757610210836102dc565b9050610228565b816102228482610421565b5060ff90505b92915050565b60008281526006602090815260408083206001600160a01b038516845290915281205460ff166102d45760008381526006602090815260408083206001600160a01b03861684529091529020805460ff1916600117905561028c3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610228565b506000610228565b600080829050601f81511115610310578260405163305a27a960e01b815260040161030791906104df565b60405180910390fd5b805161031b8261052d565b179392505050565b80516001600160a01b038116811461033a57600080fd5b919050565b60008060006060848603121561035457600080fd5b61035d84610323565b925061036b60208501610323565b915061037960408501610323565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806103ac57607f821691505b6020821081036103cc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561041c57806000526020600020601f840160051c810160208510156103f95750805b601f840160051c820191505b818110156104195760008155600101610405565b50505b505050565b81516001600160401b0381111561043a5761043a610382565b61044e816104488454610398565b846103d2565b6020601f821160018114610482576000831561046a5750848201515b600019600385901b1c1916600184901b178455610419565b600084815260208120601f198516915b828110156104b25787850151825560209485019460019092019101610492565b50848210156104d05786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b602081526000825180602084015260005b8181101561050d57602081860181015160408684010152016104f0565b506000604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156103cc5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516115c06105ab6000396000610cbd01526000610c9001526000610ad001526000610aa801526000610a0301526000610a2d01526000610a5701526115c06000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a217fddf11610097578063d539139311610071578063d539139314610394578063d547741f146103bb578063dd62ed3e146103ce578063e63ab1e91461040757600080fd5b8063a217fddf14610366578063a9059cbb1461036e578063d505accf1461038157600080fd5b80638456cb59116100d35780638456cb591461032857806384b0196e1461033057806391d148541461034b57806395d89b411461035e57600080fd5b806370a08231146102d957806379cc6790146103025780637ecebe001461031557600080fd5b8063313ce567116101665780633f4ba83a116101405780633f4ba83a146102a057806340c10f19146102a857806342966c68146102bb5780635c975abb146102ce57600080fd5b8063313ce567146102765780633644e5151461028557806336568abe1461028d57600080fd5b806318160ddd116101a257806318160ddd1461021957806323b872dd1461022b578063248a9ca31461023e5780632f2ff15d1461026157600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063095ea7b314610206575b600080fd5b6101dc6101d7366004611277565b61042e565b60405190151581526020015b60405180910390f35b6101f9610465565b6040516101e891906112ee565b6101dc61021436600461131d565b6104f7565b6002545b6040519081526020016101e8565b6101dc610239366004611347565b61050f565b61021d61024c366004611384565b60009081526006602052604090206001015490565b61027461026f36600461139d565b610533565b005b604051601281526020016101e8565b61021d61055e565b61027461029b36600461139d565b61056d565b6102746105a5565b6102746102b636600461131d565b6105da565b6102746102c9366004611384565b61060e565b60055460ff166101dc565b61021d6102e73660046113c9565b6001600160a01b031660009081526020819052604090205490565b61027461031036600461131d565b610618565b61021d6103233660046113c9565b610631565b61027461064f565b610338610681565b6040516101e897969594939291906113e4565b6101dc61035936600461139d565b6106c7565b6101f96106f2565b61021d600081565b6101dc61037c36600461131d565b610701565b61027461038f36600461147c565b61070f565b61021d7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102746103c936600461139d565b61084e565b61021d6103dc3660046114ef565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61021d7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216637965db0b60e01b148061045f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606003805461047490611519565b80601f01602080910402602001604051908101604052809291908181526020018280546104a090611519565b80156104ed5780601f106104c2576101008083540402835291602001916104ed565b820191906000526020600020905b8154815290600101906020018083116104d057829003601f168201915b5050505050905090565b600033610505818585610873565b5060019392505050565b60003361051d858285610880565b6105288585856108f9565b506001949350505050565b60008281526006602052604090206001015461054e81610958565b6105588383610962565b50505050565b60006105686109f6565b905090565b6001600160a01b03811633146105965760405163334bd91960e11b815260040160405180910390fd5b6105a08282610b21565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6105cf81610958565b6105d7610b8e565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661060481610958565b6105a08383610be0565b6105d73382610c16565b610623823383610880565b61062d8282610c16565b5050565b6001600160a01b03811660009081526009602052604081205461045f565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61067981610958565b6105d7610c4c565b600060608060008060006060610695610c89565b61069d610cb6565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606004805461047490611519565b6000336105058185856108f9565b834211156107385760405163313c898160e11b8152600481018590526024015b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107858c6001600160a01b0316600090815260096020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006107e082610ce3565b905060006107f082878787610d10565b9050896001600160a01b0316816001600160a01b031614610837576040516325c0072360e11b81526001600160a01b0380831660048301528b16602482015260440161072f565b6108428a8a8a610873565b50505050505050505050565b60008281526006602052604090206001015461086981610958565b6105588383610b21565b6105a08383836001610d3e565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561055857818110156108ea57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161072f565b61055884848484036000610d3e565b6001600160a01b03831661092357604051634b637e8f60e11b81526000600482015260240161072f565b6001600160a01b03821661094d5760405163ec442f0560e01b81526000600482015260240161072f565b6105a0838383610e13565b6105d78133610e1e565b600061096e83836106c7565b6109ee5760008381526006602090815260408083206001600160a01b03861684529091529020805460ff191660011790556109a63390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161045f565b50600061045f565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610a4f57507f000000000000000000000000000000000000000000000000000000000000000046145b15610a7957507f000000000000000000000000000000000000000000000000000000000000000090565b610568604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6000610b2d83836106c7565b156109ee5760008381526006602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600161045f565b610b96610e57565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610c0a5760405163ec442f0560e01b81526000600482015260240161072f565b61062d60008383610e13565b6001600160a01b038216610c4057604051634b637e8f60e11b81526000600482015260240161072f565b61062d82600083610e13565b610c54610e7c565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610bc33390565b60606105687f00000000000000000000000000000000000000000000000000000000000000006007610ea0565b60606105687f00000000000000000000000000000000000000000000000000000000000000006008610ea0565b600061045f610cf06109f6565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080610d2288888888610f4b565b925092509250610d32828261101a565b50909695505050505050565b6001600160a01b038416610d685760405163e602df0560e01b81526000600482015260240161072f565b6001600160a01b038316610d9257604051634a1406b160e11b81526000600482015260240161072f565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561055857826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e0591815260200190565b60405180910390a350505050565b6105a08383836110d3565b610e2882826106c7565b61062d5760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161072f565b60055460ff16610e7a57604051638dfc202b60e01b815260040160405180910390fd5b565b60055460ff1615610e7a5760405163d93c066560e01b815260040160405180910390fd5b606060ff8314610eba57610eb3836110e6565b905061045f565b818054610ec690611519565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef290611519565b8015610f3f5780601f10610f1457610100808354040283529160200191610f3f565b820191906000526020600020905b815481529060010190602001808311610f2257829003601f168201915b5050505050905061045f565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610f865750600091506003905082611010565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610fda573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661100657506000925060019150829050611010565b9250600091508190505b9450945094915050565b600082600381111561102e5761102e611553565b03611037575050565b600182600381111561104b5761104b611553565b036110695760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561107d5761107d611553565b0361109e5760405163fce698f760e01b81526004810182905260240161072f565b60038260038111156110b2576110b2611553565b0361062d576040516335e2f38360e21b81526004810182905260240161072f565b6110db610e7c565b6105a0838383611125565b606060006110f38361124f565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6001600160a01b0383166111505780600260008282546111459190611569565b909155506111c29050565b6001600160a01b038316600090815260208190526040902054818110156111a35760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161072f565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166111de576002805482900390556111fd565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161124291815260200190565b60405180910390a3505050565b600060ff8216601f81111561045f57604051632cd44ac360e21b815260040160405180910390fd5b60006020828403121561128957600080fd5b81356001600160e01b0319811681146112a157600080fd5b9392505050565b6000815180845260005b818110156112ce576020818501810151868301820152016112b2565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006112a160208301846112a8565b80356001600160a01b038116811461131857600080fd5b919050565b6000806040838503121561133057600080fd5b61133983611301565b946020939093013593505050565b60008060006060848603121561135c57600080fd5b61136584611301565b925061137360208501611301565b929592945050506040919091013590565b60006020828403121561139657600080fd5b5035919050565b600080604083850312156113b057600080fd5b823591506113c060208401611301565b90509250929050565b6000602082840312156113db57600080fd5b6112a182611301565b60ff60f81b8816815260e06020820152600061140360e08301896112a8565b828103604084015261141581896112a8565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b8181101561146b57835183526020938401939092019160010161144d565b50909b9a5050505050505050505050565b600080600080600080600060e0888a03121561149757600080fd5b6114a088611301565b96506114ae60208901611301565b95506040880135945060608801359350608088013560ff811681146114d257600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561150257600080fd5b61150b83611301565b91506113c060208401611301565b600181811c9082168061152d57607f821691505b60208210810361154d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b8082018082111561045f57634e487b7160e01b600052601160045260246000fdfea264697066735822122010c8dc4a860e15d8fe24e385972b1038d012ba058b4dc46ad55ade3f3bdb0c1e64736f6c634300081b0033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1B6B CODESIZE SUB DUP1 PUSH2 0x1B6B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x30 SWAP2 PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH19 0x11DC99595B921E591C9BD9D95B90DC99591A5D PUSH1 0x6A SHL DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH19 0x11DC99595B921E591C9BD9D95B90DC99591A5D PUSH1 0x6A SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x474843 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x421 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xDB DUP3 DUP3 PUSH2 0x421 JUMP JUMPDEST POP PUSH2 0xEB SWAP2 POP DUP4 SWAP1 POP PUSH1 0x7 PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH2 0xFA DUP2 PUSH1 0x8 PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH2 0x187 PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH2 0x19C PUSH1 0x0 DUP5 PUSH2 0x22E JUMP JUMPDEST POP PUSH2 0x1C7 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP4 PUSH2 0x22E JUMP JUMPDEST POP PUSH2 0x1F2 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0x22E JUMP JUMPDEST POP POP POP POP PUSH2 0x551 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x217 JUMPI PUSH2 0x210 DUP4 PUSH2 0x2DC JUMP JUMPDEST SWAP1 POP PUSH2 0x228 JUMP JUMPDEST DUP2 PUSH2 0x222 DUP5 DUP3 PUSH2 0x421 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x28C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x228 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x310 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x31B DUP3 PUSH2 0x52D JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35D DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP3 POP PUSH2 0x36B PUSH1 0x20 DUP6 ADD PUSH2 0x323 JUMP JUMPDEST SWAP2 POP PUSH2 0x379 PUSH1 0x40 DUP6 ADD PUSH2 0x323 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3AC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x41C JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3F9 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x405 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x43A JUMPI PUSH2 0x43A PUSH2 0x382 JUMP JUMPDEST PUSH2 0x44E DUP2 PUSH2 0x448 DUP5 SLOAD PUSH2 0x398 JUMP JUMPDEST DUP5 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x482 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x46A JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x419 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4B2 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x492 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x4D0 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x50D JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x4F0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x15C0 PUSH2 0x5AB PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xCBD ADD MSTORE PUSH1 0x0 PUSH2 0xC90 ADD MSTORE PUSH1 0x0 PUSH2 0xAD0 ADD MSTORE PUSH1 0x0 PUSH2 0xAA8 ADD MSTORE PUSH1 0x0 PUSH2 0xA03 ADD MSTORE PUSH1 0x0 PUSH2 0xA2D ADD MSTORE PUSH1 0x0 PUSH2 0xA57 ADD MSTORE PUSH2 0x15C0 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x206 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1277 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH2 0x21D PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x55E JUMP JUMPDEST PUSH2 0x274 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x56D JUMP JUMPDEST PUSH2 0x274 PUSH2 0x5A5 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST PUSH2 0x274 PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1384 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x1DC JUMP JUMPDEST PUSH2 0x21D PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x310 CALLDATASIZE PUSH1 0x4 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x64F JUMP JUMPDEST PUSH2 0x338 PUSH2 0x681 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x21D PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x701 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH2 0x21D PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x3C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST PUSH2 0x21D PUSH2 0x3DC CALLDATASIZE PUSH1 0x4 PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x21D PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x45F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A0 SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x505 DUP2 DUP6 DUP6 PUSH2 0x873 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x51D DUP6 DUP3 DUP6 PUSH2 0x880 JUMP JUMPDEST PUSH2 0x528 DUP6 DUP6 DUP6 PUSH2 0x8F9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x54E DUP2 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x558 DUP4 DUP4 PUSH2 0x962 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x568 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A0 DUP3 DUP3 PUSH2 0xB21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x5CF DUP2 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x5D7 PUSH2 0xB8E JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x604 DUP2 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x5A0 DUP4 DUP4 PUSH2 0xBE0 JUMP JUMPDEST PUSH2 0x5D7 CALLER DUP3 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x623 DUP3 CALLER DUP4 PUSH2 0x880 JUMP JUMPDEST PUSH2 0x62D DUP3 DUP3 PUSH2 0xC16 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x45F JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x679 DUP2 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x5D7 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x695 PUSH2 0xC89 JUMP JUMPDEST PUSH2 0x69D PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x505 DUP2 DUP6 DUP6 PUSH2 0x8F9 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x738 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x785 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x7E0 DUP3 PUSH2 0xCE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7F0 DUP3 DUP8 DUP8 DUP8 PUSH2 0xD10 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72F JUMP JUMPDEST PUSH2 0x842 DUP11 DUP11 DUP11 PUSH2 0x873 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x869 DUP2 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x558 DUP4 DUP4 PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x5A0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x558 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x72F JUMP JUMPDEST PUSH2 0x558 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x94D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH2 0x5A0 DUP4 DUP4 DUP4 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x5D7 DUP2 CALLER PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96E DUP4 DUP4 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x9EE JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x9A6 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x45F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x45F JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xA4F JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xA79 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x568 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2D DUP4 DUP4 PUSH2 0x6C7 JUMP JUMPDEST ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x45F JUMP JUMPDEST PUSH2 0xB96 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH2 0x62D PUSH1 0x0 DUP4 DUP4 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH2 0x62D DUP3 PUSH1 0x0 DUP4 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0xC54 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xBC3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x568 PUSH32 0x0 PUSH1 0x7 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x568 PUSH32 0x0 PUSH1 0x8 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45F PUSH2 0xCF0 PUSH2 0x9F6 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xD22 DUP9 DUP9 DUP9 DUP9 PUSH2 0xF4B JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xD32 DUP3 DUP3 PUSH2 0x101A JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD68 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD92 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x558 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE05 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x5A0 DUP4 DUP4 DUP4 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0xE28 DUP3 DUP3 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x62D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0xE7A JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE7A JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xEBA JUMPI PUSH2 0xEB3 DUP4 PUSH2 0x10E6 JUMP JUMPDEST SWAP1 POP PUSH2 0x45F JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xEC6 SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEF2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF3F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF14 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF3F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF22 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x45F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xF86 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1006 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1010 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x102E JUMPI PUSH2 0x102E PUSH2 0x1553 JUMP JUMPDEST SUB PUSH2 0x1037 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x104B JUMPI PUSH2 0x104B PUSH2 0x1553 JUMP JUMPDEST SUB PUSH2 0x1069 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x107D JUMPI PUSH2 0x107D PUSH2 0x1553 JUMP JUMPDEST SUB PUSH2 0x109E JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10B2 JUMPI PUSH2 0x10B2 PUSH2 0x1553 JUMP JUMPDEST SUB PUSH2 0x62D JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH2 0x10DB PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x5A0 DUP4 DUP4 DUP4 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x10F3 DUP4 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1150 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1145 SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x11C2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x11A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11DE JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1242 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x12A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12CE JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x12B2 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1339 DUP4 PUSH2 0x1301 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x135C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1365 DUP5 PUSH2 0x1301 JUMP JUMPDEST SWAP3 POP PUSH2 0x1373 PUSH1 0x20 DUP6 ADD PUSH2 0x1301 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x13C0 PUSH1 0x20 DUP5 ADD PUSH2 0x1301 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A1 DUP3 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1403 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x12A8 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1415 DUP2 DUP10 PUSH2 0x12A8 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x146B JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x144D JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A0 DUP9 PUSH2 0x1301 JUMP JUMPDEST SWAP7 POP PUSH2 0x14AE PUSH1 0x20 DUP10 ADD PUSH2 0x1301 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x14D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x150B DUP4 PUSH2 0x1301 JUMP JUMPDEST SWAP2 POP PUSH2 0x13C0 PUSH1 0x20 DUP5 ADD PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x152D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x154D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x45F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0xC8 0xDC BLOBBASEFEE DUP7 0xE ISZERO 0xD8 INVALID 0x24 0xE3 DUP6 SWAP8 0x2B LT CODESIZE 0xD0 SLT 0xBA SDIV DUP12 0x4D 0xC4 PUSH11 0xD55ADE3F3BDB0C1E64736F PUSH13 0x634300081B0033000000000000 ","sourceMap":"593:1049:26:-:0;;;832:300;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:52:8;;;;;;;;;;;;;-1:-1:-1;;;1577:52:8;;;1616:4;3428:431:19;;;;;;;;;;;;;-1:-1:-1;;;3428:431:19;;;1582:113:4;;;;;;;;;;;;;-1:-1:-1;;;1582:113:4;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:4;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:4;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;3501:45:19;;-1:-1:-1;3501:4:19;;-1:-1:-1;3532:13:19;3501:30;:45::i;:::-;3493:53;;3567:51;:7;3601:16;3567:33;:51::i;:::-;3556:62;;3642:22;;;;;;;;;;3628:36;;3691:25;;;;;;3674:42;;3744:13;3727:30;;3792:23;4326:11;;4339:14;;4304:80;;;2079:95;4304:80;;;3479:25:27;3520:18;;;3513:34;;;;3563:18;;;3556:34;4355:13:19;3606:18:27;;;3599:34;4378:4:19;3649:19:27;;;3642:61;4268:7:19;;3451:19:27;;4304:80:19;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;3792:23;3767:48;;-1:-1:-1;;3847:4:19;3825:27;;-1:-1:-1;999:44:26::2;2241:4:0;1030:12:26::0;999:10:::2;:44::i;:::-;-1:-1:-1::0;1053:31:26::2;733:24;1077:6:::0;1053:10:::2;:31::i;:::-;-1:-1:-1::0;1094:31:26::2;801:24;1118:6:::0;1094:10:::2;:31::i;:::-;;832:300:::0;;;593:1049;;2887:340:15;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:15;;-1:-1:-1;3006:215:15;2887:340;;;;:::o;6155:316:0:-;6232:4;2930:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2930:29:0;;;;;;;;;;;;6248:217;;6291:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6291:29:0;;;;;;;;;:36;;-1:-1:-1;;6291:36:0;6323:4;6291:36;;;6373:12;735:10:11;;656:96;6373:12:0;-1:-1:-1;;;;;6346:40:0;6364:7;-1:-1:-1;;;;;6346:40:0;6358:4;6346:40;;;;;;;;;;-1:-1:-1;6407:4:0;6400:11;;6248:217;-1:-1:-1;6449:5:0;6442:12;;1708:286:15;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:15;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:15:o;14:177:27:-;93:13;;-1:-1:-1;;;;;135:31:27;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;579:127::-;640:10;635:3;631:20;628:1;621:31;671:4;668:1;661:15;695:4;692:1;685:15;711:380;790:1;786:12;;;;833;;;854:61;;908:4;900:6;896:17;886:27;;854:61;961:2;953:6;950:14;930:18;927:38;924:161;;1007:10;1002:3;998:20;995:1;988:31;1042:4;1039:1;1032:15;1070:4;1067:1;1060:15;924:161;;711:380;;;:::o;1222:518::-;1324:2;1319:3;1316:11;1313:421;;;1360:5;1357:1;1350:16;1404:4;1401:1;1391:18;1474:2;1462:10;1458:19;1455:1;1451:27;1445:4;1441:38;1510:4;1498:10;1495:20;1492:47;;;-1:-1:-1;1533:4:27;1492:47;1588:2;1583:3;1579:12;1576:1;1572:20;1566:4;1562:31;1552:41;;1643:81;1661:2;1654:5;1651:13;1643:81;;;1720:1;1706:16;;1687:1;1676:13;1643:81;;;1647:3;;1313:421;1222:518;;;:::o;1916:1299::-;2036:10;;-1:-1:-1;;;;;2058:30:27;;2055:56;;;2091:18;;:::i;:::-;2120:97;2210:6;2170:38;2202:4;2196:11;2170:38;:::i;:::-;2164:4;2120:97;:::i;:::-;2266:4;2297:2;2286:14;;2314:1;2309:649;;;;3002:1;3019:6;3016:89;;;-1:-1:-1;3071:19:27;;;3065:26;3016:89;-1:-1:-1;;1873:1:27;1869:11;;;1865:24;1861:29;1851:40;1897:1;1893:11;;;1848:57;3118:81;;2279:930;;2309:649;1169:1;1162:14;;;1206:4;1193:18;;-1:-1:-1;;2345:20:27;;;2463:222;2477:7;2474:1;2471:14;2463:222;;;2559:19;;;2553:26;2538:42;;2666:4;2651:20;;;;2619:1;2607:14;;;;2493:12;2463:222;;;2467:3;2713:6;2704:7;2701:19;2698:201;;;2774:19;;;2768:26;-1:-1:-1;;2857:1:27;2853:14;;;2869:3;2849:24;2845:37;2841:42;2826:58;2811:74;;2698:201;-1:-1:-1;;;;2945:1:27;2929:14;;;2925:22;2912:36;;-1:-1:-1;1916:1299:27:o;3714:527::-;3863:2;3852:9;3845:21;3826:4;3895:6;3889:13;3938:6;3933:2;3922:9;3918:18;3911:34;3963:1;3973:140;3987:6;3984:1;3981:13;3973:140;;;4098:2;4082:14;;;4078:23;;4072:30;4067:2;4048:17;;;4044:26;4037:66;4002:10;3973:140;;;3977:3;4162:1;4157:2;4148:6;4137:9;4133:22;4129:31;4122:42;4232:2;4225;4221:7;4216:2;4208:6;4204:15;4200:29;4189:9;4185:45;4181:54;4173:62;;;3714:527;;;;:::o;4246:297::-;4364:12;;4411:4;4400:16;;;4394:23;;4364:12;4429:16;;4426:111;;;-1:-1:-1;;4503:4:27;4499:17;;;;4496:1;4492:25;4488:38;4477:50;;4246:297;-1:-1:-1;4246:297:27:o;:::-;593:1049:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_30":{"entryPoint":null,"id":30,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_1367":{"entryPoint":1374,"id":1367,"parameterSlots":0,"returnSlots":1},"@MINTER_ROLE_7691":{"entryPoint":null,"id":7691,"parameterSlots":0,"returnSlots":0},"@PAUSER_ROLE_7686":{"entryPoint":null,"id":7686,"parameterSlots":0,"returnSlots":0},"@_EIP712Name_3993":{"entryPoint":3209,"id":3993,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_4005":{"entryPoint":3254,"id":4005,"parameterSlots":0,"returnSlots":1},"@_approve_1007":{"entryPoint":3390,"id":1007,"parameterSlots":4,"returnSlots":0},"@_approve_947":{"entryPoint":2163,"id":947,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3923":{"entryPoint":null,"id":3923,"parameterSlots":0,"returnSlots":1},"@_burn_929":{"entryPoint":3094,"id":929,"parameterSlots":2,"returnSlots":0},"@_checkRole_115":{"entryPoint":3614,"id":115,"parameterSlots":2,"returnSlots":0},"@_checkRole_94":{"entryPoint":2392,"id":94,"parameterSlots":1,"returnSlots":0},"@_domainSeparatorV4_3902":{"entryPoint":2550,"id":3902,"parameterSlots":0,"returnSlots":1},"@_grantRole_257":{"entryPoint":2402,"id":257,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_3939":{"entryPoint":3299,"id":3939,"parameterSlots":1,"returnSlots":1},"@_mint_896":{"entryPoint":3040,"id":896,"parameterSlots":2,"returnSlots":0},"@_msgSender_1442":{"entryPoint":null,"id":1442,"parameterSlots":0,"returnSlots":1},"@_pause_1671":{"entryPoint":3148,"id":1671,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_1642":{"entryPoint":3708,"id":1642,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1655":{"entryPoint":3671,"id":1655,"parameterSlots":0,"returnSlots":0},"@_revokeRole_295":{"entryPoint":2849,"id":295,"parameterSlots":2,"returnSlots":1},"@_spendAllowance_1055":{"entryPoint":2176,"id":1055,"parameterSlots":3,"returnSlots":0},"@_throwError_3778":{"entryPoint":4122,"id":3778,"parameterSlots":2,"returnSlots":0},"@_transfer_786":{"entryPoint":2297,"id":786,"parameterSlots":3,"returnSlots":0},"@_unpause_1687":{"entryPoint":2958,"id":1687,"parameterSlots":0,"returnSlots":0},"@_update_1213":{"entryPoint":4307,"id":1213,"parameterSlots":3,"returnSlots":0},"@_update_7780":{"entryPoint":3603,"id":7780,"parameterSlots":3,"returnSlots":0},"@_update_863":{"entryPoint":4389,"id":863,"parameterSlots":3,"returnSlots":0},"@_useNonce_1502":{"entryPoint":null,"id":1502,"parameterSlots":1,"returnSlots":1},"@allowance_683":{"entryPoint":null,"id":683,"parameterSlots":2,"returnSlots":1},"@approve_707":{"entryPoint":1271,"id":707,"parameterSlots":2,"returnSlots":1},"@balanceOf_642":{"entryPoint":null,"id":642,"parameterSlots":1,"returnSlots":1},"@burnFrom_1179":{"entryPoint":1560,"id":1179,"parameterSlots":2,"returnSlots":0},"@burn_1158":{"entryPoint":1550,"id":1158,"parameterSlots":1,"returnSlots":0},"@byteLength_1806":{"entryPoint":4687,"id":1806,"parameterSlots":1,"returnSlots":1},"@decimals_620":{"entryPoint":null,"id":620,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3981":{"entryPoint":1665,"id":3981,"parameterSlots":0,"returnSlots":7},"@getRoleAdmin_129":{"entryPoint":null,"id":129,"parameterSlots":1,"returnSlots":1},"@grantRole_148":{"entryPoint":1331,"id":148,"parameterSlots":2,"returnSlots":0},"@hasRole_81":{"entryPoint":1735,"id":81,"parameterSlots":2,"returnSlots":1},"@mint_7759":{"entryPoint":1498,"id":7759,"parameterSlots":2,"returnSlots":0},"@name_602":{"entryPoint":1125,"id":602,"parameterSlots":0,"returnSlots":1},"@nonces_1357":{"entryPoint":1585,"id":1357,"parameterSlots":1,"returnSlots":1},"@nonces_1487":{"entryPoint":null,"id":1487,"parameterSlots":1,"returnSlots":1},"@pause_7733":{"entryPoint":1615,"id":7733,"parameterSlots":0,"returnSlots":0},"@paused_1630":{"entryPoint":null,"id":1630,"parameterSlots":0,"returnSlots":1},"@permit_1340":{"entryPoint":1807,"id":1340,"parameterSlots":7,"returnSlots":0},"@recover_3729":{"entryPoint":3344,"id":3729,"parameterSlots":4,"returnSlots":1},"@renounceRole_190":{"entryPoint":1389,"id":190,"parameterSlots":2,"returnSlots":0},"@revokeRole_167":{"entryPoint":2126,"id":167,"parameterSlots":2,"returnSlots":0},"@supportsInterface_4115":{"entryPoint":null,"id":4115,"parameterSlots":1,"returnSlots":1},"@supportsInterface_63":{"entryPoint":1070,"id":63,"parameterSlots":1,"returnSlots":1},"@symbol_611":{"entryPoint":1778,"id":611,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_1873":{"entryPoint":3744,"id":1873,"parameterSlots":2,"returnSlots":1},"@toString_1774":{"entryPoint":4326,"id":1774,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4091":{"entryPoint":null,"id":4091,"parameterSlots":2,"returnSlots":1},"@totalSupply_629":{"entryPoint":null,"id":629,"parameterSlots":0,"returnSlots":1},"@transferFrom_739":{"entryPoint":1295,"id":739,"parameterSlots":3,"returnSlots":1},"@transfer_666":{"entryPoint":1793,"id":666,"parameterSlots":2,"returnSlots":1},"@tryRecover_3693":{"entryPoint":3915,"id":3693,"parameterSlots":4,"returnSlots":3},"@unpause_7743":{"entryPoint":1445,"id":7743,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":4865,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5065,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5359,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4935,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":5244,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4893,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":4996,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":5021,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":4727,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":4776,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5092,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4846,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5481,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5401,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":5459,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:9420:27","nodeType":"YulBlock","src":"0:9420:27","statements":[{"nativeSrc":"6:3:27","nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nativeSrc":"83:217:27","nodeType":"YulBlock","src":"83:217:27","statements":[{"body":{"nativeSrc":"129:16:27","nodeType":"YulBlock","src":"129:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"138:1:27","nodeType":"YulLiteral","src":"138:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"141:1:27","nodeType":"YulLiteral","src":"141:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"131:6:27","nodeType":"YulIdentifier","src":"131:6:27"},"nativeSrc":"131:12:27","nodeType":"YulFunctionCall","src":"131:12:27"},"nativeSrc":"131:12:27","nodeType":"YulExpressionStatement","src":"131:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"104:7:27","nodeType":"YulIdentifier","src":"104:7:27"},{"name":"headStart","nativeSrc":"113:9:27","nodeType":"YulIdentifier","src":"113:9:27"}],"functionName":{"name":"sub","nativeSrc":"100:3:27","nodeType":"YulIdentifier","src":"100:3:27"},"nativeSrc":"100:23:27","nodeType":"YulFunctionCall","src":"100:23:27"},{"kind":"number","nativeSrc":"125:2:27","nodeType":"YulLiteral","src":"125:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"96:3:27","nodeType":"YulIdentifier","src":"96:3:27"},"nativeSrc":"96:32:27","nodeType":"YulFunctionCall","src":"96:32:27"},"nativeSrc":"93:52:27","nodeType":"YulIf","src":"93:52:27"},{"nativeSrc":"154:36:27","nodeType":"YulVariableDeclaration","src":"154:36:27","value":{"arguments":[{"name":"headStart","nativeSrc":"180:9:27","nodeType":"YulIdentifier","src":"180:9:27"}],"functionName":{"name":"calldataload","nativeSrc":"167:12:27","nodeType":"YulIdentifier","src":"167:12:27"},"nativeSrc":"167:23:27","nodeType":"YulFunctionCall","src":"167:23:27"},"variables":[{"name":"value","nativeSrc":"158:5:27","nodeType":"YulTypedName","src":"158:5:27","type":""}]},{"body":{"nativeSrc":"254:16:27","nodeType":"YulBlock","src":"254:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"263:1:27","nodeType":"YulLiteral","src":"263:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"266:1:27","nodeType":"YulLiteral","src":"266:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"256:6:27","nodeType":"YulIdentifier","src":"256:6:27"},"nativeSrc":"256:12:27","nodeType":"YulFunctionCall","src":"256:12:27"},"nativeSrc":"256:12:27","nodeType":"YulExpressionStatement","src":"256:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"212:5:27","nodeType":"YulIdentifier","src":"212:5:27"},{"arguments":[{"name":"value","nativeSrc":"223:5:27","nodeType":"YulIdentifier","src":"223:5:27"},{"arguments":[{"kind":"number","nativeSrc":"234:3:27","nodeType":"YulLiteral","src":"234:3:27","type":"","value":"224"},{"kind":"number","nativeSrc":"239:10:27","nodeType":"YulLiteral","src":"239:10:27","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"230:3:27","nodeType":"YulIdentifier","src":"230:3:27"},"nativeSrc":"230:20:27","nodeType":"YulFunctionCall","src":"230:20:27"}],"functionName":{"name":"and","nativeSrc":"219:3:27","nodeType":"YulIdentifier","src":"219:3:27"},"nativeSrc":"219:32:27","nodeType":"YulFunctionCall","src":"219:32:27"}],"functionName":{"name":"eq","nativeSrc":"209:2:27","nodeType":"YulIdentifier","src":"209:2:27"},"nativeSrc":"209:43:27","nodeType":"YulFunctionCall","src":"209:43:27"}],"functionName":{"name":"iszero","nativeSrc":"202:6:27","nodeType":"YulIdentifier","src":"202:6:27"},"nativeSrc":"202:51:27","nodeType":"YulFunctionCall","src":"202:51:27"},"nativeSrc":"199:71:27","nodeType":"YulIf","src":"199:71:27"},{"nativeSrc":"279:15:27","nodeType":"YulAssignment","src":"279:15:27","value":{"name":"value","nativeSrc":"289:5:27","nodeType":"YulIdentifier","src":"289:5:27"},"variableNames":[{"name":"value0","nativeSrc":"279:6:27","nodeType":"YulIdentifier","src":"279:6:27"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"14:286:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49:9:27","nodeType":"YulTypedName","src":"49:9:27","type":""},{"name":"dataEnd","nativeSrc":"60:7:27","nodeType":"YulTypedName","src":"60:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"72:6:27","nodeType":"YulTypedName","src":"72:6:27","type":""}],"src":"14:286:27"},{"body":{"nativeSrc":"400:92:27","nodeType":"YulBlock","src":"400:92:27","statements":[{"nativeSrc":"410:26:27","nodeType":"YulAssignment","src":"410:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"422:9:27","nodeType":"YulIdentifier","src":"422:9:27"},{"kind":"number","nativeSrc":"433:2:27","nodeType":"YulLiteral","src":"433:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"418:3:27","nodeType":"YulIdentifier","src":"418:3:27"},"nativeSrc":"418:18:27","nodeType":"YulFunctionCall","src":"418:18:27"},"variableNames":[{"name":"tail","nativeSrc":"410:4:27","nodeType":"YulIdentifier","src":"410:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"452:9:27","nodeType":"YulIdentifier","src":"452:9:27"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"477:6:27","nodeType":"YulIdentifier","src":"477:6:27"}],"functionName":{"name":"iszero","nativeSrc":"470:6:27","nodeType":"YulIdentifier","src":"470:6:27"},"nativeSrc":"470:14:27","nodeType":"YulFunctionCall","src":"470:14:27"}],"functionName":{"name":"iszero","nativeSrc":"463:6:27","nodeType":"YulIdentifier","src":"463:6:27"},"nativeSrc":"463:22:27","nodeType":"YulFunctionCall","src":"463:22:27"}],"functionName":{"name":"mstore","nativeSrc":"445:6:27","nodeType":"YulIdentifier","src":"445:6:27"},"nativeSrc":"445:41:27","nodeType":"YulFunctionCall","src":"445:41:27"},"nativeSrc":"445:41:27","nodeType":"YulExpressionStatement","src":"445:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"305:187:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"369:9:27","nodeType":"YulTypedName","src":"369:9:27","type":""},{"name":"value0","nativeSrc":"380:6:27","nodeType":"YulTypedName","src":"380:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"391:4:27","nodeType":"YulTypedName","src":"391:4:27","type":""}],"src":"305:187:27"},{"body":{"nativeSrc":"547:350:27","nodeType":"YulBlock","src":"547:350:27","statements":[{"nativeSrc":"557:26:27","nodeType":"YulVariableDeclaration","src":"557:26:27","value":{"arguments":[{"name":"value","nativeSrc":"577:5:27","nodeType":"YulIdentifier","src":"577:5:27"}],"functionName":{"name":"mload","nativeSrc":"571:5:27","nodeType":"YulIdentifier","src":"571:5:27"},"nativeSrc":"571:12:27","nodeType":"YulFunctionCall","src":"571:12:27"},"variables":[{"name":"length","nativeSrc":"561:6:27","nodeType":"YulTypedName","src":"561:6:27","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"599:3:27","nodeType":"YulIdentifier","src":"599:3:27"},{"name":"length","nativeSrc":"604:6:27","nodeType":"YulIdentifier","src":"604:6:27"}],"functionName":{"name":"mstore","nativeSrc":"592:6:27","nodeType":"YulIdentifier","src":"592:6:27"},"nativeSrc":"592:19:27","nodeType":"YulFunctionCall","src":"592:19:27"},"nativeSrc":"592:19:27","nodeType":"YulExpressionStatement","src":"592:19:27"},{"nativeSrc":"620:10:27","nodeType":"YulVariableDeclaration","src":"620:10:27","value":{"kind":"number","nativeSrc":"629:1:27","nodeType":"YulLiteral","src":"629:1:27","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"624:1:27","nodeType":"YulTypedName","src":"624:1:27","type":""}]},{"body":{"nativeSrc":"691:87:27","nodeType":"YulBlock","src":"691:87:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"720:3:27","nodeType":"YulIdentifier","src":"720:3:27"},{"name":"i","nativeSrc":"725:1:27","nodeType":"YulIdentifier","src":"725:1:27"}],"functionName":{"name":"add","nativeSrc":"716:3:27","nodeType":"YulIdentifier","src":"716:3:27"},"nativeSrc":"716:11:27","nodeType":"YulFunctionCall","src":"716:11:27"},{"kind":"number","nativeSrc":"729:4:27","nodeType":"YulLiteral","src":"729:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"712:3:27","nodeType":"YulIdentifier","src":"712:3:27"},"nativeSrc":"712:22:27","nodeType":"YulFunctionCall","src":"712:22:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"750:5:27","nodeType":"YulIdentifier","src":"750:5:27"},{"name":"i","nativeSrc":"757:1:27","nodeType":"YulIdentifier","src":"757:1:27"}],"functionName":{"name":"add","nativeSrc":"746:3:27","nodeType":"YulIdentifier","src":"746:3:27"},"nativeSrc":"746:13:27","nodeType":"YulFunctionCall","src":"746:13:27"},{"kind":"number","nativeSrc":"761:4:27","nodeType":"YulLiteral","src":"761:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"742:3:27","nodeType":"YulIdentifier","src":"742:3:27"},"nativeSrc":"742:24:27","nodeType":"YulFunctionCall","src":"742:24:27"}],"functionName":{"name":"mload","nativeSrc":"736:5:27","nodeType":"YulIdentifier","src":"736:5:27"},"nativeSrc":"736:31:27","nodeType":"YulFunctionCall","src":"736:31:27"}],"functionName":{"name":"mstore","nativeSrc":"705:6:27","nodeType":"YulIdentifier","src":"705:6:27"},"nativeSrc":"705:63:27","nodeType":"YulFunctionCall","src":"705:63:27"},"nativeSrc":"705:63:27","nodeType":"YulExpressionStatement","src":"705:63:27"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"650:1:27","nodeType":"YulIdentifier","src":"650:1:27"},{"name":"length","nativeSrc":"653:6:27","nodeType":"YulIdentifier","src":"653:6:27"}],"functionName":{"name":"lt","nativeSrc":"647:2:27","nodeType":"YulIdentifier","src":"647:2:27"},"nativeSrc":"647:13:27","nodeType":"YulFunctionCall","src":"647:13:27"},"nativeSrc":"639:139:27","nodeType":"YulForLoop","post":{"nativeSrc":"661:21:27","nodeType":"YulBlock","src":"661:21:27","statements":[{"nativeSrc":"663:17:27","nodeType":"YulAssignment","src":"663:17:27","value":{"arguments":[{"name":"i","nativeSrc":"672:1:27","nodeType":"YulIdentifier","src":"672:1:27"},{"kind":"number","nativeSrc":"675:4:27","nodeType":"YulLiteral","src":"675:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"668:3:27","nodeType":"YulIdentifier","src":"668:3:27"},"nativeSrc":"668:12:27","nodeType":"YulFunctionCall","src":"668:12:27"},"variableNames":[{"name":"i","nativeSrc":"663:1:27","nodeType":"YulIdentifier","src":"663:1:27"}]}]},"pre":{"nativeSrc":"643:3:27","nodeType":"YulBlock","src":"643:3:27","statements":[]},"src":"639:139:27"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"802:3:27","nodeType":"YulIdentifier","src":"802:3:27"},{"name":"length","nativeSrc":"807:6:27","nodeType":"YulIdentifier","src":"807:6:27"}],"functionName":{"name":"add","nativeSrc":"798:3:27","nodeType":"YulIdentifier","src":"798:3:27"},"nativeSrc":"798:16:27","nodeType":"YulFunctionCall","src":"798:16:27"},{"kind":"number","nativeSrc":"816:4:27","nodeType":"YulLiteral","src":"816:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"794:3:27","nodeType":"YulIdentifier","src":"794:3:27"},"nativeSrc":"794:27:27","nodeType":"YulFunctionCall","src":"794:27:27"},{"kind":"number","nativeSrc":"823:1:27","nodeType":"YulLiteral","src":"823:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"787:6:27","nodeType":"YulIdentifier","src":"787:6:27"},"nativeSrc":"787:38:27","nodeType":"YulFunctionCall","src":"787:38:27"},"nativeSrc":"787:38:27","nodeType":"YulExpressionStatement","src":"787:38:27"},{"nativeSrc":"834:57:27","nodeType":"YulAssignment","src":"834:57:27","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"849:3:27","nodeType":"YulIdentifier","src":"849:3:27"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"862:6:27","nodeType":"YulIdentifier","src":"862:6:27"},{"kind":"number","nativeSrc":"870:2:27","nodeType":"YulLiteral","src":"870:2:27","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"858:3:27","nodeType":"YulIdentifier","src":"858:3:27"},"nativeSrc":"858:15:27","nodeType":"YulFunctionCall","src":"858:15:27"},{"arguments":[{"kind":"number","nativeSrc":"879:2:27","nodeType":"YulLiteral","src":"879:2:27","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"875:3:27","nodeType":"YulIdentifier","src":"875:3:27"},"nativeSrc":"875:7:27","nodeType":"YulFunctionCall","src":"875:7:27"}],"functionName":{"name":"and","nativeSrc":"854:3:27","nodeType":"YulIdentifier","src":"854:3:27"},"nativeSrc":"854:29:27","nodeType":"YulFunctionCall","src":"854:29:27"}],"functionName":{"name":"add","nativeSrc":"845:3:27","nodeType":"YulIdentifier","src":"845:3:27"},"nativeSrc":"845:39:27","nodeType":"YulFunctionCall","src":"845:39:27"},{"kind":"number","nativeSrc":"886:4:27","nodeType":"YulLiteral","src":"886:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"841:3:27","nodeType":"YulIdentifier","src":"841:3:27"},"nativeSrc":"841:50:27","nodeType":"YulFunctionCall","src":"841:50:27"},"variableNames":[{"name":"end","nativeSrc":"834:3:27","nodeType":"YulIdentifier","src":"834:3:27"}]}]},"name":"abi_encode_string","nativeSrc":"497:400:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:27","nodeType":"YulTypedName","src":"524:5:27","type":""},{"name":"pos","nativeSrc":"531:3:27","nodeType":"YulTypedName","src":"531:3:27","type":""}],"returnVariables":[{"name":"end","nativeSrc":"539:3:27","nodeType":"YulTypedName","src":"539:3:27","type":""}],"src":"497:400:27"},{"body":{"nativeSrc":"1023:99:27","nodeType":"YulBlock","src":"1023:99:27","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1040:9:27","nodeType":"YulIdentifier","src":"1040:9:27"},{"kind":"number","nativeSrc":"1051:2:27","nodeType":"YulLiteral","src":"1051:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1033:6:27","nodeType":"YulIdentifier","src":"1033:6:27"},"nativeSrc":"1033:21:27","nodeType":"YulFunctionCall","src":"1033:21:27"},"nativeSrc":"1033:21:27","nodeType":"YulExpressionStatement","src":"1033:21:27"},{"nativeSrc":"1063:53:27","nodeType":"YulAssignment","src":"1063:53:27","value":{"arguments":[{"name":"value0","nativeSrc":"1089:6:27","nodeType":"YulIdentifier","src":"1089:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"1101:9:27","nodeType":"YulIdentifier","src":"1101:9:27"},{"kind":"number","nativeSrc":"1112:2:27","nodeType":"YulLiteral","src":"1112:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1097:3:27","nodeType":"YulIdentifier","src":"1097:3:27"},"nativeSrc":"1097:18:27","nodeType":"YulFunctionCall","src":"1097:18:27"}],"functionName":{"name":"abi_encode_string","nativeSrc":"1071:17:27","nodeType":"YulIdentifier","src":"1071:17:27"},"nativeSrc":"1071:45:27","nodeType":"YulFunctionCall","src":"1071:45:27"},"variableNames":[{"name":"tail","nativeSrc":"1063:4:27","nodeType":"YulIdentifier","src":"1063:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"902:220:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"992:9:27","nodeType":"YulTypedName","src":"992:9:27","type":""},{"name":"value0","nativeSrc":"1003:6:27","nodeType":"YulTypedName","src":"1003:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1014:4:27","nodeType":"YulTypedName","src":"1014:4:27","type":""}],"src":"902:220:27"},{"body":{"nativeSrc":"1176:124:27","nodeType":"YulBlock","src":"1176:124:27","statements":[{"nativeSrc":"1186:29:27","nodeType":"YulAssignment","src":"1186:29:27","value":{"arguments":[{"name":"offset","nativeSrc":"1208:6:27","nodeType":"YulIdentifier","src":"1208:6:27"}],"functionName":{"name":"calldataload","nativeSrc":"1195:12:27","nodeType":"YulIdentifier","src":"1195:12:27"},"nativeSrc":"1195:20:27","nodeType":"YulFunctionCall","src":"1195:20:27"},"variableNames":[{"name":"value","nativeSrc":"1186:5:27","nodeType":"YulIdentifier","src":"1186:5:27"}]},{"body":{"nativeSrc":"1278:16:27","nodeType":"YulBlock","src":"1278:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1287:1:27","nodeType":"YulLiteral","src":"1287:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1290:1:27","nodeType":"YulLiteral","src":"1290:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1280:6:27","nodeType":"YulIdentifier","src":"1280:6:27"},"nativeSrc":"1280:12:27","nodeType":"YulFunctionCall","src":"1280:12:27"},"nativeSrc":"1280:12:27","nodeType":"YulExpressionStatement","src":"1280:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1237:5:27","nodeType":"YulIdentifier","src":"1237:5:27"},{"arguments":[{"name":"value","nativeSrc":"1248:5:27","nodeType":"YulIdentifier","src":"1248:5:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1263:3:27","nodeType":"YulLiteral","src":"1263:3:27","type":"","value":"160"},{"kind":"number","nativeSrc":"1268:1:27","nodeType":"YulLiteral","src":"1268:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1259:3:27","nodeType":"YulIdentifier","src":"1259:3:27"},"nativeSrc":"1259:11:27","nodeType":"YulFunctionCall","src":"1259:11:27"},{"kind":"number","nativeSrc":"1272:1:27","nodeType":"YulLiteral","src":"1272:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1255:3:27","nodeType":"YulIdentifier","src":"1255:3:27"},"nativeSrc":"1255:19:27","nodeType":"YulFunctionCall","src":"1255:19:27"}],"functionName":{"name":"and","nativeSrc":"1244:3:27","nodeType":"YulIdentifier","src":"1244:3:27"},"nativeSrc":"1244:31:27","nodeType":"YulFunctionCall","src":"1244:31:27"}],"functionName":{"name":"eq","nativeSrc":"1234:2:27","nodeType":"YulIdentifier","src":"1234:2:27"},"nativeSrc":"1234:42:27","nodeType":"YulFunctionCall","src":"1234:42:27"}],"functionName":{"name":"iszero","nativeSrc":"1227:6:27","nodeType":"YulIdentifier","src":"1227:6:27"},"nativeSrc":"1227:50:27","nodeType":"YulFunctionCall","src":"1227:50:27"},"nativeSrc":"1224:70:27","nodeType":"YulIf","src":"1224:70:27"}]},"name":"abi_decode_address","nativeSrc":"1127:173:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1155:6:27","nodeType":"YulTypedName","src":"1155:6:27","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1166:5:27","nodeType":"YulTypedName","src":"1166:5:27","type":""}],"src":"1127:173:27"},{"body":{"nativeSrc":"1392:213:27","nodeType":"YulBlock","src":"1392:213:27","statements":[{"body":{"nativeSrc":"1438:16:27","nodeType":"YulBlock","src":"1438:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1447:1:27","nodeType":"YulLiteral","src":"1447:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1450:1:27","nodeType":"YulLiteral","src":"1450:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1440:6:27","nodeType":"YulIdentifier","src":"1440:6:27"},"nativeSrc":"1440:12:27","nodeType":"YulFunctionCall","src":"1440:12:27"},"nativeSrc":"1440:12:27","nodeType":"YulExpressionStatement","src":"1440:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1413:7:27","nodeType":"YulIdentifier","src":"1413:7:27"},{"name":"headStart","nativeSrc":"1422:9:27","nodeType":"YulIdentifier","src":"1422:9:27"}],"functionName":{"name":"sub","nativeSrc":"1409:3:27","nodeType":"YulIdentifier","src":"1409:3:27"},"nativeSrc":"1409:23:27","nodeType":"YulFunctionCall","src":"1409:23:27"},{"kind":"number","nativeSrc":"1434:2:27","nodeType":"YulLiteral","src":"1434:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1405:3:27","nodeType":"YulIdentifier","src":"1405:3:27"},"nativeSrc":"1405:32:27","nodeType":"YulFunctionCall","src":"1405:32:27"},"nativeSrc":"1402:52:27","nodeType":"YulIf","src":"1402:52:27"},{"nativeSrc":"1463:39:27","nodeType":"YulAssignment","src":"1463:39:27","value":{"arguments":[{"name":"headStart","nativeSrc":"1492:9:27","nodeType":"YulIdentifier","src":"1492:9:27"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1473:18:27","nodeType":"YulIdentifier","src":"1473:18:27"},"nativeSrc":"1473:29:27","nodeType":"YulFunctionCall","src":"1473:29:27"},"variableNames":[{"name":"value0","nativeSrc":"1463:6:27","nodeType":"YulIdentifier","src":"1463:6:27"}]},{"nativeSrc":"1511:14:27","nodeType":"YulVariableDeclaration","src":"1511:14:27","value":{"kind":"number","nativeSrc":"1524:1:27","nodeType":"YulLiteral","src":"1524:1:27","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1515:5:27","nodeType":"YulTypedName","src":"1515:5:27","type":""}]},{"nativeSrc":"1534:41:27","nodeType":"YulAssignment","src":"1534:41:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1560:9:27","nodeType":"YulIdentifier","src":"1560:9:27"},{"kind":"number","nativeSrc":"1571:2:27","nodeType":"YulLiteral","src":"1571:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1556:3:27","nodeType":"YulIdentifier","src":"1556:3:27"},"nativeSrc":"1556:18:27","nodeType":"YulFunctionCall","src":"1556:18:27"}],"functionName":{"name":"calldataload","nativeSrc":"1543:12:27","nodeType":"YulIdentifier","src":"1543:12:27"},"nativeSrc":"1543:32:27","nodeType":"YulFunctionCall","src":"1543:32:27"},"variableNames":[{"name":"value","nativeSrc":"1534:5:27","nodeType":"YulIdentifier","src":"1534:5:27"}]},{"nativeSrc":"1584:15:27","nodeType":"YulAssignment","src":"1584:15:27","value":{"name":"value","nativeSrc":"1594:5:27","nodeType":"YulIdentifier","src":"1594:5:27"},"variableNames":[{"name":"value1","nativeSrc":"1584:6:27","nodeType":"YulIdentifier","src":"1584:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1305:300:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1350:9:27","nodeType":"YulTypedName","src":"1350:9:27","type":""},{"name":"dataEnd","nativeSrc":"1361:7:27","nodeType":"YulTypedName","src":"1361:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1373:6:27","nodeType":"YulTypedName","src":"1373:6:27","type":""},{"name":"value1","nativeSrc":"1381:6:27","nodeType":"YulTypedName","src":"1381:6:27","type":""}],"src":"1305:300:27"},{"body":{"nativeSrc":"1711:76:27","nodeType":"YulBlock","src":"1711:76:27","statements":[{"nativeSrc":"1721:26:27","nodeType":"YulAssignment","src":"1721:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"1733:9:27","nodeType":"YulIdentifier","src":"1733:9:27"},{"kind":"number","nativeSrc":"1744:2:27","nodeType":"YulLiteral","src":"1744:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1729:3:27","nodeType":"YulIdentifier","src":"1729:3:27"},"nativeSrc":"1729:18:27","nodeType":"YulFunctionCall","src":"1729:18:27"},"variableNames":[{"name":"tail","nativeSrc":"1721:4:27","nodeType":"YulIdentifier","src":"1721:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1763:9:27","nodeType":"YulIdentifier","src":"1763:9:27"},{"name":"value0","nativeSrc":"1774:6:27","nodeType":"YulIdentifier","src":"1774:6:27"}],"functionName":{"name":"mstore","nativeSrc":"1756:6:27","nodeType":"YulIdentifier","src":"1756:6:27"},"nativeSrc":"1756:25:27","nodeType":"YulFunctionCall","src":"1756:25:27"},"nativeSrc":"1756:25:27","nodeType":"YulExpressionStatement","src":"1756:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1610:177:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1680:9:27","nodeType":"YulTypedName","src":"1680:9:27","type":""},{"name":"value0","nativeSrc":"1691:6:27","nodeType":"YulTypedName","src":"1691:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1702:4:27","nodeType":"YulTypedName","src":"1702:4:27","type":""}],"src":"1610:177:27"},{"body":{"nativeSrc":"1896:270:27","nodeType":"YulBlock","src":"1896:270:27","statements":[{"body":{"nativeSrc":"1942:16:27","nodeType":"YulBlock","src":"1942:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1951:1:27","nodeType":"YulLiteral","src":"1951:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"1954:1:27","nodeType":"YulLiteral","src":"1954:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1944:6:27","nodeType":"YulIdentifier","src":"1944:6:27"},"nativeSrc":"1944:12:27","nodeType":"YulFunctionCall","src":"1944:12:27"},"nativeSrc":"1944:12:27","nodeType":"YulExpressionStatement","src":"1944:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1917:7:27","nodeType":"YulIdentifier","src":"1917:7:27"},{"name":"headStart","nativeSrc":"1926:9:27","nodeType":"YulIdentifier","src":"1926:9:27"}],"functionName":{"name":"sub","nativeSrc":"1913:3:27","nodeType":"YulIdentifier","src":"1913:3:27"},"nativeSrc":"1913:23:27","nodeType":"YulFunctionCall","src":"1913:23:27"},{"kind":"number","nativeSrc":"1938:2:27","nodeType":"YulLiteral","src":"1938:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1909:3:27","nodeType":"YulIdentifier","src":"1909:3:27"},"nativeSrc":"1909:32:27","nodeType":"YulFunctionCall","src":"1909:32:27"},"nativeSrc":"1906:52:27","nodeType":"YulIf","src":"1906:52:27"},{"nativeSrc":"1967:39:27","nodeType":"YulAssignment","src":"1967:39:27","value":{"arguments":[{"name":"headStart","nativeSrc":"1996:9:27","nodeType":"YulIdentifier","src":"1996:9:27"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1977:18:27","nodeType":"YulIdentifier","src":"1977:18:27"},"nativeSrc":"1977:29:27","nodeType":"YulFunctionCall","src":"1977:29:27"},"variableNames":[{"name":"value0","nativeSrc":"1967:6:27","nodeType":"YulIdentifier","src":"1967:6:27"}]},{"nativeSrc":"2015:48:27","nodeType":"YulAssignment","src":"2015:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2048:9:27","nodeType":"YulIdentifier","src":"2048:9:27"},{"kind":"number","nativeSrc":"2059:2:27","nodeType":"YulLiteral","src":"2059:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2044:3:27","nodeType":"YulIdentifier","src":"2044:3:27"},"nativeSrc":"2044:18:27","nodeType":"YulFunctionCall","src":"2044:18:27"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2025:18:27","nodeType":"YulIdentifier","src":"2025:18:27"},"nativeSrc":"2025:38:27","nodeType":"YulFunctionCall","src":"2025:38:27"},"variableNames":[{"name":"value1","nativeSrc":"2015:6:27","nodeType":"YulIdentifier","src":"2015:6:27"}]},{"nativeSrc":"2072:14:27","nodeType":"YulVariableDeclaration","src":"2072:14:27","value":{"kind":"number","nativeSrc":"2085:1:27","nodeType":"YulLiteral","src":"2085:1:27","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2076:5:27","nodeType":"YulTypedName","src":"2076:5:27","type":""}]},{"nativeSrc":"2095:41:27","nodeType":"YulAssignment","src":"2095:41:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2121:9:27","nodeType":"YulIdentifier","src":"2121:9:27"},{"kind":"number","nativeSrc":"2132:2:27","nodeType":"YulLiteral","src":"2132:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2117:3:27","nodeType":"YulIdentifier","src":"2117:3:27"},"nativeSrc":"2117:18:27","nodeType":"YulFunctionCall","src":"2117:18:27"}],"functionName":{"name":"calldataload","nativeSrc":"2104:12:27","nodeType":"YulIdentifier","src":"2104:12:27"},"nativeSrc":"2104:32:27","nodeType":"YulFunctionCall","src":"2104:32:27"},"variableNames":[{"name":"value","nativeSrc":"2095:5:27","nodeType":"YulIdentifier","src":"2095:5:27"}]},{"nativeSrc":"2145:15:27","nodeType":"YulAssignment","src":"2145:15:27","value":{"name":"value","nativeSrc":"2155:5:27","nodeType":"YulIdentifier","src":"2155:5:27"},"variableNames":[{"name":"value2","nativeSrc":"2145:6:27","nodeType":"YulIdentifier","src":"2145:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1792:374:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1846:9:27","nodeType":"YulTypedName","src":"1846:9:27","type":""},{"name":"dataEnd","nativeSrc":"1857:7:27","nodeType":"YulTypedName","src":"1857:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1869:6:27","nodeType":"YulTypedName","src":"1869:6:27","type":""},{"name":"value1","nativeSrc":"1877:6:27","nodeType":"YulTypedName","src":"1877:6:27","type":""},{"name":"value2","nativeSrc":"1885:6:27","nodeType":"YulTypedName","src":"1885:6:27","type":""}],"src":"1792:374:27"},{"body":{"nativeSrc":"2241:156:27","nodeType":"YulBlock","src":"2241:156:27","statements":[{"body":{"nativeSrc":"2287:16:27","nodeType":"YulBlock","src":"2287:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2296:1:27","nodeType":"YulLiteral","src":"2296:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"2299:1:27","nodeType":"YulLiteral","src":"2299:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2289:6:27","nodeType":"YulIdentifier","src":"2289:6:27"},"nativeSrc":"2289:12:27","nodeType":"YulFunctionCall","src":"2289:12:27"},"nativeSrc":"2289:12:27","nodeType":"YulExpressionStatement","src":"2289:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2262:7:27","nodeType":"YulIdentifier","src":"2262:7:27"},{"name":"headStart","nativeSrc":"2271:9:27","nodeType":"YulIdentifier","src":"2271:9:27"}],"functionName":{"name":"sub","nativeSrc":"2258:3:27","nodeType":"YulIdentifier","src":"2258:3:27"},"nativeSrc":"2258:23:27","nodeType":"YulFunctionCall","src":"2258:23:27"},{"kind":"number","nativeSrc":"2283:2:27","nodeType":"YulLiteral","src":"2283:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2254:3:27","nodeType":"YulIdentifier","src":"2254:3:27"},"nativeSrc":"2254:32:27","nodeType":"YulFunctionCall","src":"2254:32:27"},"nativeSrc":"2251:52:27","nodeType":"YulIf","src":"2251:52:27"},{"nativeSrc":"2312:14:27","nodeType":"YulVariableDeclaration","src":"2312:14:27","value":{"kind":"number","nativeSrc":"2325:1:27","nodeType":"YulLiteral","src":"2325:1:27","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2316:5:27","nodeType":"YulTypedName","src":"2316:5:27","type":""}]},{"nativeSrc":"2335:32:27","nodeType":"YulAssignment","src":"2335:32:27","value":{"arguments":[{"name":"headStart","nativeSrc":"2357:9:27","nodeType":"YulIdentifier","src":"2357:9:27"}],"functionName":{"name":"calldataload","nativeSrc":"2344:12:27","nodeType":"YulIdentifier","src":"2344:12:27"},"nativeSrc":"2344:23:27","nodeType":"YulFunctionCall","src":"2344:23:27"},"variableNames":[{"name":"value","nativeSrc":"2335:5:27","nodeType":"YulIdentifier","src":"2335:5:27"}]},{"nativeSrc":"2376:15:27","nodeType":"YulAssignment","src":"2376:15:27","value":{"name":"value","nativeSrc":"2386:5:27","nodeType":"YulIdentifier","src":"2386:5:27"},"variableNames":[{"name":"value0","nativeSrc":"2376:6:27","nodeType":"YulIdentifier","src":"2376:6:27"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"2171:226:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2207:9:27","nodeType":"YulTypedName","src":"2207:9:27","type":""},{"name":"dataEnd","nativeSrc":"2218:7:27","nodeType":"YulTypedName","src":"2218:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2230:6:27","nodeType":"YulTypedName","src":"2230:6:27","type":""}],"src":"2171:226:27"},{"body":{"nativeSrc":"2503:76:27","nodeType":"YulBlock","src":"2503:76:27","statements":[{"nativeSrc":"2513:26:27","nodeType":"YulAssignment","src":"2513:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"2525:9:27","nodeType":"YulIdentifier","src":"2525:9:27"},{"kind":"number","nativeSrc":"2536:2:27","nodeType":"YulLiteral","src":"2536:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2521:3:27","nodeType":"YulIdentifier","src":"2521:3:27"},"nativeSrc":"2521:18:27","nodeType":"YulFunctionCall","src":"2521:18:27"},"variableNames":[{"name":"tail","nativeSrc":"2513:4:27","nodeType":"YulIdentifier","src":"2513:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2555:9:27","nodeType":"YulIdentifier","src":"2555:9:27"},{"name":"value0","nativeSrc":"2566:6:27","nodeType":"YulIdentifier","src":"2566:6:27"}],"functionName":{"name":"mstore","nativeSrc":"2548:6:27","nodeType":"YulIdentifier","src":"2548:6:27"},"nativeSrc":"2548:25:27","nodeType":"YulFunctionCall","src":"2548:25:27"},"nativeSrc":"2548:25:27","nodeType":"YulExpressionStatement","src":"2548:25:27"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"2402:177:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2472:9:27","nodeType":"YulTypedName","src":"2472:9:27","type":""},{"name":"value0","nativeSrc":"2483:6:27","nodeType":"YulTypedName","src":"2483:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2494:4:27","nodeType":"YulTypedName","src":"2494:4:27","type":""}],"src":"2402:177:27"},{"body":{"nativeSrc":"2671:213:27","nodeType":"YulBlock","src":"2671:213:27","statements":[{"body":{"nativeSrc":"2717:16:27","nodeType":"YulBlock","src":"2717:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2726:1:27","nodeType":"YulLiteral","src":"2726:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"2729:1:27","nodeType":"YulLiteral","src":"2729:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2719:6:27","nodeType":"YulIdentifier","src":"2719:6:27"},"nativeSrc":"2719:12:27","nodeType":"YulFunctionCall","src":"2719:12:27"},"nativeSrc":"2719:12:27","nodeType":"YulExpressionStatement","src":"2719:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2692:7:27","nodeType":"YulIdentifier","src":"2692:7:27"},{"name":"headStart","nativeSrc":"2701:9:27","nodeType":"YulIdentifier","src":"2701:9:27"}],"functionName":{"name":"sub","nativeSrc":"2688:3:27","nodeType":"YulIdentifier","src":"2688:3:27"},"nativeSrc":"2688:23:27","nodeType":"YulFunctionCall","src":"2688:23:27"},{"kind":"number","nativeSrc":"2713:2:27","nodeType":"YulLiteral","src":"2713:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2684:3:27","nodeType":"YulIdentifier","src":"2684:3:27"},"nativeSrc":"2684:32:27","nodeType":"YulFunctionCall","src":"2684:32:27"},"nativeSrc":"2681:52:27","nodeType":"YulIf","src":"2681:52:27"},{"nativeSrc":"2742:14:27","nodeType":"YulVariableDeclaration","src":"2742:14:27","value":{"kind":"number","nativeSrc":"2755:1:27","nodeType":"YulLiteral","src":"2755:1:27","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2746:5:27","nodeType":"YulTypedName","src":"2746:5:27","type":""}]},{"nativeSrc":"2765:32:27","nodeType":"YulAssignment","src":"2765:32:27","value":{"arguments":[{"name":"headStart","nativeSrc":"2787:9:27","nodeType":"YulIdentifier","src":"2787:9:27"}],"functionName":{"name":"calldataload","nativeSrc":"2774:12:27","nodeType":"YulIdentifier","src":"2774:12:27"},"nativeSrc":"2774:23:27","nodeType":"YulFunctionCall","src":"2774:23:27"},"variableNames":[{"name":"value","nativeSrc":"2765:5:27","nodeType":"YulIdentifier","src":"2765:5:27"}]},{"nativeSrc":"2806:15:27","nodeType":"YulAssignment","src":"2806:15:27","value":{"name":"value","nativeSrc":"2816:5:27","nodeType":"YulIdentifier","src":"2816:5:27"},"variableNames":[{"name":"value0","nativeSrc":"2806:6:27","nodeType":"YulIdentifier","src":"2806:6:27"}]},{"nativeSrc":"2830:48:27","nodeType":"YulAssignment","src":"2830:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2863:9:27","nodeType":"YulIdentifier","src":"2863:9:27"},{"kind":"number","nativeSrc":"2874:2:27","nodeType":"YulLiteral","src":"2874:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2859:3:27","nodeType":"YulIdentifier","src":"2859:3:27"},"nativeSrc":"2859:18:27","nodeType":"YulFunctionCall","src":"2859:18:27"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2840:18:27","nodeType":"YulIdentifier","src":"2840:18:27"},"nativeSrc":"2840:38:27","nodeType":"YulFunctionCall","src":"2840:38:27"},"variableNames":[{"name":"value1","nativeSrc":"2830:6:27","nodeType":"YulIdentifier","src":"2830:6:27"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"2584:300:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2629:9:27","nodeType":"YulTypedName","src":"2629:9:27","type":""},{"name":"dataEnd","nativeSrc":"2640:7:27","nodeType":"YulTypedName","src":"2640:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2652:6:27","nodeType":"YulTypedName","src":"2652:6:27","type":""},{"name":"value1","nativeSrc":"2660:6:27","nodeType":"YulTypedName","src":"2660:6:27","type":""}],"src":"2584:300:27"},{"body":{"nativeSrc":"2986:87:27","nodeType":"YulBlock","src":"2986:87:27","statements":[{"nativeSrc":"2996:26:27","nodeType":"YulAssignment","src":"2996:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"3008:9:27","nodeType":"YulIdentifier","src":"3008:9:27"},{"kind":"number","nativeSrc":"3019:2:27","nodeType":"YulLiteral","src":"3019:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3004:3:27","nodeType":"YulIdentifier","src":"3004:3:27"},"nativeSrc":"3004:18:27","nodeType":"YulFunctionCall","src":"3004:18:27"},"variableNames":[{"name":"tail","nativeSrc":"2996:4:27","nodeType":"YulIdentifier","src":"2996:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3038:9:27","nodeType":"YulIdentifier","src":"3038:9:27"},{"arguments":[{"name":"value0","nativeSrc":"3053:6:27","nodeType":"YulIdentifier","src":"3053:6:27"},{"kind":"number","nativeSrc":"3061:4:27","nodeType":"YulLiteral","src":"3061:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"3049:3:27","nodeType":"YulIdentifier","src":"3049:3:27"},"nativeSrc":"3049:17:27","nodeType":"YulFunctionCall","src":"3049:17:27"}],"functionName":{"name":"mstore","nativeSrc":"3031:6:27","nodeType":"YulIdentifier","src":"3031:6:27"},"nativeSrc":"3031:36:27","nodeType":"YulFunctionCall","src":"3031:36:27"},"nativeSrc":"3031:36:27","nodeType":"YulExpressionStatement","src":"3031:36:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"2889:184:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2955:9:27","nodeType":"YulTypedName","src":"2955:9:27","type":""},{"name":"value0","nativeSrc":"2966:6:27","nodeType":"YulTypedName","src":"2966:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2977:4:27","nodeType":"YulTypedName","src":"2977:4:27","type":""}],"src":"2889:184:27"},{"body":{"nativeSrc":"3148:156:27","nodeType":"YulBlock","src":"3148:156:27","statements":[{"body":{"nativeSrc":"3194:16:27","nodeType":"YulBlock","src":"3194:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3203:1:27","nodeType":"YulLiteral","src":"3203:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"3206:1:27","nodeType":"YulLiteral","src":"3206:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3196:6:27","nodeType":"YulIdentifier","src":"3196:6:27"},"nativeSrc":"3196:12:27","nodeType":"YulFunctionCall","src":"3196:12:27"},"nativeSrc":"3196:12:27","nodeType":"YulExpressionStatement","src":"3196:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3169:7:27","nodeType":"YulIdentifier","src":"3169:7:27"},{"name":"headStart","nativeSrc":"3178:9:27","nodeType":"YulIdentifier","src":"3178:9:27"}],"functionName":{"name":"sub","nativeSrc":"3165:3:27","nodeType":"YulIdentifier","src":"3165:3:27"},"nativeSrc":"3165:23:27","nodeType":"YulFunctionCall","src":"3165:23:27"},{"kind":"number","nativeSrc":"3190:2:27","nodeType":"YulLiteral","src":"3190:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3161:3:27","nodeType":"YulIdentifier","src":"3161:3:27"},"nativeSrc":"3161:32:27","nodeType":"YulFunctionCall","src":"3161:32:27"},"nativeSrc":"3158:52:27","nodeType":"YulIf","src":"3158:52:27"},{"nativeSrc":"3219:14:27","nodeType":"YulVariableDeclaration","src":"3219:14:27","value":{"kind":"number","nativeSrc":"3232:1:27","nodeType":"YulLiteral","src":"3232:1:27","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3223:5:27","nodeType":"YulTypedName","src":"3223:5:27","type":""}]},{"nativeSrc":"3242:32:27","nodeType":"YulAssignment","src":"3242:32:27","value":{"arguments":[{"name":"headStart","nativeSrc":"3264:9:27","nodeType":"YulIdentifier","src":"3264:9:27"}],"functionName":{"name":"calldataload","nativeSrc":"3251:12:27","nodeType":"YulIdentifier","src":"3251:12:27"},"nativeSrc":"3251:23:27","nodeType":"YulFunctionCall","src":"3251:23:27"},"variableNames":[{"name":"value","nativeSrc":"3242:5:27","nodeType":"YulIdentifier","src":"3242:5:27"}]},{"nativeSrc":"3283:15:27","nodeType":"YulAssignment","src":"3283:15:27","value":{"name":"value","nativeSrc":"3293:5:27","nodeType":"YulIdentifier","src":"3293:5:27"},"variableNames":[{"name":"value0","nativeSrc":"3283:6:27","nodeType":"YulIdentifier","src":"3283:6:27"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3078:226:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3114:9:27","nodeType":"YulTypedName","src":"3114:9:27","type":""},{"name":"dataEnd","nativeSrc":"3125:7:27","nodeType":"YulTypedName","src":"3125:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3137:6:27","nodeType":"YulTypedName","src":"3137:6:27","type":""}],"src":"3078:226:27"},{"body":{"nativeSrc":"3379:116:27","nodeType":"YulBlock","src":"3379:116:27","statements":[{"body":{"nativeSrc":"3425:16:27","nodeType":"YulBlock","src":"3425:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3434:1:27","nodeType":"YulLiteral","src":"3434:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"3437:1:27","nodeType":"YulLiteral","src":"3437:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3427:6:27","nodeType":"YulIdentifier","src":"3427:6:27"},"nativeSrc":"3427:12:27","nodeType":"YulFunctionCall","src":"3427:12:27"},"nativeSrc":"3427:12:27","nodeType":"YulExpressionStatement","src":"3427:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3400:7:27","nodeType":"YulIdentifier","src":"3400:7:27"},{"name":"headStart","nativeSrc":"3409:9:27","nodeType":"YulIdentifier","src":"3409:9:27"}],"functionName":{"name":"sub","nativeSrc":"3396:3:27","nodeType":"YulIdentifier","src":"3396:3:27"},"nativeSrc":"3396:23:27","nodeType":"YulFunctionCall","src":"3396:23:27"},{"kind":"number","nativeSrc":"3421:2:27","nodeType":"YulLiteral","src":"3421:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3392:3:27","nodeType":"YulIdentifier","src":"3392:3:27"},"nativeSrc":"3392:32:27","nodeType":"YulFunctionCall","src":"3392:32:27"},"nativeSrc":"3389:52:27","nodeType":"YulIf","src":"3389:52:27"},{"nativeSrc":"3450:39:27","nodeType":"YulAssignment","src":"3450:39:27","value":{"arguments":[{"name":"headStart","nativeSrc":"3479:9:27","nodeType":"YulIdentifier","src":"3479:9:27"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3460:18:27","nodeType":"YulIdentifier","src":"3460:18:27"},"nativeSrc":"3460:29:27","nodeType":"YulFunctionCall","src":"3460:29:27"},"variableNames":[{"name":"value0","nativeSrc":"3450:6:27","nodeType":"YulIdentifier","src":"3450:6:27"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3309:186:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3345:9:27","nodeType":"YulTypedName","src":"3345:9:27","type":""},{"name":"dataEnd","nativeSrc":"3356:7:27","nodeType":"YulTypedName","src":"3356:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3368:6:27","nodeType":"YulTypedName","src":"3368:6:27","type":""}],"src":"3309:186:27"},{"body":{"nativeSrc":"3857:881:27","nodeType":"YulBlock","src":"3857:881:27","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3874:9:27","nodeType":"YulIdentifier","src":"3874:9:27"},{"arguments":[{"name":"value0","nativeSrc":"3889:6:27","nodeType":"YulIdentifier","src":"3889:6:27"},{"arguments":[{"kind":"number","nativeSrc":"3901:3:27","nodeType":"YulLiteral","src":"3901:3:27","type":"","value":"248"},{"kind":"number","nativeSrc":"3906:3:27","nodeType":"YulLiteral","src":"3906:3:27","type":"","value":"255"}],"functionName":{"name":"shl","nativeSrc":"3897:3:27","nodeType":"YulIdentifier","src":"3897:3:27"},"nativeSrc":"3897:13:27","nodeType":"YulFunctionCall","src":"3897:13:27"}],"functionName":{"name":"and","nativeSrc":"3885:3:27","nodeType":"YulIdentifier","src":"3885:3:27"},"nativeSrc":"3885:26:27","nodeType":"YulFunctionCall","src":"3885:26:27"}],"functionName":{"name":"mstore","nativeSrc":"3867:6:27","nodeType":"YulIdentifier","src":"3867:6:27"},"nativeSrc":"3867:45:27","nodeType":"YulFunctionCall","src":"3867:45:27"},"nativeSrc":"3867:45:27","nodeType":"YulExpressionStatement","src":"3867:45:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3932:9:27","nodeType":"YulIdentifier","src":"3932:9:27"},{"kind":"number","nativeSrc":"3943:2:27","nodeType":"YulLiteral","src":"3943:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3928:3:27","nodeType":"YulIdentifier","src":"3928:3:27"},"nativeSrc":"3928:18:27","nodeType":"YulFunctionCall","src":"3928:18:27"},{"kind":"number","nativeSrc":"3948:3:27","nodeType":"YulLiteral","src":"3948:3:27","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"3921:6:27","nodeType":"YulIdentifier","src":"3921:6:27"},"nativeSrc":"3921:31:27","nodeType":"YulFunctionCall","src":"3921:31:27"},"nativeSrc":"3921:31:27","nodeType":"YulExpressionStatement","src":"3921:31:27"},{"nativeSrc":"3961:60:27","nodeType":"YulVariableDeclaration","src":"3961:60:27","value":{"arguments":[{"name":"value1","nativeSrc":"3993:6:27","nodeType":"YulIdentifier","src":"3993:6:27"},{"arguments":[{"name":"headStart","nativeSrc":"4005:9:27","nodeType":"YulIdentifier","src":"4005:9:27"},{"kind":"number","nativeSrc":"4016:3:27","nodeType":"YulLiteral","src":"4016:3:27","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"4001:3:27","nodeType":"YulIdentifier","src":"4001:3:27"},"nativeSrc":"4001:19:27","nodeType":"YulFunctionCall","src":"4001:19:27"}],"functionName":{"name":"abi_encode_string","nativeSrc":"3975:17:27","nodeType":"YulIdentifier","src":"3975:17:27"},"nativeSrc":"3975:46:27","nodeType":"YulFunctionCall","src":"3975:46:27"},"variables":[{"name":"tail_1","nativeSrc":"3965:6:27","nodeType":"YulTypedName","src":"3965:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4041:9:27","nodeType":"YulIdentifier","src":"4041:9:27"},{"kind":"number","nativeSrc":"4052:2:27","nodeType":"YulLiteral","src":"4052:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4037:3:27","nodeType":"YulIdentifier","src":"4037:3:27"},"nativeSrc":"4037:18:27","nodeType":"YulFunctionCall","src":"4037:18:27"},{"arguments":[{"name":"tail_1","nativeSrc":"4061:6:27","nodeType":"YulIdentifier","src":"4061:6:27"},{"name":"headStart","nativeSrc":"4069:9:27","nodeType":"YulIdentifier","src":"4069:9:27"}],"functionName":{"name":"sub","nativeSrc":"4057:3:27","nodeType":"YulIdentifier","src":"4057:3:27"},"nativeSrc":"4057:22:27","nodeType":"YulFunctionCall","src":"4057:22:27"}],"functionName":{"name":"mstore","nativeSrc":"4030:6:27","nodeType":"YulIdentifier","src":"4030:6:27"},"nativeSrc":"4030:50:27","nodeType":"YulFunctionCall","src":"4030:50:27"},"nativeSrc":"4030:50:27","nodeType":"YulExpressionStatement","src":"4030:50:27"},{"nativeSrc":"4089:47:27","nodeType":"YulVariableDeclaration","src":"4089:47:27","value":{"arguments":[{"name":"value2","nativeSrc":"4121:6:27","nodeType":"YulIdentifier","src":"4121:6:27"},{"name":"tail_1","nativeSrc":"4129:6:27","nodeType":"YulIdentifier","src":"4129:6:27"}],"functionName":{"name":"abi_encode_string","nativeSrc":"4103:17:27","nodeType":"YulIdentifier","src":"4103:17:27"},"nativeSrc":"4103:33:27","nodeType":"YulFunctionCall","src":"4103:33:27"},"variables":[{"name":"tail_2","nativeSrc":"4093:6:27","nodeType":"YulTypedName","src":"4093:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4156:9:27","nodeType":"YulIdentifier","src":"4156:9:27"},{"kind":"number","nativeSrc":"4167:2:27","nodeType":"YulLiteral","src":"4167:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4152:3:27","nodeType":"YulIdentifier","src":"4152:3:27"},"nativeSrc":"4152:18:27","nodeType":"YulFunctionCall","src":"4152:18:27"},{"name":"value3","nativeSrc":"4172:6:27","nodeType":"YulIdentifier","src":"4172:6:27"}],"functionName":{"name":"mstore","nativeSrc":"4145:6:27","nodeType":"YulIdentifier","src":"4145:6:27"},"nativeSrc":"4145:34:27","nodeType":"YulFunctionCall","src":"4145:34:27"},"nativeSrc":"4145:34:27","nodeType":"YulExpressionStatement","src":"4145:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4199:9:27","nodeType":"YulIdentifier","src":"4199:9:27"},{"kind":"number","nativeSrc":"4210:3:27","nodeType":"YulLiteral","src":"4210:3:27","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4195:3:27","nodeType":"YulIdentifier","src":"4195:3:27"},"nativeSrc":"4195:19:27","nodeType":"YulFunctionCall","src":"4195:19:27"},{"arguments":[{"name":"value4","nativeSrc":"4220:6:27","nodeType":"YulIdentifier","src":"4220:6:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4236:3:27","nodeType":"YulLiteral","src":"4236:3:27","type":"","value":"160"},{"kind":"number","nativeSrc":"4241:1:27","nodeType":"YulLiteral","src":"4241:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4232:3:27","nodeType":"YulIdentifier","src":"4232:3:27"},"nativeSrc":"4232:11:27","nodeType":"YulFunctionCall","src":"4232:11:27"},{"kind":"number","nativeSrc":"4245:1:27","nodeType":"YulLiteral","src":"4245:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4228:3:27","nodeType":"YulIdentifier","src":"4228:3:27"},"nativeSrc":"4228:19:27","nodeType":"YulFunctionCall","src":"4228:19:27"}],"functionName":{"name":"and","nativeSrc":"4216:3:27","nodeType":"YulIdentifier","src":"4216:3:27"},"nativeSrc":"4216:32:27","nodeType":"YulFunctionCall","src":"4216:32:27"}],"functionName":{"name":"mstore","nativeSrc":"4188:6:27","nodeType":"YulIdentifier","src":"4188:6:27"},"nativeSrc":"4188:61:27","nodeType":"YulFunctionCall","src":"4188:61:27"},"nativeSrc":"4188:61:27","nodeType":"YulExpressionStatement","src":"4188:61:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4269:9:27","nodeType":"YulIdentifier","src":"4269:9:27"},{"kind":"number","nativeSrc":"4280:3:27","nodeType":"YulLiteral","src":"4280:3:27","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"4265:3:27","nodeType":"YulIdentifier","src":"4265:3:27"},"nativeSrc":"4265:19:27","nodeType":"YulFunctionCall","src":"4265:19:27"},{"name":"value5","nativeSrc":"4286:6:27","nodeType":"YulIdentifier","src":"4286:6:27"}],"functionName":{"name":"mstore","nativeSrc":"4258:6:27","nodeType":"YulIdentifier","src":"4258:6:27"},"nativeSrc":"4258:35:27","nodeType":"YulFunctionCall","src":"4258:35:27"},"nativeSrc":"4258:35:27","nodeType":"YulExpressionStatement","src":"4258:35:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4313:9:27","nodeType":"YulIdentifier","src":"4313:9:27"},{"kind":"number","nativeSrc":"4324:3:27","nodeType":"YulLiteral","src":"4324:3:27","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"4309:3:27","nodeType":"YulIdentifier","src":"4309:3:27"},"nativeSrc":"4309:19:27","nodeType":"YulFunctionCall","src":"4309:19:27"},{"arguments":[{"name":"tail_2","nativeSrc":"4334:6:27","nodeType":"YulIdentifier","src":"4334:6:27"},{"name":"headStart","nativeSrc":"4342:9:27","nodeType":"YulIdentifier","src":"4342:9:27"}],"functionName":{"name":"sub","nativeSrc":"4330:3:27","nodeType":"YulIdentifier","src":"4330:3:27"},"nativeSrc":"4330:22:27","nodeType":"YulFunctionCall","src":"4330:22:27"}],"functionName":{"name":"mstore","nativeSrc":"4302:6:27","nodeType":"YulIdentifier","src":"4302:6:27"},"nativeSrc":"4302:51:27","nodeType":"YulFunctionCall","src":"4302:51:27"},"nativeSrc":"4302:51:27","nodeType":"YulExpressionStatement","src":"4302:51:27"},{"nativeSrc":"4362:17:27","nodeType":"YulVariableDeclaration","src":"4362:17:27","value":{"name":"tail_2","nativeSrc":"4373:6:27","nodeType":"YulIdentifier","src":"4373:6:27"},"variables":[{"name":"pos","nativeSrc":"4366:3:27","nodeType":"YulTypedName","src":"4366:3:27","type":""}]},{"nativeSrc":"4388:27:27","nodeType":"YulVariableDeclaration","src":"4388:27:27","value":{"arguments":[{"name":"value6","nativeSrc":"4408:6:27","nodeType":"YulIdentifier","src":"4408:6:27"}],"functionName":{"name":"mload","nativeSrc":"4402:5:27","nodeType":"YulIdentifier","src":"4402:5:27"},"nativeSrc":"4402:13:27","nodeType":"YulFunctionCall","src":"4402:13:27"},"variables":[{"name":"length","nativeSrc":"4392:6:27","nodeType":"YulTypedName","src":"4392:6:27","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nativeSrc":"4431:6:27","nodeType":"YulIdentifier","src":"4431:6:27"},{"name":"length","nativeSrc":"4439:6:27","nodeType":"YulIdentifier","src":"4439:6:27"}],"functionName":{"name":"mstore","nativeSrc":"4424:6:27","nodeType":"YulIdentifier","src":"4424:6:27"},"nativeSrc":"4424:22:27","nodeType":"YulFunctionCall","src":"4424:22:27"},"nativeSrc":"4424:22:27","nodeType":"YulExpressionStatement","src":"4424:22:27"},{"nativeSrc":"4455:22:27","nodeType":"YulAssignment","src":"4455:22:27","value":{"arguments":[{"name":"tail_2","nativeSrc":"4466:6:27","nodeType":"YulIdentifier","src":"4466:6:27"},{"kind":"number","nativeSrc":"4474:2:27","nodeType":"YulLiteral","src":"4474:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4462:3:27","nodeType":"YulIdentifier","src":"4462:3:27"},"nativeSrc":"4462:15:27","nodeType":"YulFunctionCall","src":"4462:15:27"},"variableNames":[{"name":"pos","nativeSrc":"4455:3:27","nodeType":"YulIdentifier","src":"4455:3:27"}]},{"nativeSrc":"4486:29:27","nodeType":"YulVariableDeclaration","src":"4486:29:27","value":{"arguments":[{"name":"value6","nativeSrc":"4504:6:27","nodeType":"YulIdentifier","src":"4504:6:27"},{"kind":"number","nativeSrc":"4512:2:27","nodeType":"YulLiteral","src":"4512:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4500:3:27","nodeType":"YulIdentifier","src":"4500:3:27"},"nativeSrc":"4500:15:27","nodeType":"YulFunctionCall","src":"4500:15:27"},"variables":[{"name":"srcPtr","nativeSrc":"4490:6:27","nodeType":"YulTypedName","src":"4490:6:27","type":""}]},{"nativeSrc":"4524:10:27","nodeType":"YulVariableDeclaration","src":"4524:10:27","value":{"kind":"number","nativeSrc":"4533:1:27","nodeType":"YulLiteral","src":"4533:1:27","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4528:1:27","nodeType":"YulTypedName","src":"4528:1:27","type":""}]},{"body":{"nativeSrc":"4592:120:27","nodeType":"YulBlock","src":"4592:120:27","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4613:3:27","nodeType":"YulIdentifier","src":"4613:3:27"},{"arguments":[{"name":"srcPtr","nativeSrc":"4624:6:27","nodeType":"YulIdentifier","src":"4624:6:27"}],"functionName":{"name":"mload","nativeSrc":"4618:5:27","nodeType":"YulIdentifier","src":"4618:5:27"},"nativeSrc":"4618:13:27","nodeType":"YulFunctionCall","src":"4618:13:27"}],"functionName":{"name":"mstore","nativeSrc":"4606:6:27","nodeType":"YulIdentifier","src":"4606:6:27"},"nativeSrc":"4606:26:27","nodeType":"YulFunctionCall","src":"4606:26:27"},"nativeSrc":"4606:26:27","nodeType":"YulExpressionStatement","src":"4606:26:27"},{"nativeSrc":"4645:19:27","nodeType":"YulAssignment","src":"4645:19:27","value":{"arguments":[{"name":"pos","nativeSrc":"4656:3:27","nodeType":"YulIdentifier","src":"4656:3:27"},{"kind":"number","nativeSrc":"4661:2:27","nodeType":"YulLiteral","src":"4661:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4652:3:27","nodeType":"YulIdentifier","src":"4652:3:27"},"nativeSrc":"4652:12:27","nodeType":"YulFunctionCall","src":"4652:12:27"},"variableNames":[{"name":"pos","nativeSrc":"4645:3:27","nodeType":"YulIdentifier","src":"4645:3:27"}]},{"nativeSrc":"4677:25:27","nodeType":"YulAssignment","src":"4677:25:27","value":{"arguments":[{"name":"srcPtr","nativeSrc":"4691:6:27","nodeType":"YulIdentifier","src":"4691:6:27"},{"kind":"number","nativeSrc":"4699:2:27","nodeType":"YulLiteral","src":"4699:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4687:3:27","nodeType":"YulIdentifier","src":"4687:3:27"},"nativeSrc":"4687:15:27","nodeType":"YulFunctionCall","src":"4687:15:27"},"variableNames":[{"name":"srcPtr","nativeSrc":"4677:6:27","nodeType":"YulIdentifier","src":"4677:6:27"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4554:1:27","nodeType":"YulIdentifier","src":"4554:1:27"},{"name":"length","nativeSrc":"4557:6:27","nodeType":"YulIdentifier","src":"4557:6:27"}],"functionName":{"name":"lt","nativeSrc":"4551:2:27","nodeType":"YulIdentifier","src":"4551:2:27"},"nativeSrc":"4551:13:27","nodeType":"YulFunctionCall","src":"4551:13:27"},"nativeSrc":"4543:169:27","nodeType":"YulForLoop","post":{"nativeSrc":"4565:18:27","nodeType":"YulBlock","src":"4565:18:27","statements":[{"nativeSrc":"4567:14:27","nodeType":"YulAssignment","src":"4567:14:27","value":{"arguments":[{"name":"i","nativeSrc":"4576:1:27","nodeType":"YulIdentifier","src":"4576:1:27"},{"kind":"number","nativeSrc":"4579:1:27","nodeType":"YulLiteral","src":"4579:1:27","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4572:3:27","nodeType":"YulIdentifier","src":"4572:3:27"},"nativeSrc":"4572:9:27","nodeType":"YulFunctionCall","src":"4572:9:27"},"variableNames":[{"name":"i","nativeSrc":"4567:1:27","nodeType":"YulIdentifier","src":"4567:1:27"}]}]},"pre":{"nativeSrc":"4547:3:27","nodeType":"YulBlock","src":"4547:3:27","statements":[]},"src":"4543:169:27"},{"nativeSrc":"4721:11:27","nodeType":"YulAssignment","src":"4721:11:27","value":{"name":"pos","nativeSrc":"4729:3:27","nodeType":"YulIdentifier","src":"4729:3:27"},"variableNames":[{"name":"tail","nativeSrc":"4721:4:27","nodeType":"YulIdentifier","src":"4721:4:27"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"3500:1238:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3778:9:27","nodeType":"YulTypedName","src":"3778:9:27","type":""},{"name":"value6","nativeSrc":"3789:6:27","nodeType":"YulTypedName","src":"3789:6:27","type":""},{"name":"value5","nativeSrc":"3797:6:27","nodeType":"YulTypedName","src":"3797:6:27","type":""},{"name":"value4","nativeSrc":"3805:6:27","nodeType":"YulTypedName","src":"3805:6:27","type":""},{"name":"value3","nativeSrc":"3813:6:27","nodeType":"YulTypedName","src":"3813:6:27","type":""},{"name":"value2","nativeSrc":"3821:6:27","nodeType":"YulTypedName","src":"3821:6:27","type":""},{"name":"value1","nativeSrc":"3829:6:27","nodeType":"YulTypedName","src":"3829:6:27","type":""},{"name":"value0","nativeSrc":"3837:6:27","nodeType":"YulTypedName","src":"3837:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3848:4:27","nodeType":"YulTypedName","src":"3848:4:27","type":""}],"src":"3500:1238:27"},{"body":{"nativeSrc":"4913:733:27","nodeType":"YulBlock","src":"4913:733:27","statements":[{"body":{"nativeSrc":"4960:16:27","nodeType":"YulBlock","src":"4960:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4969:1:27","nodeType":"YulLiteral","src":"4969:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"4972:1:27","nodeType":"YulLiteral","src":"4972:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4962:6:27","nodeType":"YulIdentifier","src":"4962:6:27"},"nativeSrc":"4962:12:27","nodeType":"YulFunctionCall","src":"4962:12:27"},"nativeSrc":"4962:12:27","nodeType":"YulExpressionStatement","src":"4962:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4934:7:27","nodeType":"YulIdentifier","src":"4934:7:27"},{"name":"headStart","nativeSrc":"4943:9:27","nodeType":"YulIdentifier","src":"4943:9:27"}],"functionName":{"name":"sub","nativeSrc":"4930:3:27","nodeType":"YulIdentifier","src":"4930:3:27"},"nativeSrc":"4930:23:27","nodeType":"YulFunctionCall","src":"4930:23:27"},{"kind":"number","nativeSrc":"4955:3:27","nodeType":"YulLiteral","src":"4955:3:27","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"4926:3:27","nodeType":"YulIdentifier","src":"4926:3:27"},"nativeSrc":"4926:33:27","nodeType":"YulFunctionCall","src":"4926:33:27"},"nativeSrc":"4923:53:27","nodeType":"YulIf","src":"4923:53:27"},{"nativeSrc":"4985:39:27","nodeType":"YulAssignment","src":"4985:39:27","value":{"arguments":[{"name":"headStart","nativeSrc":"5014:9:27","nodeType":"YulIdentifier","src":"5014:9:27"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4995:18:27","nodeType":"YulIdentifier","src":"4995:18:27"},"nativeSrc":"4995:29:27","nodeType":"YulFunctionCall","src":"4995:29:27"},"variableNames":[{"name":"value0","nativeSrc":"4985:6:27","nodeType":"YulIdentifier","src":"4985:6:27"}]},{"nativeSrc":"5033:48:27","nodeType":"YulAssignment","src":"5033:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5066:9:27","nodeType":"YulIdentifier","src":"5066:9:27"},{"kind":"number","nativeSrc":"5077:2:27","nodeType":"YulLiteral","src":"5077:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5062:3:27","nodeType":"YulIdentifier","src":"5062:3:27"},"nativeSrc":"5062:18:27","nodeType":"YulFunctionCall","src":"5062:18:27"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5043:18:27","nodeType":"YulIdentifier","src":"5043:18:27"},"nativeSrc":"5043:38:27","nodeType":"YulFunctionCall","src":"5043:38:27"},"variableNames":[{"name":"value1","nativeSrc":"5033:6:27","nodeType":"YulIdentifier","src":"5033:6:27"}]},{"nativeSrc":"5090:14:27","nodeType":"YulVariableDeclaration","src":"5090:14:27","value":{"kind":"number","nativeSrc":"5103:1:27","nodeType":"YulLiteral","src":"5103:1:27","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5094:5:27","nodeType":"YulTypedName","src":"5094:5:27","type":""}]},{"nativeSrc":"5113:41:27","nodeType":"YulAssignment","src":"5113:41:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5139:9:27","nodeType":"YulIdentifier","src":"5139:9:27"},{"kind":"number","nativeSrc":"5150:2:27","nodeType":"YulLiteral","src":"5150:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5135:3:27","nodeType":"YulIdentifier","src":"5135:3:27"},"nativeSrc":"5135:18:27","nodeType":"YulFunctionCall","src":"5135:18:27"}],"functionName":{"name":"calldataload","nativeSrc":"5122:12:27","nodeType":"YulIdentifier","src":"5122:12:27"},"nativeSrc":"5122:32:27","nodeType":"YulFunctionCall","src":"5122:32:27"},"variableNames":[{"name":"value","nativeSrc":"5113:5:27","nodeType":"YulIdentifier","src":"5113:5:27"}]},{"nativeSrc":"5163:15:27","nodeType":"YulAssignment","src":"5163:15:27","value":{"name":"value","nativeSrc":"5173:5:27","nodeType":"YulIdentifier","src":"5173:5:27"},"variableNames":[{"name":"value2","nativeSrc":"5163:6:27","nodeType":"YulIdentifier","src":"5163:6:27"}]},{"nativeSrc":"5187:16:27","nodeType":"YulVariableDeclaration","src":"5187:16:27","value":{"kind":"number","nativeSrc":"5202:1:27","nodeType":"YulLiteral","src":"5202:1:27","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"5191:7:27","nodeType":"YulTypedName","src":"5191:7:27","type":""}]},{"nativeSrc":"5212:43:27","nodeType":"YulAssignment","src":"5212:43:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5240:9:27","nodeType":"YulIdentifier","src":"5240:9:27"},{"kind":"number","nativeSrc":"5251:2:27","nodeType":"YulLiteral","src":"5251:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5236:3:27","nodeType":"YulIdentifier","src":"5236:3:27"},"nativeSrc":"5236:18:27","nodeType":"YulFunctionCall","src":"5236:18:27"}],"functionName":{"name":"calldataload","nativeSrc":"5223:12:27","nodeType":"YulIdentifier","src":"5223:12:27"},"nativeSrc":"5223:32:27","nodeType":"YulFunctionCall","src":"5223:32:27"},"variableNames":[{"name":"value_1","nativeSrc":"5212:7:27","nodeType":"YulIdentifier","src":"5212:7:27"}]},{"nativeSrc":"5264:17:27","nodeType":"YulAssignment","src":"5264:17:27","value":{"name":"value_1","nativeSrc":"5274:7:27","nodeType":"YulIdentifier","src":"5274:7:27"},"variableNames":[{"name":"value3","nativeSrc":"5264:6:27","nodeType":"YulIdentifier","src":"5264:6:27"}]},{"nativeSrc":"5290:48:27","nodeType":"YulVariableDeclaration","src":"5290:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5322:9:27","nodeType":"YulIdentifier","src":"5322:9:27"},{"kind":"number","nativeSrc":"5333:3:27","nodeType":"YulLiteral","src":"5333:3:27","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5318:3:27","nodeType":"YulIdentifier","src":"5318:3:27"},"nativeSrc":"5318:19:27","nodeType":"YulFunctionCall","src":"5318:19:27"}],"functionName":{"name":"calldataload","nativeSrc":"5305:12:27","nodeType":"YulIdentifier","src":"5305:12:27"},"nativeSrc":"5305:33:27","nodeType":"YulFunctionCall","src":"5305:33:27"},"variables":[{"name":"value_2","nativeSrc":"5294:7:27","nodeType":"YulTypedName","src":"5294:7:27","type":""}]},{"body":{"nativeSrc":"5390:16:27","nodeType":"YulBlock","src":"5390:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5399:1:27","nodeType":"YulLiteral","src":"5399:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"5402:1:27","nodeType":"YulLiteral","src":"5402:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5392:6:27","nodeType":"YulIdentifier","src":"5392:6:27"},"nativeSrc":"5392:12:27","nodeType":"YulFunctionCall","src":"5392:12:27"},"nativeSrc":"5392:12:27","nodeType":"YulExpressionStatement","src":"5392:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value_2","nativeSrc":"5360:7:27","nodeType":"YulIdentifier","src":"5360:7:27"},{"arguments":[{"name":"value_2","nativeSrc":"5373:7:27","nodeType":"YulIdentifier","src":"5373:7:27"},{"kind":"number","nativeSrc":"5382:4:27","nodeType":"YulLiteral","src":"5382:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"5369:3:27","nodeType":"YulIdentifier","src":"5369:3:27"},"nativeSrc":"5369:18:27","nodeType":"YulFunctionCall","src":"5369:18:27"}],"functionName":{"name":"eq","nativeSrc":"5357:2:27","nodeType":"YulIdentifier","src":"5357:2:27"},"nativeSrc":"5357:31:27","nodeType":"YulFunctionCall","src":"5357:31:27"}],"functionName":{"name":"iszero","nativeSrc":"5350:6:27","nodeType":"YulIdentifier","src":"5350:6:27"},"nativeSrc":"5350:39:27","nodeType":"YulFunctionCall","src":"5350:39:27"},"nativeSrc":"5347:59:27","nodeType":"YulIf","src":"5347:59:27"},{"nativeSrc":"5415:17:27","nodeType":"YulAssignment","src":"5415:17:27","value":{"name":"value_2","nativeSrc":"5425:7:27","nodeType":"YulIdentifier","src":"5425:7:27"},"variableNames":[{"name":"value4","nativeSrc":"5415:6:27","nodeType":"YulIdentifier","src":"5415:6:27"}]},{"nativeSrc":"5441:16:27","nodeType":"YulVariableDeclaration","src":"5441:16:27","value":{"kind":"number","nativeSrc":"5456:1:27","nodeType":"YulLiteral","src":"5456:1:27","type":"","value":"0"},"variables":[{"name":"value_3","nativeSrc":"5445:7:27","nodeType":"YulTypedName","src":"5445:7:27","type":""}]},{"nativeSrc":"5466:44:27","nodeType":"YulAssignment","src":"5466:44:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5494:9:27","nodeType":"YulIdentifier","src":"5494:9:27"},{"kind":"number","nativeSrc":"5505:3:27","nodeType":"YulLiteral","src":"5505:3:27","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"5490:3:27","nodeType":"YulIdentifier","src":"5490:3:27"},"nativeSrc":"5490:19:27","nodeType":"YulFunctionCall","src":"5490:19:27"}],"functionName":{"name":"calldataload","nativeSrc":"5477:12:27","nodeType":"YulIdentifier","src":"5477:12:27"},"nativeSrc":"5477:33:27","nodeType":"YulFunctionCall","src":"5477:33:27"},"variableNames":[{"name":"value_3","nativeSrc":"5466:7:27","nodeType":"YulIdentifier","src":"5466:7:27"}]},{"nativeSrc":"5519:17:27","nodeType":"YulAssignment","src":"5519:17:27","value":{"name":"value_3","nativeSrc":"5529:7:27","nodeType":"YulIdentifier","src":"5529:7:27"},"variableNames":[{"name":"value5","nativeSrc":"5519:6:27","nodeType":"YulIdentifier","src":"5519:6:27"}]},{"nativeSrc":"5545:16:27","nodeType":"YulVariableDeclaration","src":"5545:16:27","value":{"kind":"number","nativeSrc":"5560:1:27","nodeType":"YulLiteral","src":"5560:1:27","type":"","value":"0"},"variables":[{"name":"value_4","nativeSrc":"5549:7:27","nodeType":"YulTypedName","src":"5549:7:27","type":""}]},{"nativeSrc":"5570:44:27","nodeType":"YulAssignment","src":"5570:44:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5598:9:27","nodeType":"YulIdentifier","src":"5598:9:27"},{"kind":"number","nativeSrc":"5609:3:27","nodeType":"YulLiteral","src":"5609:3:27","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"5594:3:27","nodeType":"YulIdentifier","src":"5594:3:27"},"nativeSrc":"5594:19:27","nodeType":"YulFunctionCall","src":"5594:19:27"}],"functionName":{"name":"calldataload","nativeSrc":"5581:12:27","nodeType":"YulIdentifier","src":"5581:12:27"},"nativeSrc":"5581:33:27","nodeType":"YulFunctionCall","src":"5581:33:27"},"variableNames":[{"name":"value_4","nativeSrc":"5570:7:27","nodeType":"YulIdentifier","src":"5570:7:27"}]},{"nativeSrc":"5623:17:27","nodeType":"YulAssignment","src":"5623:17:27","value":{"name":"value_4","nativeSrc":"5633:7:27","nodeType":"YulIdentifier","src":"5633:7:27"},"variableNames":[{"name":"value6","nativeSrc":"5623:6:27","nodeType":"YulIdentifier","src":"5623:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"4743:903:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4831:9:27","nodeType":"YulTypedName","src":"4831:9:27","type":""},{"name":"dataEnd","nativeSrc":"4842:7:27","nodeType":"YulTypedName","src":"4842:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4854:6:27","nodeType":"YulTypedName","src":"4854:6:27","type":""},{"name":"value1","nativeSrc":"4862:6:27","nodeType":"YulTypedName","src":"4862:6:27","type":""},{"name":"value2","nativeSrc":"4870:6:27","nodeType":"YulTypedName","src":"4870:6:27","type":""},{"name":"value3","nativeSrc":"4878:6:27","nodeType":"YulTypedName","src":"4878:6:27","type":""},{"name":"value4","nativeSrc":"4886:6:27","nodeType":"YulTypedName","src":"4886:6:27","type":""},{"name":"value5","nativeSrc":"4894:6:27","nodeType":"YulTypedName","src":"4894:6:27","type":""},{"name":"value6","nativeSrc":"4902:6:27","nodeType":"YulTypedName","src":"4902:6:27","type":""}],"src":"4743:903:27"},{"body":{"nativeSrc":"5738:173:27","nodeType":"YulBlock","src":"5738:173:27","statements":[{"body":{"nativeSrc":"5784:16:27","nodeType":"YulBlock","src":"5784:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5793:1:27","nodeType":"YulLiteral","src":"5793:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"5796:1:27","nodeType":"YulLiteral","src":"5796:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5786:6:27","nodeType":"YulIdentifier","src":"5786:6:27"},"nativeSrc":"5786:12:27","nodeType":"YulFunctionCall","src":"5786:12:27"},"nativeSrc":"5786:12:27","nodeType":"YulExpressionStatement","src":"5786:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5759:7:27","nodeType":"YulIdentifier","src":"5759:7:27"},{"name":"headStart","nativeSrc":"5768:9:27","nodeType":"YulIdentifier","src":"5768:9:27"}],"functionName":{"name":"sub","nativeSrc":"5755:3:27","nodeType":"YulIdentifier","src":"5755:3:27"},"nativeSrc":"5755:23:27","nodeType":"YulFunctionCall","src":"5755:23:27"},{"kind":"number","nativeSrc":"5780:2:27","nodeType":"YulLiteral","src":"5780:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5751:3:27","nodeType":"YulIdentifier","src":"5751:3:27"},"nativeSrc":"5751:32:27","nodeType":"YulFunctionCall","src":"5751:32:27"},"nativeSrc":"5748:52:27","nodeType":"YulIf","src":"5748:52:27"},{"nativeSrc":"5809:39:27","nodeType":"YulAssignment","src":"5809:39:27","value":{"arguments":[{"name":"headStart","nativeSrc":"5838:9:27","nodeType":"YulIdentifier","src":"5838:9:27"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5819:18:27","nodeType":"YulIdentifier","src":"5819:18:27"},"nativeSrc":"5819:29:27","nodeType":"YulFunctionCall","src":"5819:29:27"},"variableNames":[{"name":"value0","nativeSrc":"5809:6:27","nodeType":"YulIdentifier","src":"5809:6:27"}]},{"nativeSrc":"5857:48:27","nodeType":"YulAssignment","src":"5857:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5890:9:27","nodeType":"YulIdentifier","src":"5890:9:27"},{"kind":"number","nativeSrc":"5901:2:27","nodeType":"YulLiteral","src":"5901:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5886:3:27","nodeType":"YulIdentifier","src":"5886:3:27"},"nativeSrc":"5886:18:27","nodeType":"YulFunctionCall","src":"5886:18:27"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5867:18:27","nodeType":"YulIdentifier","src":"5867:18:27"},"nativeSrc":"5867:38:27","nodeType":"YulFunctionCall","src":"5867:38:27"},"variableNames":[{"name":"value1","nativeSrc":"5857:6:27","nodeType":"YulIdentifier","src":"5857:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5651:260:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5696:9:27","nodeType":"YulTypedName","src":"5696:9:27","type":""},{"name":"dataEnd","nativeSrc":"5707:7:27","nodeType":"YulTypedName","src":"5707:7:27","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5719:6:27","nodeType":"YulTypedName","src":"5719:6:27","type":""},{"name":"value1","nativeSrc":"5727:6:27","nodeType":"YulTypedName","src":"5727:6:27","type":""}],"src":"5651:260:27"},{"body":{"nativeSrc":"5971:325:27","nodeType":"YulBlock","src":"5971:325:27","statements":[{"nativeSrc":"5981:22:27","nodeType":"YulAssignment","src":"5981:22:27","value":{"arguments":[{"kind":"number","nativeSrc":"5995:1:27","nodeType":"YulLiteral","src":"5995:1:27","type":"","value":"1"},{"name":"data","nativeSrc":"5998:4:27","nodeType":"YulIdentifier","src":"5998:4:27"}],"functionName":{"name":"shr","nativeSrc":"5991:3:27","nodeType":"YulIdentifier","src":"5991:3:27"},"nativeSrc":"5991:12:27","nodeType":"YulFunctionCall","src":"5991:12:27"},"variableNames":[{"name":"length","nativeSrc":"5981:6:27","nodeType":"YulIdentifier","src":"5981:6:27"}]},{"nativeSrc":"6012:38:27","nodeType":"YulVariableDeclaration","src":"6012:38:27","value":{"arguments":[{"name":"data","nativeSrc":"6042:4:27","nodeType":"YulIdentifier","src":"6042:4:27"},{"kind":"number","nativeSrc":"6048:1:27","nodeType":"YulLiteral","src":"6048:1:27","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"6038:3:27","nodeType":"YulIdentifier","src":"6038:3:27"},"nativeSrc":"6038:12:27","nodeType":"YulFunctionCall","src":"6038:12:27"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"6016:18:27","nodeType":"YulTypedName","src":"6016:18:27","type":""}]},{"body":{"nativeSrc":"6089:31:27","nodeType":"YulBlock","src":"6089:31:27","statements":[{"nativeSrc":"6091:27:27","nodeType":"YulAssignment","src":"6091:27:27","value":{"arguments":[{"name":"length","nativeSrc":"6105:6:27","nodeType":"YulIdentifier","src":"6105:6:27"},{"kind":"number","nativeSrc":"6113:4:27","nodeType":"YulLiteral","src":"6113:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6101:3:27","nodeType":"YulIdentifier","src":"6101:3:27"},"nativeSrc":"6101:17:27","nodeType":"YulFunctionCall","src":"6101:17:27"},"variableNames":[{"name":"length","nativeSrc":"6091:6:27","nodeType":"YulIdentifier","src":"6091:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6069:18:27","nodeType":"YulIdentifier","src":"6069:18:27"}],"functionName":{"name":"iszero","nativeSrc":"6062:6:27","nodeType":"YulIdentifier","src":"6062:6:27"},"nativeSrc":"6062:26:27","nodeType":"YulFunctionCall","src":"6062:26:27"},"nativeSrc":"6059:61:27","nodeType":"YulIf","src":"6059:61:27"},{"body":{"nativeSrc":"6179:111:27","nodeType":"YulBlock","src":"6179:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6200:1:27","nodeType":"YulLiteral","src":"6200:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6207:3:27","nodeType":"YulLiteral","src":"6207:3:27","type":"","value":"224"},{"kind":"number","nativeSrc":"6212:10:27","nodeType":"YulLiteral","src":"6212:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6203:3:27","nodeType":"YulIdentifier","src":"6203:3:27"},"nativeSrc":"6203:20:27","nodeType":"YulFunctionCall","src":"6203:20:27"}],"functionName":{"name":"mstore","nativeSrc":"6193:6:27","nodeType":"YulIdentifier","src":"6193:6:27"},"nativeSrc":"6193:31:27","nodeType":"YulFunctionCall","src":"6193:31:27"},"nativeSrc":"6193:31:27","nodeType":"YulExpressionStatement","src":"6193:31:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6244:1:27","nodeType":"YulLiteral","src":"6244:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"6247:4:27","nodeType":"YulLiteral","src":"6247:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6237:6:27","nodeType":"YulIdentifier","src":"6237:6:27"},"nativeSrc":"6237:15:27","nodeType":"YulFunctionCall","src":"6237:15:27"},"nativeSrc":"6237:15:27","nodeType":"YulExpressionStatement","src":"6237:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6272:1:27","nodeType":"YulLiteral","src":"6272:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"6275:4:27","nodeType":"YulLiteral","src":"6275:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6265:6:27","nodeType":"YulIdentifier","src":"6265:6:27"},"nativeSrc":"6265:15:27","nodeType":"YulFunctionCall","src":"6265:15:27"},"nativeSrc":"6265:15:27","nodeType":"YulExpressionStatement","src":"6265:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6135:18:27","nodeType":"YulIdentifier","src":"6135:18:27"},{"arguments":[{"name":"length","nativeSrc":"6158:6:27","nodeType":"YulIdentifier","src":"6158:6:27"},{"kind":"number","nativeSrc":"6166:2:27","nodeType":"YulLiteral","src":"6166:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6155:2:27","nodeType":"YulIdentifier","src":"6155:2:27"},"nativeSrc":"6155:14:27","nodeType":"YulFunctionCall","src":"6155:14:27"}],"functionName":{"name":"eq","nativeSrc":"6132:2:27","nodeType":"YulIdentifier","src":"6132:2:27"},"nativeSrc":"6132:38:27","nodeType":"YulFunctionCall","src":"6132:38:27"},"nativeSrc":"6129:161:27","nodeType":"YulIf","src":"6129:161:27"}]},"name":"extract_byte_array_length","nativeSrc":"5916:380:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5951:4:27","nodeType":"YulTypedName","src":"5951:4:27","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5960:6:27","nodeType":"YulTypedName","src":"5960:6:27","type":""}],"src":"5916:380:27"},{"body":{"nativeSrc":"6333:95:27","nodeType":"YulBlock","src":"6333:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6350:1:27","nodeType":"YulLiteral","src":"6350:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6357:3:27","nodeType":"YulLiteral","src":"6357:3:27","type":"","value":"224"},{"kind":"number","nativeSrc":"6362:10:27","nodeType":"YulLiteral","src":"6362:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6353:3:27","nodeType":"YulIdentifier","src":"6353:3:27"},"nativeSrc":"6353:20:27","nodeType":"YulFunctionCall","src":"6353:20:27"}],"functionName":{"name":"mstore","nativeSrc":"6343:6:27","nodeType":"YulIdentifier","src":"6343:6:27"},"nativeSrc":"6343:31:27","nodeType":"YulFunctionCall","src":"6343:31:27"},"nativeSrc":"6343:31:27","nodeType":"YulExpressionStatement","src":"6343:31:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6390:1:27","nodeType":"YulLiteral","src":"6390:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"6393:4:27","nodeType":"YulLiteral","src":"6393:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"6383:6:27","nodeType":"YulIdentifier","src":"6383:6:27"},"nativeSrc":"6383:15:27","nodeType":"YulFunctionCall","src":"6383:15:27"},"nativeSrc":"6383:15:27","nodeType":"YulExpressionStatement","src":"6383:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6414:1:27","nodeType":"YulLiteral","src":"6414:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"6417:4:27","nodeType":"YulLiteral","src":"6417:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6407:6:27","nodeType":"YulIdentifier","src":"6407:6:27"},"nativeSrc":"6407:15:27","nodeType":"YulFunctionCall","src":"6407:15:27"},"nativeSrc":"6407:15:27","nodeType":"YulExpressionStatement","src":"6407:15:27"}]},"name":"panic_error_0x41","nativeSrc":"6301:127:27","nodeType":"YulFunctionDefinition","src":"6301:127:27"},{"body":{"nativeSrc":"6674:346:27","nodeType":"YulBlock","src":"6674:346:27","statements":[{"nativeSrc":"6684:27:27","nodeType":"YulAssignment","src":"6684:27:27","value":{"arguments":[{"name":"headStart","nativeSrc":"6696:9:27","nodeType":"YulIdentifier","src":"6696:9:27"},{"kind":"number","nativeSrc":"6707:3:27","nodeType":"YulLiteral","src":"6707:3:27","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"6692:3:27","nodeType":"YulIdentifier","src":"6692:3:27"},"nativeSrc":"6692:19:27","nodeType":"YulFunctionCall","src":"6692:19:27"},"variableNames":[{"name":"tail","nativeSrc":"6684:4:27","nodeType":"YulIdentifier","src":"6684:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6727:9:27","nodeType":"YulIdentifier","src":"6727:9:27"},{"name":"value0","nativeSrc":"6738:6:27","nodeType":"YulIdentifier","src":"6738:6:27"}],"functionName":{"name":"mstore","nativeSrc":"6720:6:27","nodeType":"YulIdentifier","src":"6720:6:27"},"nativeSrc":"6720:25:27","nodeType":"YulFunctionCall","src":"6720:25:27"},"nativeSrc":"6720:25:27","nodeType":"YulExpressionStatement","src":"6720:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6765:9:27","nodeType":"YulIdentifier","src":"6765:9:27"},{"kind":"number","nativeSrc":"6776:2:27","nodeType":"YulLiteral","src":"6776:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6761:3:27","nodeType":"YulIdentifier","src":"6761:3:27"},"nativeSrc":"6761:18:27","nodeType":"YulFunctionCall","src":"6761:18:27"},{"arguments":[{"name":"value1","nativeSrc":"6785:6:27","nodeType":"YulIdentifier","src":"6785:6:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6801:3:27","nodeType":"YulLiteral","src":"6801:3:27","type":"","value":"160"},{"kind":"number","nativeSrc":"6806:1:27","nodeType":"YulLiteral","src":"6806:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6797:3:27","nodeType":"YulIdentifier","src":"6797:3:27"},"nativeSrc":"6797:11:27","nodeType":"YulFunctionCall","src":"6797:11:27"},{"kind":"number","nativeSrc":"6810:1:27","nodeType":"YulLiteral","src":"6810:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6793:3:27","nodeType":"YulIdentifier","src":"6793:3:27"},"nativeSrc":"6793:19:27","nodeType":"YulFunctionCall","src":"6793:19:27"}],"functionName":{"name":"and","nativeSrc":"6781:3:27","nodeType":"YulIdentifier","src":"6781:3:27"},"nativeSrc":"6781:32:27","nodeType":"YulFunctionCall","src":"6781:32:27"}],"functionName":{"name":"mstore","nativeSrc":"6754:6:27","nodeType":"YulIdentifier","src":"6754:6:27"},"nativeSrc":"6754:60:27","nodeType":"YulFunctionCall","src":"6754:60:27"},"nativeSrc":"6754:60:27","nodeType":"YulExpressionStatement","src":"6754:60:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6834:9:27","nodeType":"YulIdentifier","src":"6834:9:27"},{"kind":"number","nativeSrc":"6845:2:27","nodeType":"YulLiteral","src":"6845:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6830:3:27","nodeType":"YulIdentifier","src":"6830:3:27"},"nativeSrc":"6830:18:27","nodeType":"YulFunctionCall","src":"6830:18:27"},{"arguments":[{"name":"value2","nativeSrc":"6854:6:27","nodeType":"YulIdentifier","src":"6854:6:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6870:3:27","nodeType":"YulLiteral","src":"6870:3:27","type":"","value":"160"},{"kind":"number","nativeSrc":"6875:1:27","nodeType":"YulLiteral","src":"6875:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6866:3:27","nodeType":"YulIdentifier","src":"6866:3:27"},"nativeSrc":"6866:11:27","nodeType":"YulFunctionCall","src":"6866:11:27"},{"kind":"number","nativeSrc":"6879:1:27","nodeType":"YulLiteral","src":"6879:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6862:3:27","nodeType":"YulIdentifier","src":"6862:3:27"},"nativeSrc":"6862:19:27","nodeType":"YulFunctionCall","src":"6862:19:27"}],"functionName":{"name":"and","nativeSrc":"6850:3:27","nodeType":"YulIdentifier","src":"6850:3:27"},"nativeSrc":"6850:32:27","nodeType":"YulFunctionCall","src":"6850:32:27"}],"functionName":{"name":"mstore","nativeSrc":"6823:6:27","nodeType":"YulIdentifier","src":"6823:6:27"},"nativeSrc":"6823:60:27","nodeType":"YulFunctionCall","src":"6823:60:27"},"nativeSrc":"6823:60:27","nodeType":"YulExpressionStatement","src":"6823:60:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6903:9:27","nodeType":"YulIdentifier","src":"6903:9:27"},{"kind":"number","nativeSrc":"6914:2:27","nodeType":"YulLiteral","src":"6914:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6899:3:27","nodeType":"YulIdentifier","src":"6899:3:27"},"nativeSrc":"6899:18:27","nodeType":"YulFunctionCall","src":"6899:18:27"},{"name":"value3","nativeSrc":"6919:6:27","nodeType":"YulIdentifier","src":"6919:6:27"}],"functionName":{"name":"mstore","nativeSrc":"6892:6:27","nodeType":"YulIdentifier","src":"6892:6:27"},"nativeSrc":"6892:34:27","nodeType":"YulFunctionCall","src":"6892:34:27"},"nativeSrc":"6892:34:27","nodeType":"YulExpressionStatement","src":"6892:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6946:9:27","nodeType":"YulIdentifier","src":"6946:9:27"},{"kind":"number","nativeSrc":"6957:3:27","nodeType":"YulLiteral","src":"6957:3:27","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6942:3:27","nodeType":"YulIdentifier","src":"6942:3:27"},"nativeSrc":"6942:19:27","nodeType":"YulFunctionCall","src":"6942:19:27"},{"name":"value4","nativeSrc":"6963:6:27","nodeType":"YulIdentifier","src":"6963:6:27"}],"functionName":{"name":"mstore","nativeSrc":"6935:6:27","nodeType":"YulIdentifier","src":"6935:6:27"},"nativeSrc":"6935:35:27","nodeType":"YulFunctionCall","src":"6935:35:27"},"nativeSrc":"6935:35:27","nodeType":"YulExpressionStatement","src":"6935:35:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6990:9:27","nodeType":"YulIdentifier","src":"6990:9:27"},{"kind":"number","nativeSrc":"7001:3:27","nodeType":"YulLiteral","src":"7001:3:27","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6986:3:27","nodeType":"YulIdentifier","src":"6986:3:27"},"nativeSrc":"6986:19:27","nodeType":"YulFunctionCall","src":"6986:19:27"},{"name":"value5","nativeSrc":"7007:6:27","nodeType":"YulIdentifier","src":"7007:6:27"}],"functionName":{"name":"mstore","nativeSrc":"6979:6:27","nodeType":"YulIdentifier","src":"6979:6:27"},"nativeSrc":"6979:35:27","nodeType":"YulFunctionCall","src":"6979:35:27"},"nativeSrc":"6979:35:27","nodeType":"YulExpressionStatement","src":"6979:35:27"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6433:587:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6603:9:27","nodeType":"YulTypedName","src":"6603:9:27","type":""},{"name":"value5","nativeSrc":"6614:6:27","nodeType":"YulTypedName","src":"6614:6:27","type":""},{"name":"value4","nativeSrc":"6622:6:27","nodeType":"YulTypedName","src":"6622:6:27","type":""},{"name":"value3","nativeSrc":"6630:6:27","nodeType":"YulTypedName","src":"6630:6:27","type":""},{"name":"value2","nativeSrc":"6638:6:27","nodeType":"YulTypedName","src":"6638:6:27","type":""},{"name":"value1","nativeSrc":"6646:6:27","nodeType":"YulTypedName","src":"6646:6:27","type":""},{"name":"value0","nativeSrc":"6654:6:27","nodeType":"YulTypedName","src":"6654:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6665:4:27","nodeType":"YulTypedName","src":"6665:4:27","type":""}],"src":"6433:587:27"},{"body":{"nativeSrc":"7154:171:27","nodeType":"YulBlock","src":"7154:171:27","statements":[{"nativeSrc":"7164:26:27","nodeType":"YulAssignment","src":"7164:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"7176:9:27","nodeType":"YulIdentifier","src":"7176:9:27"},{"kind":"number","nativeSrc":"7187:2:27","nodeType":"YulLiteral","src":"7187:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7172:3:27","nodeType":"YulIdentifier","src":"7172:3:27"},"nativeSrc":"7172:18:27","nodeType":"YulFunctionCall","src":"7172:18:27"},"variableNames":[{"name":"tail","nativeSrc":"7164:4:27","nodeType":"YulIdentifier","src":"7164:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7206:9:27","nodeType":"YulIdentifier","src":"7206:9:27"},{"arguments":[{"name":"value0","nativeSrc":"7221:6:27","nodeType":"YulIdentifier","src":"7221:6:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7237:3:27","nodeType":"YulLiteral","src":"7237:3:27","type":"","value":"160"},{"kind":"number","nativeSrc":"7242:1:27","nodeType":"YulLiteral","src":"7242:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7233:3:27","nodeType":"YulIdentifier","src":"7233:3:27"},"nativeSrc":"7233:11:27","nodeType":"YulFunctionCall","src":"7233:11:27"},{"kind":"number","nativeSrc":"7246:1:27","nodeType":"YulLiteral","src":"7246:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7229:3:27","nodeType":"YulIdentifier","src":"7229:3:27"},"nativeSrc":"7229:19:27","nodeType":"YulFunctionCall","src":"7229:19:27"}],"functionName":{"name":"and","nativeSrc":"7217:3:27","nodeType":"YulIdentifier","src":"7217:3:27"},"nativeSrc":"7217:32:27","nodeType":"YulFunctionCall","src":"7217:32:27"}],"functionName":{"name":"mstore","nativeSrc":"7199:6:27","nodeType":"YulIdentifier","src":"7199:6:27"},"nativeSrc":"7199:51:27","nodeType":"YulFunctionCall","src":"7199:51:27"},"nativeSrc":"7199:51:27","nodeType":"YulExpressionStatement","src":"7199:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7270:9:27","nodeType":"YulIdentifier","src":"7270:9:27"},{"kind":"number","nativeSrc":"7281:2:27","nodeType":"YulLiteral","src":"7281:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7266:3:27","nodeType":"YulIdentifier","src":"7266:3:27"},"nativeSrc":"7266:18:27","nodeType":"YulFunctionCall","src":"7266:18:27"},{"arguments":[{"name":"value1","nativeSrc":"7290:6:27","nodeType":"YulIdentifier","src":"7290:6:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7306:3:27","nodeType":"YulLiteral","src":"7306:3:27","type":"","value":"160"},{"kind":"number","nativeSrc":"7311:1:27","nodeType":"YulLiteral","src":"7311:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7302:3:27","nodeType":"YulIdentifier","src":"7302:3:27"},"nativeSrc":"7302:11:27","nodeType":"YulFunctionCall","src":"7302:11:27"},{"kind":"number","nativeSrc":"7315:1:27","nodeType":"YulLiteral","src":"7315:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7298:3:27","nodeType":"YulIdentifier","src":"7298:3:27"},"nativeSrc":"7298:19:27","nodeType":"YulFunctionCall","src":"7298:19:27"}],"functionName":{"name":"and","nativeSrc":"7286:3:27","nodeType":"YulIdentifier","src":"7286:3:27"},"nativeSrc":"7286:32:27","nodeType":"YulFunctionCall","src":"7286:32:27"}],"functionName":{"name":"mstore","nativeSrc":"7259:6:27","nodeType":"YulIdentifier","src":"7259:6:27"},"nativeSrc":"7259:60:27","nodeType":"YulFunctionCall","src":"7259:60:27"},"nativeSrc":"7259:60:27","nodeType":"YulExpressionStatement","src":"7259:60:27"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"7025:300:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7115:9:27","nodeType":"YulTypedName","src":"7115:9:27","type":""},{"name":"value1","nativeSrc":"7126:6:27","nodeType":"YulTypedName","src":"7126:6:27","type":""},{"name":"value0","nativeSrc":"7134:6:27","nodeType":"YulTypedName","src":"7134:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7145:4:27","nodeType":"YulTypedName","src":"7145:4:27","type":""}],"src":"7025:300:27"},{"body":{"nativeSrc":"7487:188:27","nodeType":"YulBlock","src":"7487:188:27","statements":[{"nativeSrc":"7497:26:27","nodeType":"YulAssignment","src":"7497:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"7509:9:27","nodeType":"YulIdentifier","src":"7509:9:27"},{"kind":"number","nativeSrc":"7520:2:27","nodeType":"YulLiteral","src":"7520:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7505:3:27","nodeType":"YulIdentifier","src":"7505:3:27"},"nativeSrc":"7505:18:27","nodeType":"YulFunctionCall","src":"7505:18:27"},"variableNames":[{"name":"tail","nativeSrc":"7497:4:27","nodeType":"YulIdentifier","src":"7497:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7539:9:27","nodeType":"YulIdentifier","src":"7539:9:27"},{"arguments":[{"name":"value0","nativeSrc":"7554:6:27","nodeType":"YulIdentifier","src":"7554:6:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7570:3:27","nodeType":"YulLiteral","src":"7570:3:27","type":"","value":"160"},{"kind":"number","nativeSrc":"7575:1:27","nodeType":"YulLiteral","src":"7575:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7566:3:27","nodeType":"YulIdentifier","src":"7566:3:27"},"nativeSrc":"7566:11:27","nodeType":"YulFunctionCall","src":"7566:11:27"},{"kind":"number","nativeSrc":"7579:1:27","nodeType":"YulLiteral","src":"7579:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7562:3:27","nodeType":"YulIdentifier","src":"7562:3:27"},"nativeSrc":"7562:19:27","nodeType":"YulFunctionCall","src":"7562:19:27"}],"functionName":{"name":"and","nativeSrc":"7550:3:27","nodeType":"YulIdentifier","src":"7550:3:27"},"nativeSrc":"7550:32:27","nodeType":"YulFunctionCall","src":"7550:32:27"}],"functionName":{"name":"mstore","nativeSrc":"7532:6:27","nodeType":"YulIdentifier","src":"7532:6:27"},"nativeSrc":"7532:51:27","nodeType":"YulFunctionCall","src":"7532:51:27"},"nativeSrc":"7532:51:27","nodeType":"YulExpressionStatement","src":"7532:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7603:9:27","nodeType":"YulIdentifier","src":"7603:9:27"},{"kind":"number","nativeSrc":"7614:2:27","nodeType":"YulLiteral","src":"7614:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7599:3:27","nodeType":"YulIdentifier","src":"7599:3:27"},"nativeSrc":"7599:18:27","nodeType":"YulFunctionCall","src":"7599:18:27"},{"name":"value1","nativeSrc":"7619:6:27","nodeType":"YulIdentifier","src":"7619:6:27"}],"functionName":{"name":"mstore","nativeSrc":"7592:6:27","nodeType":"YulIdentifier","src":"7592:6:27"},"nativeSrc":"7592:34:27","nodeType":"YulFunctionCall","src":"7592:34:27"},"nativeSrc":"7592:34:27","nodeType":"YulExpressionStatement","src":"7592:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7646:9:27","nodeType":"YulIdentifier","src":"7646:9:27"},{"kind":"number","nativeSrc":"7657:2:27","nodeType":"YulLiteral","src":"7657:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7642:3:27","nodeType":"YulIdentifier","src":"7642:3:27"},"nativeSrc":"7642:18:27","nodeType":"YulFunctionCall","src":"7642:18:27"},{"name":"value2","nativeSrc":"7662:6:27","nodeType":"YulIdentifier","src":"7662:6:27"}],"functionName":{"name":"mstore","nativeSrc":"7635:6:27","nodeType":"YulIdentifier","src":"7635:6:27"},"nativeSrc":"7635:34:27","nodeType":"YulFunctionCall","src":"7635:34:27"},"nativeSrc":"7635:34:27","nodeType":"YulExpressionStatement","src":"7635:34:27"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"7330:345:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7440:9:27","nodeType":"YulTypedName","src":"7440:9:27","type":""},{"name":"value2","nativeSrc":"7451:6:27","nodeType":"YulTypedName","src":"7451:6:27","type":""},{"name":"value1","nativeSrc":"7459:6:27","nodeType":"YulTypedName","src":"7459:6:27","type":""},{"name":"value0","nativeSrc":"7467:6:27","nodeType":"YulTypedName","src":"7467:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7478:4:27","nodeType":"YulTypedName","src":"7478:4:27","type":""}],"src":"7330:345:27"},{"body":{"nativeSrc":"7781:102:27","nodeType":"YulBlock","src":"7781:102:27","statements":[{"nativeSrc":"7791:26:27","nodeType":"YulAssignment","src":"7791:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"7803:9:27","nodeType":"YulIdentifier","src":"7803:9:27"},{"kind":"number","nativeSrc":"7814:2:27","nodeType":"YulLiteral","src":"7814:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7799:3:27","nodeType":"YulIdentifier","src":"7799:3:27"},"nativeSrc":"7799:18:27","nodeType":"YulFunctionCall","src":"7799:18:27"},"variableNames":[{"name":"tail","nativeSrc":"7791:4:27","nodeType":"YulIdentifier","src":"7791:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7833:9:27","nodeType":"YulIdentifier","src":"7833:9:27"},{"arguments":[{"name":"value0","nativeSrc":"7848:6:27","nodeType":"YulIdentifier","src":"7848:6:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7864:3:27","nodeType":"YulLiteral","src":"7864:3:27","type":"","value":"160"},{"kind":"number","nativeSrc":"7869:1:27","nodeType":"YulLiteral","src":"7869:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7860:3:27","nodeType":"YulIdentifier","src":"7860:3:27"},"nativeSrc":"7860:11:27","nodeType":"YulFunctionCall","src":"7860:11:27"},{"kind":"number","nativeSrc":"7873:1:27","nodeType":"YulLiteral","src":"7873:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7856:3:27","nodeType":"YulIdentifier","src":"7856:3:27"},"nativeSrc":"7856:19:27","nodeType":"YulFunctionCall","src":"7856:19:27"}],"functionName":{"name":"and","nativeSrc":"7844:3:27","nodeType":"YulIdentifier","src":"7844:3:27"},"nativeSrc":"7844:32:27","nodeType":"YulFunctionCall","src":"7844:32:27"}],"functionName":{"name":"mstore","nativeSrc":"7826:6:27","nodeType":"YulIdentifier","src":"7826:6:27"},"nativeSrc":"7826:51:27","nodeType":"YulFunctionCall","src":"7826:51:27"},"nativeSrc":"7826:51:27","nodeType":"YulExpressionStatement","src":"7826:51:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"7680:203:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7750:9:27","nodeType":"YulTypedName","src":"7750:9:27","type":""},{"name":"value0","nativeSrc":"7761:6:27","nodeType":"YulTypedName","src":"7761:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7772:4:27","nodeType":"YulTypedName","src":"7772:4:27","type":""}],"src":"7680:203:27"},{"body":{"nativeSrc":"8017:145:27","nodeType":"YulBlock","src":"8017:145:27","statements":[{"nativeSrc":"8027:26:27","nodeType":"YulAssignment","src":"8027:26:27","value":{"arguments":[{"name":"headStart","nativeSrc":"8039:9:27","nodeType":"YulIdentifier","src":"8039:9:27"},{"kind":"number","nativeSrc":"8050:2:27","nodeType":"YulLiteral","src":"8050:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8035:3:27","nodeType":"YulIdentifier","src":"8035:3:27"},"nativeSrc":"8035:18:27","nodeType":"YulFunctionCall","src":"8035:18:27"},"variableNames":[{"name":"tail","nativeSrc":"8027:4:27","nodeType":"YulIdentifier","src":"8027:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8069:9:27","nodeType":"YulIdentifier","src":"8069:9:27"},{"arguments":[{"name":"value0","nativeSrc":"8084:6:27","nodeType":"YulIdentifier","src":"8084:6:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8100:3:27","nodeType":"YulLiteral","src":"8100:3:27","type":"","value":"160"},{"kind":"number","nativeSrc":"8105:1:27","nodeType":"YulLiteral","src":"8105:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"8096:3:27","nodeType":"YulIdentifier","src":"8096:3:27"},"nativeSrc":"8096:11:27","nodeType":"YulFunctionCall","src":"8096:11:27"},{"kind":"number","nativeSrc":"8109:1:27","nodeType":"YulLiteral","src":"8109:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"8092:3:27","nodeType":"YulIdentifier","src":"8092:3:27"},"nativeSrc":"8092:19:27","nodeType":"YulFunctionCall","src":"8092:19:27"}],"functionName":{"name":"and","nativeSrc":"8080:3:27","nodeType":"YulIdentifier","src":"8080:3:27"},"nativeSrc":"8080:32:27","nodeType":"YulFunctionCall","src":"8080:32:27"}],"functionName":{"name":"mstore","nativeSrc":"8062:6:27","nodeType":"YulIdentifier","src":"8062:6:27"},"nativeSrc":"8062:51:27","nodeType":"YulFunctionCall","src":"8062:51:27"},"nativeSrc":"8062:51:27","nodeType":"YulExpressionStatement","src":"8062:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8133:9:27","nodeType":"YulIdentifier","src":"8133:9:27"},{"kind":"number","nativeSrc":"8144:2:27","nodeType":"YulLiteral","src":"8144:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8129:3:27","nodeType":"YulIdentifier","src":"8129:3:27"},"nativeSrc":"8129:18:27","nodeType":"YulFunctionCall","src":"8129:18:27"},{"name":"value1","nativeSrc":"8149:6:27","nodeType":"YulIdentifier","src":"8149:6:27"}],"functionName":{"name":"mstore","nativeSrc":"8122:6:27","nodeType":"YulIdentifier","src":"8122:6:27"},"nativeSrc":"8122:34:27","nodeType":"YulFunctionCall","src":"8122:34:27"},"nativeSrc":"8122:34:27","nodeType":"YulExpressionStatement","src":"8122:34:27"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"7888:274:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7978:9:27","nodeType":"YulTypedName","src":"7978:9:27","type":""},{"name":"value1","nativeSrc":"7989:6:27","nodeType":"YulTypedName","src":"7989:6:27","type":""},{"name":"value0","nativeSrc":"7997:6:27","nodeType":"YulTypedName","src":"7997:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8008:4:27","nodeType":"YulTypedName","src":"8008:4:27","type":""}],"src":"7888:274:27"},{"body":{"nativeSrc":"8380:276:27","nodeType":"YulBlock","src":"8380:276:27","statements":[{"nativeSrc":"8390:27:27","nodeType":"YulAssignment","src":"8390:27:27","value":{"arguments":[{"name":"headStart","nativeSrc":"8402:9:27","nodeType":"YulIdentifier","src":"8402:9:27"},{"kind":"number","nativeSrc":"8413:3:27","nodeType":"YulLiteral","src":"8413:3:27","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8398:3:27","nodeType":"YulIdentifier","src":"8398:3:27"},"nativeSrc":"8398:19:27","nodeType":"YulFunctionCall","src":"8398:19:27"},"variableNames":[{"name":"tail","nativeSrc":"8390:4:27","nodeType":"YulIdentifier","src":"8390:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8433:9:27","nodeType":"YulIdentifier","src":"8433:9:27"},{"name":"value0","nativeSrc":"8444:6:27","nodeType":"YulIdentifier","src":"8444:6:27"}],"functionName":{"name":"mstore","nativeSrc":"8426:6:27","nodeType":"YulIdentifier","src":"8426:6:27"},"nativeSrc":"8426:25:27","nodeType":"YulFunctionCall","src":"8426:25:27"},"nativeSrc":"8426:25:27","nodeType":"YulExpressionStatement","src":"8426:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8471:9:27","nodeType":"YulIdentifier","src":"8471:9:27"},{"kind":"number","nativeSrc":"8482:2:27","nodeType":"YulLiteral","src":"8482:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8467:3:27","nodeType":"YulIdentifier","src":"8467:3:27"},"nativeSrc":"8467:18:27","nodeType":"YulFunctionCall","src":"8467:18:27"},{"name":"value1","nativeSrc":"8487:6:27","nodeType":"YulIdentifier","src":"8487:6:27"}],"functionName":{"name":"mstore","nativeSrc":"8460:6:27","nodeType":"YulIdentifier","src":"8460:6:27"},"nativeSrc":"8460:34:27","nodeType":"YulFunctionCall","src":"8460:34:27"},"nativeSrc":"8460:34:27","nodeType":"YulExpressionStatement","src":"8460:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8514:9:27","nodeType":"YulIdentifier","src":"8514:9:27"},{"kind":"number","nativeSrc":"8525:2:27","nodeType":"YulLiteral","src":"8525:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8510:3:27","nodeType":"YulIdentifier","src":"8510:3:27"},"nativeSrc":"8510:18:27","nodeType":"YulFunctionCall","src":"8510:18:27"},{"name":"value2","nativeSrc":"8530:6:27","nodeType":"YulIdentifier","src":"8530:6:27"}],"functionName":{"name":"mstore","nativeSrc":"8503:6:27","nodeType":"YulIdentifier","src":"8503:6:27"},"nativeSrc":"8503:34:27","nodeType":"YulFunctionCall","src":"8503:34:27"},"nativeSrc":"8503:34:27","nodeType":"YulExpressionStatement","src":"8503:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8557:9:27","nodeType":"YulIdentifier","src":"8557:9:27"},{"kind":"number","nativeSrc":"8568:2:27","nodeType":"YulLiteral","src":"8568:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8553:3:27","nodeType":"YulIdentifier","src":"8553:3:27"},"nativeSrc":"8553:18:27","nodeType":"YulFunctionCall","src":"8553:18:27"},{"name":"value3","nativeSrc":"8573:6:27","nodeType":"YulIdentifier","src":"8573:6:27"}],"functionName":{"name":"mstore","nativeSrc":"8546:6:27","nodeType":"YulIdentifier","src":"8546:6:27"},"nativeSrc":"8546:34:27","nodeType":"YulFunctionCall","src":"8546:34:27"},"nativeSrc":"8546:34:27","nodeType":"YulExpressionStatement","src":"8546:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8600:9:27","nodeType":"YulIdentifier","src":"8600:9:27"},{"kind":"number","nativeSrc":"8611:3:27","nodeType":"YulLiteral","src":"8611:3:27","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8596:3:27","nodeType":"YulIdentifier","src":"8596:3:27"},"nativeSrc":"8596:19:27","nodeType":"YulFunctionCall","src":"8596:19:27"},{"arguments":[{"name":"value4","nativeSrc":"8621:6:27","nodeType":"YulIdentifier","src":"8621:6:27"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8637:3:27","nodeType":"YulLiteral","src":"8637:3:27","type":"","value":"160"},{"kind":"number","nativeSrc":"8642:1:27","nodeType":"YulLiteral","src":"8642:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"8633:3:27","nodeType":"YulIdentifier","src":"8633:3:27"},"nativeSrc":"8633:11:27","nodeType":"YulFunctionCall","src":"8633:11:27"},{"kind":"number","nativeSrc":"8646:1:27","nodeType":"YulLiteral","src":"8646:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"8629:3:27","nodeType":"YulIdentifier","src":"8629:3:27"},"nativeSrc":"8629:19:27","nodeType":"YulFunctionCall","src":"8629:19:27"}],"functionName":{"name":"and","nativeSrc":"8617:3:27","nodeType":"YulIdentifier","src":"8617:3:27"},"nativeSrc":"8617:32:27","nodeType":"YulFunctionCall","src":"8617:32:27"}],"functionName":{"name":"mstore","nativeSrc":"8589:6:27","nodeType":"YulIdentifier","src":"8589:6:27"},"nativeSrc":"8589:61:27","nodeType":"YulFunctionCall","src":"8589:61:27"},"nativeSrc":"8589:61:27","nodeType":"YulExpressionStatement","src":"8589:61:27"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"8167:489:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8317:9:27","nodeType":"YulTypedName","src":"8317:9:27","type":""},{"name":"value4","nativeSrc":"8328:6:27","nodeType":"YulTypedName","src":"8328:6:27","type":""},{"name":"value3","nativeSrc":"8336:6:27","nodeType":"YulTypedName","src":"8336:6:27","type":""},{"name":"value2","nativeSrc":"8344:6:27","nodeType":"YulTypedName","src":"8344:6:27","type":""},{"name":"value1","nativeSrc":"8352:6:27","nodeType":"YulTypedName","src":"8352:6:27","type":""},{"name":"value0","nativeSrc":"8360:6:27","nodeType":"YulTypedName","src":"8360:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8371:4:27","nodeType":"YulTypedName","src":"8371:4:27","type":""}],"src":"8167:489:27"},{"body":{"nativeSrc":"8842:217:27","nodeType":"YulBlock","src":"8842:217:27","statements":[{"nativeSrc":"8852:27:27","nodeType":"YulAssignment","src":"8852:27:27","value":{"arguments":[{"name":"headStart","nativeSrc":"8864:9:27","nodeType":"YulIdentifier","src":"8864:9:27"},{"kind":"number","nativeSrc":"8875:3:27","nodeType":"YulLiteral","src":"8875:3:27","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8860:3:27","nodeType":"YulIdentifier","src":"8860:3:27"},"nativeSrc":"8860:19:27","nodeType":"YulFunctionCall","src":"8860:19:27"},"variableNames":[{"name":"tail","nativeSrc":"8852:4:27","nodeType":"YulIdentifier","src":"8852:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8895:9:27","nodeType":"YulIdentifier","src":"8895:9:27"},{"name":"value0","nativeSrc":"8906:6:27","nodeType":"YulIdentifier","src":"8906:6:27"}],"functionName":{"name":"mstore","nativeSrc":"8888:6:27","nodeType":"YulIdentifier","src":"8888:6:27"},"nativeSrc":"8888:25:27","nodeType":"YulFunctionCall","src":"8888:25:27"},"nativeSrc":"8888:25:27","nodeType":"YulExpressionStatement","src":"8888:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8933:9:27","nodeType":"YulIdentifier","src":"8933:9:27"},{"kind":"number","nativeSrc":"8944:2:27","nodeType":"YulLiteral","src":"8944:2:27","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8929:3:27","nodeType":"YulIdentifier","src":"8929:3:27"},"nativeSrc":"8929:18:27","nodeType":"YulFunctionCall","src":"8929:18:27"},{"arguments":[{"name":"value1","nativeSrc":"8953:6:27","nodeType":"YulIdentifier","src":"8953:6:27"},{"kind":"number","nativeSrc":"8961:4:27","nodeType":"YulLiteral","src":"8961:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"8949:3:27","nodeType":"YulIdentifier","src":"8949:3:27"},"nativeSrc":"8949:17:27","nodeType":"YulFunctionCall","src":"8949:17:27"}],"functionName":{"name":"mstore","nativeSrc":"8922:6:27","nodeType":"YulIdentifier","src":"8922:6:27"},"nativeSrc":"8922:45:27","nodeType":"YulFunctionCall","src":"8922:45:27"},"nativeSrc":"8922:45:27","nodeType":"YulExpressionStatement","src":"8922:45:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8987:9:27","nodeType":"YulIdentifier","src":"8987:9:27"},{"kind":"number","nativeSrc":"8998:2:27","nodeType":"YulLiteral","src":"8998:2:27","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8983:3:27","nodeType":"YulIdentifier","src":"8983:3:27"},"nativeSrc":"8983:18:27","nodeType":"YulFunctionCall","src":"8983:18:27"},{"name":"value2","nativeSrc":"9003:6:27","nodeType":"YulIdentifier","src":"9003:6:27"}],"functionName":{"name":"mstore","nativeSrc":"8976:6:27","nodeType":"YulIdentifier","src":"8976:6:27"},"nativeSrc":"8976:34:27","nodeType":"YulFunctionCall","src":"8976:34:27"},"nativeSrc":"8976:34:27","nodeType":"YulExpressionStatement","src":"8976:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9030:9:27","nodeType":"YulIdentifier","src":"9030:9:27"},{"kind":"number","nativeSrc":"9041:2:27","nodeType":"YulLiteral","src":"9041:2:27","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9026:3:27","nodeType":"YulIdentifier","src":"9026:3:27"},"nativeSrc":"9026:18:27","nodeType":"YulFunctionCall","src":"9026:18:27"},{"name":"value3","nativeSrc":"9046:6:27","nodeType":"YulIdentifier","src":"9046:6:27"}],"functionName":{"name":"mstore","nativeSrc":"9019:6:27","nodeType":"YulIdentifier","src":"9019:6:27"},"nativeSrc":"9019:34:27","nodeType":"YulFunctionCall","src":"9019:34:27"},"nativeSrc":"9019:34:27","nodeType":"YulExpressionStatement","src":"9019:34:27"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"8661:398:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8787:9:27","nodeType":"YulTypedName","src":"8787:9:27","type":""},{"name":"value3","nativeSrc":"8798:6:27","nodeType":"YulTypedName","src":"8798:6:27","type":""},{"name":"value2","nativeSrc":"8806:6:27","nodeType":"YulTypedName","src":"8806:6:27","type":""},{"name":"value1","nativeSrc":"8814:6:27","nodeType":"YulTypedName","src":"8814:6:27","type":""},{"name":"value0","nativeSrc":"8822:6:27","nodeType":"YulTypedName","src":"8822:6:27","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8833:4:27","nodeType":"YulTypedName","src":"8833:4:27","type":""}],"src":"8661:398:27"},{"body":{"nativeSrc":"9096:95:27","nodeType":"YulBlock","src":"9096:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9113:1:27","nodeType":"YulLiteral","src":"9113:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9120:3:27","nodeType":"YulLiteral","src":"9120:3:27","type":"","value":"224"},{"kind":"number","nativeSrc":"9125:10:27","nodeType":"YulLiteral","src":"9125:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9116:3:27","nodeType":"YulIdentifier","src":"9116:3:27"},"nativeSrc":"9116:20:27","nodeType":"YulFunctionCall","src":"9116:20:27"}],"functionName":{"name":"mstore","nativeSrc":"9106:6:27","nodeType":"YulIdentifier","src":"9106:6:27"},"nativeSrc":"9106:31:27","nodeType":"YulFunctionCall","src":"9106:31:27"},"nativeSrc":"9106:31:27","nodeType":"YulExpressionStatement","src":"9106:31:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9153:1:27","nodeType":"YulLiteral","src":"9153:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"9156:4:27","nodeType":"YulLiteral","src":"9156:4:27","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"9146:6:27","nodeType":"YulIdentifier","src":"9146:6:27"},"nativeSrc":"9146:15:27","nodeType":"YulFunctionCall","src":"9146:15:27"},"nativeSrc":"9146:15:27","nodeType":"YulExpressionStatement","src":"9146:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9177:1:27","nodeType":"YulLiteral","src":"9177:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"9180:4:27","nodeType":"YulLiteral","src":"9180:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9170:6:27","nodeType":"YulIdentifier","src":"9170:6:27"},"nativeSrc":"9170:15:27","nodeType":"YulFunctionCall","src":"9170:15:27"},"nativeSrc":"9170:15:27","nodeType":"YulExpressionStatement","src":"9170:15:27"}]},"name":"panic_error_0x21","nativeSrc":"9064:127:27","nodeType":"YulFunctionDefinition","src":"9064:127:27"},{"body":{"nativeSrc":"9244:174:27","nodeType":"YulBlock","src":"9244:174:27","statements":[{"nativeSrc":"9254:16:27","nodeType":"YulAssignment","src":"9254:16:27","value":{"arguments":[{"name":"x","nativeSrc":"9265:1:27","nodeType":"YulIdentifier","src":"9265:1:27"},{"name":"y","nativeSrc":"9268:1:27","nodeType":"YulIdentifier","src":"9268:1:27"}],"functionName":{"name":"add","nativeSrc":"9261:3:27","nodeType":"YulIdentifier","src":"9261:3:27"},"nativeSrc":"9261:9:27","nodeType":"YulFunctionCall","src":"9261:9:27"},"variableNames":[{"name":"sum","nativeSrc":"9254:3:27","nodeType":"YulIdentifier","src":"9254:3:27"}]},{"body":{"nativeSrc":"9301:111:27","nodeType":"YulBlock","src":"9301:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9322:1:27","nodeType":"YulLiteral","src":"9322:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9329:3:27","nodeType":"YulLiteral","src":"9329:3:27","type":"","value":"224"},{"kind":"number","nativeSrc":"9334:10:27","nodeType":"YulLiteral","src":"9334:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9325:3:27","nodeType":"YulIdentifier","src":"9325:3:27"},"nativeSrc":"9325:20:27","nodeType":"YulFunctionCall","src":"9325:20:27"}],"functionName":{"name":"mstore","nativeSrc":"9315:6:27","nodeType":"YulIdentifier","src":"9315:6:27"},"nativeSrc":"9315:31:27","nodeType":"YulFunctionCall","src":"9315:31:27"},"nativeSrc":"9315:31:27","nodeType":"YulExpressionStatement","src":"9315:31:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9366:1:27","nodeType":"YulLiteral","src":"9366:1:27","type":"","value":"4"},{"kind":"number","nativeSrc":"9369:4:27","nodeType":"YulLiteral","src":"9369:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"9359:6:27","nodeType":"YulIdentifier","src":"9359:6:27"},"nativeSrc":"9359:15:27","nodeType":"YulFunctionCall","src":"9359:15:27"},"nativeSrc":"9359:15:27","nodeType":"YulExpressionStatement","src":"9359:15:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9394:1:27","nodeType":"YulLiteral","src":"9394:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"9397:4:27","nodeType":"YulLiteral","src":"9397:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9387:6:27","nodeType":"YulIdentifier","src":"9387:6:27"},"nativeSrc":"9387:15:27","nodeType":"YulFunctionCall","src":"9387:15:27"},"nativeSrc":"9387:15:27","nodeType":"YulExpressionStatement","src":"9387:15:27"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"9285:1:27","nodeType":"YulIdentifier","src":"9285:1:27"},{"name":"sum","nativeSrc":"9288:3:27","nodeType":"YulIdentifier","src":"9288:3:27"}],"functionName":{"name":"gt","nativeSrc":"9282:2:27","nodeType":"YulIdentifier","src":"9282:2:27"},"nativeSrc":"9282:10:27","nodeType":"YulFunctionCall","src":"9282:10:27"},"nativeSrc":"9279:133:27","nodeType":"YulIf","src":"9279:133:27"}]},"name":"checked_add_t_uint256","nativeSrc":"9196:222:27","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9227:1:27","nodeType":"YulTypedName","src":"9227:1:27","type":""},{"name":"y","nativeSrc":"9230:1:27","nodeType":"YulTypedName","src":"9230:1:27","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"9236:3:27","nodeType":"YulTypedName","src":"9236:3:27","type":""}],"src":"9196:222:27"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(pos, i), 0x20), mload(add(add(value, i), 0x20)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value3 := value_1\n        let value_2 := calldataload(add(headStart, 128))\n        if iszero(eq(value_2, and(value_2, 0xff))) { revert(0, 0) }\n        value4 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 160))\n        value5 := value_3\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 192))\n        value6 := value_4\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3800":[{"length":32,"start":2647}],"3802":[{"length":32,"start":2605}],"3804":[{"length":32,"start":2563}],"3806":[{"length":32,"start":2728}],"3808":[{"length":32,"start":2768}],"3811":[{"length":32,"start":3216}],"3814":[{"length":32,"start":3261}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a217fddf11610097578063d539139311610071578063d539139314610394578063d547741f146103bb578063dd62ed3e146103ce578063e63ab1e91461040757600080fd5b8063a217fddf14610366578063a9059cbb1461036e578063d505accf1461038157600080fd5b80638456cb59116100d35780638456cb591461032857806384b0196e1461033057806391d148541461034b57806395d89b411461035e57600080fd5b806370a08231146102d957806379cc6790146103025780637ecebe001461031557600080fd5b8063313ce567116101665780633f4ba83a116101405780633f4ba83a146102a057806340c10f19146102a857806342966c68146102bb5780635c975abb146102ce57600080fd5b8063313ce567146102765780633644e5151461028557806336568abe1461028d57600080fd5b806318160ddd116101a257806318160ddd1461021957806323b872dd1461022b578063248a9ca31461023e5780632f2ff15d1461026157600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063095ea7b314610206575b600080fd5b6101dc6101d7366004611277565b61042e565b60405190151581526020015b60405180910390f35b6101f9610465565b6040516101e891906112ee565b6101dc61021436600461131d565b6104f7565b6002545b6040519081526020016101e8565b6101dc610239366004611347565b61050f565b61021d61024c366004611384565b60009081526006602052604090206001015490565b61027461026f36600461139d565b610533565b005b604051601281526020016101e8565b61021d61055e565b61027461029b36600461139d565b61056d565b6102746105a5565b6102746102b636600461131d565b6105da565b6102746102c9366004611384565b61060e565b60055460ff166101dc565b61021d6102e73660046113c9565b6001600160a01b031660009081526020819052604090205490565b61027461031036600461131d565b610618565b61021d6103233660046113c9565b610631565b61027461064f565b610338610681565b6040516101e897969594939291906113e4565b6101dc61035936600461139d565b6106c7565b6101f96106f2565b61021d600081565b6101dc61037c36600461131d565b610701565b61027461038f36600461147c565b61070f565b61021d7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102746103c936600461139d565b61084e565b61021d6103dc3660046114ef565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61021d7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216637965db0b60e01b148061045f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606003805461047490611519565b80601f01602080910402602001604051908101604052809291908181526020018280546104a090611519565b80156104ed5780601f106104c2576101008083540402835291602001916104ed565b820191906000526020600020905b8154815290600101906020018083116104d057829003601f168201915b5050505050905090565b600033610505818585610873565b5060019392505050565b60003361051d858285610880565b6105288585856108f9565b506001949350505050565b60008281526006602052604090206001015461054e81610958565b6105588383610962565b50505050565b60006105686109f6565b905090565b6001600160a01b03811633146105965760405163334bd91960e11b815260040160405180910390fd5b6105a08282610b21565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6105cf81610958565b6105d7610b8e565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661060481610958565b6105a08383610be0565b6105d73382610c16565b610623823383610880565b61062d8282610c16565b5050565b6001600160a01b03811660009081526009602052604081205461045f565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61067981610958565b6105d7610c4c565b600060608060008060006060610695610c89565b61069d610cb6565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606004805461047490611519565b6000336105058185856108f9565b834211156107385760405163313c898160e11b8152600481018590526024015b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107858c6001600160a01b0316600090815260096020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006107e082610ce3565b905060006107f082878787610d10565b9050896001600160a01b0316816001600160a01b031614610837576040516325c0072360e11b81526001600160a01b0380831660048301528b16602482015260440161072f565b6108428a8a8a610873565b50505050505050505050565b60008281526006602052604090206001015461086981610958565b6105588383610b21565b6105a08383836001610d3e565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561055857818110156108ea57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161072f565b61055884848484036000610d3e565b6001600160a01b03831661092357604051634b637e8f60e11b81526000600482015260240161072f565b6001600160a01b03821661094d5760405163ec442f0560e01b81526000600482015260240161072f565b6105a0838383610e13565b6105d78133610e1e565b600061096e83836106c7565b6109ee5760008381526006602090815260408083206001600160a01b03861684529091529020805460ff191660011790556109a63390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161045f565b50600061045f565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610a4f57507f000000000000000000000000000000000000000000000000000000000000000046145b15610a7957507f000000000000000000000000000000000000000000000000000000000000000090565b610568604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6000610b2d83836106c7565b156109ee5760008381526006602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600161045f565b610b96610e57565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610c0a5760405163ec442f0560e01b81526000600482015260240161072f565b61062d60008383610e13565b6001600160a01b038216610c4057604051634b637e8f60e11b81526000600482015260240161072f565b61062d82600083610e13565b610c54610e7c565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610bc33390565b60606105687f00000000000000000000000000000000000000000000000000000000000000006007610ea0565b60606105687f00000000000000000000000000000000000000000000000000000000000000006008610ea0565b600061045f610cf06109f6565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080610d2288888888610f4b565b925092509250610d32828261101a565b50909695505050505050565b6001600160a01b038416610d685760405163e602df0560e01b81526000600482015260240161072f565b6001600160a01b038316610d9257604051634a1406b160e11b81526000600482015260240161072f565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561055857826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e0591815260200190565b60405180910390a350505050565b6105a08383836110d3565b610e2882826106c7565b61062d5760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161072f565b60055460ff16610e7a57604051638dfc202b60e01b815260040160405180910390fd5b565b60055460ff1615610e7a5760405163d93c066560e01b815260040160405180910390fd5b606060ff8314610eba57610eb3836110e6565b905061045f565b818054610ec690611519565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef290611519565b8015610f3f5780601f10610f1457610100808354040283529160200191610f3f565b820191906000526020600020905b815481529060010190602001808311610f2257829003601f168201915b5050505050905061045f565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610f865750600091506003905082611010565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610fda573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661100657506000925060019150829050611010565b9250600091508190505b9450945094915050565b600082600381111561102e5761102e611553565b03611037575050565b600182600381111561104b5761104b611553565b036110695760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561107d5761107d611553565b0361109e5760405163fce698f760e01b81526004810182905260240161072f565b60038260038111156110b2576110b2611553565b0361062d576040516335e2f38360e21b81526004810182905260240161072f565b6110db610e7c565b6105a0838383611125565b606060006110f38361124f565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6001600160a01b0383166111505780600260008282546111459190611569565b909155506111c29050565b6001600160a01b038316600090815260208190526040902054818110156111a35760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161072f565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166111de576002805482900390556111fd565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161124291815260200190565b60405180910390a3505050565b600060ff8216601f81111561045f57604051632cd44ac360e21b815260040160405180910390fd5b60006020828403121561128957600080fd5b81356001600160e01b0319811681146112a157600080fd5b9392505050565b6000815180845260005b818110156112ce576020818501810151868301820152016112b2565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006112a160208301846112a8565b80356001600160a01b038116811461131857600080fd5b919050565b6000806040838503121561133057600080fd5b61133983611301565b946020939093013593505050565b60008060006060848603121561135c57600080fd5b61136584611301565b925061137360208501611301565b929592945050506040919091013590565b60006020828403121561139657600080fd5b5035919050565b600080604083850312156113b057600080fd5b823591506113c060208401611301565b90509250929050565b6000602082840312156113db57600080fd5b6112a182611301565b60ff60f81b8816815260e06020820152600061140360e08301896112a8565b828103604084015261141581896112a8565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b8181101561146b57835183526020938401939092019160010161144d565b50909b9a5050505050505050505050565b600080600080600080600060e0888a03121561149757600080fd5b6114a088611301565b96506114ae60208901611301565b95506040880135945060608801359350608088013560ff811681146114d257600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561150257600080fd5b61150b83611301565b91506113c060208401611301565b600181811c9082168061152d57607f821691505b60208210810361154d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b8082018082111561045f57634e487b7160e01b600052601160045260246000fdfea264697066735822122010c8dc4a860e15d8fe24e385972b1038d012ba058b4dc46ad55ade3f3bdb0c1e64736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x206 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1277 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH2 0x21D PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x55E JUMP JUMPDEST PUSH2 0x274 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x56D JUMP JUMPDEST PUSH2 0x274 PUSH2 0x5A5 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST PUSH2 0x274 PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1384 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x1DC JUMP JUMPDEST PUSH2 0x21D PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x310 CALLDATASIZE PUSH1 0x4 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x64F JUMP JUMPDEST PUSH2 0x338 PUSH2 0x681 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x21D PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x701 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH2 0x21D PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x3C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST PUSH2 0x21D PUSH2 0x3DC CALLDATASIZE PUSH1 0x4 PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x21D PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x45F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A0 SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x505 DUP2 DUP6 DUP6 PUSH2 0x873 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x51D DUP6 DUP3 DUP6 PUSH2 0x880 JUMP JUMPDEST PUSH2 0x528 DUP6 DUP6 DUP6 PUSH2 0x8F9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x54E DUP2 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x558 DUP4 DUP4 PUSH2 0x962 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x568 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A0 DUP3 DUP3 PUSH2 0xB21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x5CF DUP2 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x5D7 PUSH2 0xB8E JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x604 DUP2 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x5A0 DUP4 DUP4 PUSH2 0xBE0 JUMP JUMPDEST PUSH2 0x5D7 CALLER DUP3 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x623 DUP3 CALLER DUP4 PUSH2 0x880 JUMP JUMPDEST PUSH2 0x62D DUP3 DUP3 PUSH2 0xC16 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x45F JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x679 DUP2 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x5D7 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x695 PUSH2 0xC89 JUMP JUMPDEST PUSH2 0x69D PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x505 DUP2 DUP6 DUP6 PUSH2 0x8F9 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x738 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x785 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x7E0 DUP3 PUSH2 0xCE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7F0 DUP3 DUP8 DUP8 DUP8 PUSH2 0xD10 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72F JUMP JUMPDEST PUSH2 0x842 DUP11 DUP11 DUP11 PUSH2 0x873 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x869 DUP2 PUSH2 0x958 JUMP JUMPDEST PUSH2 0x558 DUP4 DUP4 PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x5A0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x558 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x72F JUMP JUMPDEST PUSH2 0x558 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x94D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH2 0x5A0 DUP4 DUP4 DUP4 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x5D7 DUP2 CALLER PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96E DUP4 DUP4 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x9EE JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x9A6 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x45F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x45F JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xA4F JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xA79 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x568 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2D DUP4 DUP4 PUSH2 0x6C7 JUMP JUMPDEST ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x45F JUMP JUMPDEST PUSH2 0xB96 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH2 0x62D PUSH1 0x0 DUP4 DUP4 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH2 0x62D DUP3 PUSH1 0x0 DUP4 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0xC54 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xBC3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x568 PUSH32 0x0 PUSH1 0x7 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x568 PUSH32 0x0 PUSH1 0x8 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45F PUSH2 0xCF0 PUSH2 0x9F6 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xD22 DUP9 DUP9 DUP9 DUP9 PUSH2 0xF4B JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xD32 DUP3 DUP3 PUSH2 0x101A JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD68 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD92 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x558 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE05 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x5A0 DUP4 DUP4 DUP4 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0xE28 DUP3 DUP3 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x62D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0xE7A JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE7A JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xEBA JUMPI PUSH2 0xEB3 DUP4 PUSH2 0x10E6 JUMP JUMPDEST SWAP1 POP PUSH2 0x45F JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xEC6 SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEF2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF3F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF14 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF3F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF22 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x45F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xF86 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1006 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1010 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x102E JUMPI PUSH2 0x102E PUSH2 0x1553 JUMP JUMPDEST SUB PUSH2 0x1037 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x104B JUMPI PUSH2 0x104B PUSH2 0x1553 JUMP JUMPDEST SUB PUSH2 0x1069 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x107D JUMPI PUSH2 0x107D PUSH2 0x1553 JUMP JUMPDEST SUB PUSH2 0x109E JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10B2 JUMPI PUSH2 0x10B2 PUSH2 0x1553 JUMP JUMPDEST SUB PUSH2 0x62D JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x72F JUMP JUMPDEST PUSH2 0x10DB PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x5A0 DUP4 DUP4 DUP4 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x10F3 DUP4 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1150 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1145 SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x11C2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x11A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x72F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11DE JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1242 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x12A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12CE JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x12B2 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x12A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1339 DUP4 PUSH2 0x1301 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x135C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1365 DUP5 PUSH2 0x1301 JUMP JUMPDEST SWAP3 POP PUSH2 0x1373 PUSH1 0x20 DUP6 ADD PUSH2 0x1301 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x13C0 PUSH1 0x20 DUP5 ADD PUSH2 0x1301 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A1 DUP3 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1403 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x12A8 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1415 DUP2 DUP10 PUSH2 0x12A8 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x146B JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x144D JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A0 DUP9 PUSH2 0x1301 JUMP JUMPDEST SWAP7 POP PUSH2 0x14AE PUSH1 0x20 DUP10 ADD PUSH2 0x1301 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x14D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x150B DUP4 PUSH2 0x1301 JUMP JUMPDEST SWAP2 POP PUSH2 0x13C0 PUSH1 0x20 DUP5 ADD PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x152D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x154D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x45F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0xC8 0xDC BLOBBASEFEE DUP7 0xE ISZERO 0xD8 INVALID 0x24 0xE3 DUP6 SWAP8 0x2B LT CODESIZE 0xD0 SLT 0xBA SDIV DUP12 0x4D 0xC4 PUSH11 0xD55ADE3F3BDB0C1E64736F PUSH13 0x634300081B0033000000000000 ","sourceMap":"593:1049:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:27;;463:22;445:41;;433:2;418:18;2541:202:0;;;;;;;;1760:89:4;;;:::i;:::-;;;;;;;:::i;3902:186::-;;;;;;:::i;:::-;;:::i;2803:97::-;2881:12;;2803:97;;;1756:25:27;;;1744:2;1729:18;2803:97:4;1610:177:27;4680:244:4;;;;;;:::i;:::-;;:::i;3786:120:0:-;;;;;;:::i;:::-;3851:7;3877:12;;;:6;:12;;;;;:22;;;;3786:120;4202:136;;;;;;:::i;:::-;;:::i;:::-;;2688:82:4;;;2761:2;3031:36:27;;3019:2;3004:18;2688:82:4;2889:184:27;2614:112:8;;;:::i;5304:245:0:-;;;;;;:::i;:::-;;:::i;1215:75:26:-;;;:::i;1296:105::-;;;;;;:::i;:::-;;:::i;618:87:6:-;;;;;;:::i;:::-;;:::i;1726:84:14:-;1796:7;;;;1726:84;;2933:116:4;;;;;;:::i;:::-;-1:-1:-1;;;;;3024:18:4;2998:7;3024:18;;;;;;;;;;;;2933:116;1021:158:6;;;;;;:::i;:::-;;:::i;2379:143:8:-;;;;;;:::i;:::-;;:::i;1138:71:26:-;;;:::i;5228:557:19:-;;;:::i;:::-;;;;;;;;;;;;;:::i;2830:136:0:-;;;;;;:::i;:::-;;:::i;1962:93:4:-;;;:::i;2196:49:0:-;;2241:4;2196:49;;3244:178:4;;;;;;:::i;:::-;;:::i;1668:672:8:-;;;;;;:::i;:::-;;:::i;763:62:26:-;;801:24;763:62;;4618:138:0;;;;;;:::i;:::-;;:::i;3455:140:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3561:18:4;;;3535:7;3561:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3455:140;695:62:26;;733:24;695:62;;2541:202:0;2626:4;-1:-1:-1;;;;;;2649:47:0;;-1:-1:-1;;;2649:47:0;;:87;;-1:-1:-1;;;;;;;;;;829:40:21;;;2700:36:0;2642:94;2541:202;-1:-1:-1;;2541:202:0:o;1760:89:4:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;735:10:11;4029:31:4;735:10:11;4045:7:4;4054:5;4029:8;:31::i;:::-;-1:-1:-1;4077:4:4;;3902:186;-1:-1:-1;;;3902:186:4:o;4680:244::-;4767:4;735:10:11;4823:37:4;4839:4;735:10:11;4854:5:4;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;-1:-1:-1;4913:4:4;;4680:244;-1:-1:-1;;;;4680:244:4:o;4202:136:0:-;3851:7;3877:12;;;:6;:12;;;;;:22;;;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;2614:112:8:-;2673:7;2699:20;:18;:20::i;:::-;2692:27;;2614:112;:::o;5304:245:0:-;-1:-1:-1;;;;;5397:34:0;;735:10:11;5397:34:0;5393:102;;5454:30;;-1:-1:-1;;;5454:30:0;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;1215:75:26:-;733:24;2473:16:0;2484:4;2473:10;:16::i;:::-;1273:10:26::1;:8;:10::i;:::-;1215:75:::0;:::o;1296:105::-;801:24;2473:16:0;2484:4;2473:10;:16::i;:::-;1377:17:26::1;1383:2;1387:6;1377:5;:17::i;618:87:6:-:0;672:26;735:10:11;692:5:6;672;:26::i;1021:158::-;1096:45;1112:7;735:10:11;1135:5:6;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;2379:143:8:-;-1:-1:-1;;;;;624:14:12;;2470:7:8;624:14:12;;;:7;:14;;;;;;2496:19:8;538:107:12;1138:71:26;733:24;2473:16:0;2484:4;2473:10;:16::i;:::-;1194:8:26::1;:6;:8::i;5228:557:19:-:0;5326:13;5353:18;5385:21;5420:15;5449:25;5488:12;5514:27;5617:13;:11;:13::i;:::-;5644:16;:14;:16::i;:::-;5752;;;5736:1;5752:16;;;;;;;;;-1:-1:-1;;;5566:212:19;;;-1:-1:-1;5566:212:19;;-1:-1:-1;5674:13:19;;-1:-1:-1;5709:4:19;;-1:-1:-1;5736:1:19;-1:-1:-1;5752:16:19;-1:-1:-1;5566:212:19;-1:-1:-1;5228:557:19:o;2830:136:0:-;2907:4;2930:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2930:29:0;;;;;;;;;;;;;;;2830:136::o;1962:93:4:-;2009:13;2041:7;2034:14;;;;;:::i;3244:178::-;3313:4;735:10:11;3367:27:4;735:10:11;3384:2:4;3388:5;3367:9;:27::i;1668:672:8:-;1889:8;1871:15;:26;1867:97;;;1920:33;;-1:-1:-1;;;1920:33:8;;;;;1756:25:27;;;1729:18;;1920:33:8;;;;;;;;1867:97;1974:18;1024:95;2033:5;2040:7;2049:5;2056:16;2066:5;-1:-1:-1;;;;;1121:14:12;819:7;1121:14;;;:7;:14;;;;;:16;;;;;;;;;759:395;2056:16:8;2005:78;;;;;;6720:25:27;;;;-1:-1:-1;;;;;6781:32:27;;;6761:18;;;6754:60;6850:32;;;;6830:18;;;6823:60;6899:18;;;6892:34;6942:19;;;6935:35;6986:19;;;6979:35;;;6692:19;;2005:78:8;;;;;;;;;;;;1995:89;;;;;;1974:110;;2095:12;2110:28;2127:10;2110:16;:28::i;:::-;2095:43;;2149:14;2166:28;2180:4;2186:1;2189;2192;2166:13;:28::i;:::-;2149:45;;2218:5;-1:-1:-1;;;;;2208:15:8;:6;-1:-1:-1;;;;;2208:15:8;;2204:88;;2246:35;;-1:-1:-1;;;2246:35:8;;-1:-1:-1;;;;;7217:32:27;;;2246:35:8;;;7199:51:27;7286:32;;7266:18;;;7259:60;7172:18;;2246:35:8;7025:300:27;2204:88:8;2302:31;2311:5;2318:7;2327:5;2302:8;:31::i;:::-;1857:483;;;1668:672;;;;;;;:::o;4618:138:0:-;3851:7;3877:12;;;:6;:12;;;;;:22;;;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;8630:128:4:-:0;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;10319:476::-;-1:-1:-1;;;;;3561:18:4;;;10418:24;3561:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10484:36:4;;10480:309;;;10559:5;10540:16;:24;10536:130;;;10591:60;;-1:-1:-1;;;10591:60:4;;-1:-1:-1;;;;;7550:32:27;;10591:60:4;;;7532:51:27;7599:18;;;7592:34;;;7642:18;;;7635:34;;;7505:18;;10591:60:4;7330:345:27;10536:130:4;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;5297:300::-;-1:-1:-1;;;;;5380:18:4;;5376:86;;5421:30;;-1:-1:-1;;;5421:30:4;;5448:1;5421:30;;;7826:51:27;7799:18;;5421:30:4;7680:203:27;5376:86:4;-1:-1:-1;;;;;5475:16:4;;5471:86;;5514:32;;-1:-1:-1;;;5514:32:4;;5543:1;5514:32;;;7826:51:27;7799:18;;5514:32:4;7680:203:27;5471:86:4;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;3175:103:0:-;3241:30;3252:4;735:10:11;3241::0;:30::i;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6291:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6291:29:0;;;;;;;;;:36;;-1:-1:-1;;6291:36:0;6323:4;6291:36;;;6373:12;735:10:11;;656:96;6373:12:0;-1:-1:-1;;;;;6346:40:0;6364:7;-1:-1:-1;;;;;6346:40:0;6358:4;6346:40;;;;;;;;;;-1:-1:-1;6407:4:0;6400:11;;6248:217;-1:-1:-1;6449:5:0;6442:12;;3945:262:19;3998:7;4029:4;-1:-1:-1;;;;;4038:11:19;4021:28;;:63;;;;;4070:14;4053:13;:31;4021:63;4017:184;;;-1:-1:-1;4107:22:19;;3945:262::o;4017:184::-;4167:23;4304:80;;;2079:95;4304:80;;;8426:25:27;4326:11:19;8467:18:27;;;8460:34;;;;4339:14:19;8510:18:27;;;8503:34;4355:13:19;8553:18:27;;;8546:34;4378:4:19;8596:19:27;;;8589:61;4268:7:19;;8398:19:27;;4304:80:19;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;6708:317:0;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6844:29:0;;;;;;;;;;:37;;-1:-1:-1;;6844:37:0;;;6900:40;735:10:11;;6844:12:0;;6900:40;;6876:5;6900:40;-1:-1:-1;6961:4:0;6954:11;;2586:117:14;1597:16;:14;:16::i;:::-;2644:7:::1;:15:::0;;-1:-1:-1;;2644:15:14::1;::::0;;2674:22:::1;735:10:11::0;2683:12:14::1;2674:22;::::0;-1:-1:-1;;;;;7844:32:27;;;7826:51;;7814:2;7799:18;2674:22:14::1;;;;;;;2586:117::o:0;7362:208:4:-;-1:-1:-1;;;;;7432:21:4;;7428:91;;7476:32;;-1:-1:-1;;;7476:32:4;;7505:1;7476:32;;;7826:51:27;7799:18;;7476:32:4;7680:203:27;7428:91:4;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;7888:206::-;-1:-1:-1;;;;;7958:21:4;;7954:89;;8002:30;;-1:-1:-1;;;8002:30:4;;8029:1;8002:30;;;7826:51:27;7799:18;;8002:30:4;7680:203:27;7954:89:4;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;2339:115:14:-;1350:19;:17;:19::i;:::-;2398:7:::1;:14:::0;;-1:-1:-1;;2398:14:14::1;2408:4;2398:14;::::0;;2427:20:::1;2434:12;735:10:11::0;;656:96;6105:126:19;6151:13;6183:41;:5;6210:13;6183:26;:41::i;6557:135::-;6606:13;6638:47;:8;6668:16;6638:29;:47::i;5017:176::-;5094:7;5120:66;5153:20;:18;:20::i;:::-;5175:10;4049:4:20;4043:11;-1:-1:-1;;;4067:23:20;;4119:4;4110:14;;4103:39;;;;4171:4;4162:14;;4155:34;4227:4;4212:20;;;3874:374;6887:260:18;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;-1:-1:-1;7131:9:18;;6887:260;-1:-1:-1;;;;;;6887:260:18:o;9605:432:4:-;-1:-1:-1;;;;;9717:19:4;;9713:89;;9759:32;;-1:-1:-1;;;9759:32:4;;9788:1;9759:32;;;7826:51:27;7799:18;;9759:32:4;7680:203:27;9713:89:4;-1:-1:-1;;;;;9815:21:4;;9811:90;;9859:31;;-1:-1:-1;;;9859:31:4;;9887:1;9859:31;;;7826:51:27;7799:18;;9859:31:4;7680:203:27;9811:90:4;-1:-1:-1;;;;;9910:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;9955:76;;;;10005:7;-1:-1:-1;;;;;9989:31:4;9998:5;-1:-1:-1;;;;;9989:31:4;;10014:5;9989:31;;;;1756:25:27;;1744:2;1729:18;;1610:177;9989:31:4;;;;;;;;9605:432;;;;:::o;1475:165:26:-;1603:30;1617:4;1623:2;1627:5;1603:13;:30::i;3408:197:0:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3541:47;;-1:-1:-1;;;3541:47:0;;-1:-1:-1;;;;;8080:32:27;;3541:47:0;;;8062:51:27;8129:18;;;8122:34;;;8035:18;;3541:47:0;7888:274:27;2078:126:14;1796:7;;;;2136:62;;2172:15;;-1:-1:-1;;;2172:15:14;;;;;;;;;;;2136:62;2078:126::o;1878:128::-;1796:7;;;;1939:61;;;1974:15;;-1:-1:-1;;;1974:15:14;;;;;;;;;;;3368:267:15;3462:13;1390:66;3491:46;;3487:142;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3487:142;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:1551:18;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:18;;-1:-1:-1;6385:30:18;;-1:-1:-1;6417:1:18;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;8888:25:27;;;8961:4;8949:17;;8929:18;;;8922:45;;;;8983:18;;;8976:34;;;9026:18;;;9019:34;;;6541:24:18;;8860:19:27;;6541:24:18;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:18;;-1:-1:-1;;6541:24:18;;;-1:-1:-1;;;;;;;6579:20:18;;6575:113;;-1:-1:-1;6631:1:18;;-1:-1:-1;6635:29:18;;-1:-1:-1;6631:1:18;;-1:-1:-1;6615:62:18;;6575:113;6706:6;-1:-1:-1;6714:20:18;;-1:-1:-1;6714:20:18;;-1:-1:-1;5203:1551:18;;;;;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:18;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:18;;;;;1756:25:27;;;1729:18;;7634:46:18;1610:177:27;7563:243:18;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:18;;;;;1756:25:27;;;1729:18;;7763:32:18;1610:177:27;1113:145:7;1350:19:14;:17;:19::i;:::-;1221:30:7::1;1235:4;1241:2;1245:5;1221:13;:30::i;2078:378:15:-:0;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:15;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:15;;;-1:-1:-1;2408:4:15;2399:14;;2392:28;;;;-1:-1:-1;2363:16:15;2078:378::o;5912:1107:4:-;-1:-1:-1;;;;;6001:18:4;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;5997:540:4;;-1:-1:-1;5997:540:4;;-1:-1:-1;;;;;6211:15:4;;6189:19;6211:15;;;;;;;;;;;6244:19;;;6240:115;;;6290:50;;-1:-1:-1;;;6290:50:4;;-1:-1:-1;;;;;7550:32:27;;6290:50:4;;;7532:51:27;7599:18;;;7592:34;;;7642:18;;;7635:34;;;7505:18;;6290:50:4;7330:345:27;6240:115:4;-1:-1:-1;;;;;6475:15:4;;:9;:15;;;;;;;;;;6493:19;;;;6475:37;;5997:540;-1:-1:-1;;;;;6551:16:4;;6547:425;;6714:12;:21;;;;;;;6547:425;;;-1:-1:-1;;;;;6925:13:4;;:9;:13;;;;;;;;;;:22;;;;;;6547:425;7002:2;-1:-1:-1;;;;;6987:25:4;6996:4;-1:-1:-1;;;;;6987:25:4;;7006:5;6987:25;;;;1756::27;;1744:2;1729:18;;1610:177;6987:25:4;;;;;;;;5912:1107;;;:::o;2528:245:15:-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:15;;;;;;;;;;;14:286:27;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:27;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:27:o;497:400::-;539:3;577:5;571:12;604:6;599:3;592:19;629:1;639:139;653:6;650:1;647:13;639:139;;;761:4;746:13;;;742:24;;736:31;716:11;;;712:22;;705:63;668:12;639:139;;;643:3;823:1;816:4;807:6;802:3;798:16;794:27;787:38;886:4;879:2;875:7;870:2;862:6;858:15;854:29;849:3;845:39;841:50;834:57;;;497:400;;;;:::o;902:220::-;1051:2;1040:9;1033:21;1014:4;1071:45;1112:2;1101:9;1097:18;1089:6;1071:45;:::i;1127:173::-;1195:20;;-1:-1:-1;;;;;1244:31:27;;1234:42;;1224:70;;1290:1;1287;1280:12;1224:70;1127:173;;;:::o;1305:300::-;1373:6;1381;1434:2;1422:9;1413:7;1409:23;1405:32;1402:52;;;1450:1;1447;1440:12;1402:52;1473:29;1492:9;1473:29;:::i;:::-;1463:39;1571:2;1556:18;;;;1543:32;;-1:-1:-1;;;1305:300:27:o;1792:374::-;1869:6;1877;1885;1938:2;1926:9;1917:7;1913:23;1909:32;1906:52;;;1954:1;1951;1944:12;1906:52;1977:29;1996:9;1977:29;:::i;:::-;1967:39;;2025:38;2059:2;2048:9;2044:18;2025:38;:::i;:::-;1792:374;;2015:48;;-1:-1:-1;;;2132:2:27;2117:18;;;;2104:32;;1792:374::o;2171:226::-;2230:6;2283:2;2271:9;2262:7;2258:23;2254:32;2251:52;;;2299:1;2296;2289:12;2251:52;-1:-1:-1;2344:23:27;;2171:226;-1:-1:-1;2171:226:27:o;2584:300::-;2652:6;2660;2713:2;2701:9;2692:7;2688:23;2684:32;2681:52;;;2729:1;2726;2719:12;2681:52;2774:23;;;-1:-1:-1;2840:38:27;2874:2;2859:18;;2840:38;:::i;:::-;2830:48;;2584:300;;;;;:::o;3309:186::-;3368:6;3421:2;3409:9;3400:7;3396:23;3392:32;3389:52;;;3437:1;3434;3427:12;3389:52;3460:29;3479:9;3460:29;:::i;3500:1238::-;3906:3;3901;3897:13;3889:6;3885:26;3874:9;3867:45;3948:3;3943:2;3932:9;3928:18;3921:31;3848:4;3975:46;4016:3;4005:9;4001:19;3993:6;3975:46;:::i;:::-;4069:9;4061:6;4057:22;4052:2;4041:9;4037:18;4030:50;4103:33;4129:6;4121;4103:33;:::i;:::-;4167:2;4152:18;;4145:34;;;-1:-1:-1;;;;;4216:32:27;;4210:3;4195:19;;4188:61;4236:3;4265:19;;4258:35;;;4330:22;;;4324:3;4309:19;;4302:51;4402:13;;4424:22;;;4474:2;4500:15;;;;-1:-1:-1;4462:15:27;;;;-1:-1:-1;4543:169:27;4557:6;4554:1;4551:13;4543:169;;;4618:13;;4606:26;;4661:2;4687:15;;;;4652:12;;;;4579:1;4572:9;4543:169;;;-1:-1:-1;4729:3:27;;3500:1238;-1:-1:-1;;;;;;;;;;;3500:1238:27:o;4743:903::-;4854:6;4862;4870;4878;4886;4894;4902;4955:3;4943:9;4934:7;4930:23;4926:33;4923:53;;;4972:1;4969;4962:12;4923:53;4995:29;5014:9;4995:29;:::i;:::-;4985:39;;5043:38;5077:2;5066:9;5062:18;5043:38;:::i;:::-;5033:48;-1:-1:-1;5150:2:27;5135:18;;5122:32;;-1:-1:-1;5251:2:27;5236:18;;5223:32;;-1:-1:-1;5333:3:27;5318:19;;5305:33;5382:4;5369:18;;5357:31;;5347:59;;5402:1;5399;5392:12;5347:59;4743:903;;;;-1:-1:-1;4743:903:27;;;;5425:7;5505:3;5490:19;;5477:33;;-1:-1:-1;5609:3:27;5594:19;;;5581:33;;4743:903;-1:-1:-1;;4743:903:27:o;5651:260::-;5719:6;5727;5780:2;5768:9;5759:7;5755:23;5751:32;5748:52;;;5796:1;5793;5786:12;5748:52;5819:29;5838:9;5819:29;:::i;:::-;5809:39;;5867:38;5901:2;5890:9;5886:18;5867:38;:::i;5916:380::-;5995:1;5991:12;;;;6038;;;6059:61;;6113:4;6105:6;6101:17;6091:27;;6059:61;6166:2;6158:6;6155:14;6135:18;6132:38;6129:161;;6212:10;6207:3;6203:20;6200:1;6193:31;6247:4;6244:1;6237:15;6275:4;6272:1;6265:15;6129:161;;5916:380;;;:::o;9064:127::-;9125:10;9120:3;9116:20;9113:1;9106:31;9156:4;9153:1;9146:15;9180:4;9177:1;9170:15;9196:222;9261:9;;;9282:10;;;9279:133;;;9334:10;9329:3;9325:20;9322:1;9315:31;9369:4;9366:1;9359:15;9397:4;9394:1;9387:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MINTER_ROLE()":"d5391393","PAUSER_ROLE()":"e63ab1e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","eip712Domain()":"84b0196e","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"veeramehta09@gmail.com\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GreenHydrogenCredit.sol\":\"GreenHydrogenCredit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/GreenHydrogenCredit.sol\":{\"keccak256\":\"0x09091d753820d6e9480c53b16e112e9c4fecef1cf1e21feff178f603d9698472\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e96e1835ff8af1a89c7ee49a7de6964e09b792ec4b808f73ab15e69a72387f81\",\"dweb:/ipfs/QmRWh38nkX4GD3YdMum5LzLEYTnxvVKjKGqbcwXpm4fTmq\"]}},\"version\":1}"}}}}}